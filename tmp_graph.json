{'exposures': {'exposure.tpch.returned_orders': {'name': 'returned_orders', 'resource_type': 'exposure', 'package_name': 'tpch', 'path': 'marts/aggregates/aggregates.yml', 'original_file_path': 'models/marts/aggregates/aggregates.yml', 'unique_id': 'exposure.tpch.returned_orders', 'fqn': ['tpch', 'marts', 'aggregates', 'returned_orders'], 'type': 'dashboard', 'owner': {'email': 'sales-ops@dbtlabs.com', 'name': 'Sales Ops'}, 'description': 'How is our return rate trending over time?', 'label': None, 'maturity': 'high', 'meta': {}, 'tags': [], 'config': {'enabled': True}, 'unrendered_config': {}, 'url': 'https://fishtown.looker.com/dashboards/663', 'depends_on': {'macros': [], 'nodes': ['model.tpch.agg_returned_orders_by_month']}, 'refs': [{'name': 'agg_returned_orders_by_month', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'created_at': 1706652806.1158044}, 'exposure.tpch.active_orders': {'name': 'active_orders', 'resource_type': 'exposure', 'package_name': 'tpch', 'path': 'marts/aggregates/aggregates.yml', 'original_file_path': 'models/marts/aggregates/aggregates.yml', 'unique_id': 'exposure.tpch.active_orders', 'fqn': ['tpch', 'marts', 'aggregates', 'active_orders'], 'type': 'dashboard', 'owner': {'email': 'isabela@dbtlabs.com', 'name': 'Isabela'}, 'description': 'Did someone say "exponential growth"?', 'label': None, 'maturity': 'high', 'meta': {}, 'tags': [], 'config': {'enabled': True}, 'unrendered_config': {}, 'url': 'https://fishtown.looker.com/dashboards/493', 'depends_on': {'macros': [], 'nodes': ['model.tpch.fct_orders', 'model.tpch.dim_suppliers']}, 'refs': [{'name': 'fct_orders', 'package': None, 'version': None}, {'name': 'dim_suppliers', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'created_at': 1706652806.1198678}, 'exposure.tpch.business_pulse': {'name': 'business_pulse', 'resource_type': 'exposure', 'package_name': 'tpch', 'path': 'marts/aggregates/aggregates.yml', 'original_file_path': 'models/marts/aggregates/aggregates.yml', 'unique_id': 'exposure.tpch.business_pulse', 'fqn': ['tpch', 'marts', 'aggregates', 'business_pulse'], 'type': 'dashboard', 'owner': {'email': 'bizops@dbtlabs.com', 'name': 'Business Operations Team'}, 'description': 'Business Pulse for use by anyone looking to get insights on orders.', 'label': None, 'maturity': 'high', 'meta': {}, 'tags': [], 'config': {'enabled': True}, 'unrendered_config': {}, 'url': 'https://public.tableau.com/app/profile/mike.burke2608/viz/BDLDemo/BusinessPulse_1', 'depends_on': {'macros': [], 'nodes': ['model.tpch.fct_orders', 'model.tpch.dim_suppliers', 'model.tpch.dim_customers']}, 'refs': [{'name': 'fct_orders', 'package': None, 'version': None}, {'name': 'dim_suppliers', 'package': None, 'version': None}, {'name': 'dim_customers', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'created_at': 1706652806.123317}, 'exposure.tpch.yearly_part_rollup': {'name': 'yearly_part_rollup', 'resource_type': 'exposure', 'package_name': 'tpch', 'path': 'marts/aggregates/aggregates.yml', 'original_file_path': 'models/marts/aggregates/aggregates.yml', 'unique_id': 'exposure.tpch.yearly_part_rollup', 'fqn': ['tpch', 'marts', 'aggregates', 'yearly_part_rollup'], 'type': 'dashboard', 'owner': {'email': 'dbtuserbob@getdbt.com', 'name': 'DBT User Bob'}, 'description': 'Rollup of orders', 'label': None, 'maturity': 'high', 'meta': {}, 'tags': [], 'config': {'enabled': True}, 'unrendered_config': {}, 'url': 'https://example.com', 'depends_on': {'macros': [], 'nodes': ['model.tpch.agg_ship_modes_dynamic_pivot']}, 'refs': [{'name': 'agg_ship_modes_dynamic_pivot', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'created_at': 1706652806.127087}}, 'groups': {}, 'metrics': {'metric.tpch.revenue': {'name': 'revenue', 'resource_type': 'metric', 'package_name': 'tpch', 'path': 'metrics_demo/metrics.yml', 'original_file_path': 'models/metrics_demo/metrics.yml', 'unique_id': 'metric.tpch.revenue', 'fqn': ['tpch', 'metrics_demo', 'revenue'], 'description': '', 'label': 'test', 'type': 'simple', 'type_params': {'measure': {'name': 'total_price', 'filter': None, 'alias': None, 'join_to_timespine': False, 'fill_nulls_with': None}, 'input_measures': [{'name': 'total_price', 'filter': None, 'alias': None, 'join_to_timespine': False, 'fill_nulls_with': None}], 'numerator': None, 'denominator': None, 'expr': None, 'window': None, 'grain_to_date': None, 'metrics': []}, 'filter': None, 'metadata': None, 'meta': {}, 'tags': [], 'config': {'enabled': True, 'group': None}, 'unrendered_config': {}, 'sources': [], 'depends_on': {'macros': [], 'nodes': ['semantic_model.tpch.pizza_orders']}, 'refs': [], 'metrics': [], 'created_at': 1706652806.0828068, 'group': None}}, 'nodes': {'model.tpch.xp_ref_sample': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'xp_ref_sample', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'xp_ref_demo/xp_ref_sample.sql', 'original_file_path': 'models/xp_ref_demo/xp_ref_sample.sql', 'unique_id': 'model.tpch.xp_ref_sample', 'fqn': ['tpch', 'xp_ref_demo', 'xp_ref_sample'], 'alias': 'xp_ref_sample', 'checksum': {'name': 'sha256', 'checksum': '7cad7cd4d102b68ca4aac5837b86bf507a05e2e99eba974abb922d6135dce35a'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1707339652.301793, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.xp_ref_sample', 'raw_code': "select * from {{ ref('pizza_hq', 'lkp_pizza_sizes') }}", 'language': 'sql', 'refs': [{'name': 'lkp_pizza_sizes', 'package': 'pizza_hq', 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.pizza_hq.lkp_pizza_sizes']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.v_stg_inventory': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'v_stg_inventory', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/stage/v_stg_inventory.sql', 'original_file_path': 'models/dv_demo/stage/v_stg_inventory.sql', 'unique_id': 'model.tpch.v_stg_inventory', 'fqn': ['tpch', 'dv_demo', 'stage', 'v_stg_inventory'], 'alias': 'v_stg_inventory', 'checksum': {'name': 'sha256', 'checksum': '576b13dfd1e86958d788e68a0b3782586dd41ec5cd23933be313e460fd9b762e'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.1606743, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.v_stg_inventory', 'raw_code': "{%- set yaml_metadata -%}\nsource_model: 'raw_inventory'\nderived_columns:\n  NATION_KEY: 'SUPPLIER_NATION_KEY'\n  REGION_KEY: 'SUPPLIER_REGION_KEY'\n  RECORD_SOURCE: '!TPCH-INVENTORY'\nhashed_columns:\n  SUPPLIER_PK: 'SUPPLIERKEY'\n  SUPPLIER_NATION_PK: 'SUPPLIER_NATION_KEY'\n  SUPPLIER_REGION_PK: 'SUPPLIER_REGION_KEY'\n  REGION_PK: 'SUPPLIER_REGION_KEY'\n  NATION_PK: 'SUPPLIER_NATION_KEY'\n  NATION_REGION_PK:\n    - 'SUPPLIER_NATION_KEY'\n    - 'SUPPLIER_REGION_KEY'\n  LINK_SUPPLIER_NATION_PK:\n    - 'SUPPLIERKEY'\n    - 'SUPPLIER_NATION_KEY'\n  PART_PK: 'PARTKEY'\n  INVENTORY_PK:\n    - 'PARTKEY'\n    - 'SUPPLIERKEY'\n  SUPPLIER_HASHDIFF:\n    is_hashdiff: true\n    columns:\n      - 'SUPPLIERKEY'\n      - 'SUPPLIER_ACCTBAL'\n      - 'SUPPLIER_ADDRESS'\n      - 'SUPPLIER_PHONE'\n      - 'SUPPLIER_COMMENT'\n      - 'SUPPLIER_NAME'\n  PART_HASHDIFF:\n    is_hashdiff: true\n    columns:\n      - 'PARTKEY'\n      - 'PART_BRAND'\n      - 'PART_COMMENT'\n      - 'PART_CONTAINER'\n      - 'PART_MFGR'\n      - 'PART_NAME'\n      - 'PART_RETAILPRICE'\n      - 'PART_SIZE'\n      - 'PART_TYPE'\n  SUPPLIER_REGION_HASHDIFF:\n    is_hashdiff: true\n    columns:\n      - 'SUPPLIER_REGION_KEY'\n      - 'SUPPLIER_REGION_COMMENT'\n      - 'SUPPLIER_REGION_NAME'\n  SUPPLIER_NATION_HASHDIFF:\n    is_hashdiff: true\n    columns:\n      - 'SUPPLIER_NATION_KEY'\n      - 'SUPPLIER_NATION_COMMENT'\n      - 'SUPPLIER_NATION_NAME'\n  INVENTORY_HASHDIFF:\n    is_hashdiff: true\n    columns:\n      - 'PARTKEY'\n      - 'SUPPLIERKEY'\n      - 'AVAILQTY'\n      - 'SUPPLYCOST'\n      - 'PART_SUPPLY_COMMENT'\n{%- endset -%}\n\n{% set metadata_dict = fromyaml(yaml_metadata) %}\n\n{% set source_model = metadata_dict['source_model'] %}\n\n{% set derived_columns = metadata_dict['derived_columns'] %}\n\n{% set hashed_columns = metadata_dict['hashed_columns'] %}\n\n\nWITH staging AS (\n{{ automate_dv.stage(include_source_columns=true,\n                  source_model=source_model,\n                  derived_columns=derived_columns,\n                  hashed_columns=hashed_columns,\n                  ranked_columns=none) }}\n)\n\nSELECT *, \n       TO_DATE('{{ var('load_date') }}') AS LOAD_DATE,\n       TO_DATE('{{ var('load_date') }}') AS EFFECTIVE_FROM\nFROM staging", 'language': 'sql', 'refs': [{'name': 'raw_inventory', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.stage'], 'nodes': ['model.tpch.raw_inventory']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.v_stg_transactions': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'v_stg_transactions', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/stage/v_stg_transactions.sql', 'original_file_path': 'models/dv_demo/stage/v_stg_transactions.sql', 'unique_id': 'model.tpch.v_stg_transactions', 'fqn': ['tpch', 'dv_demo', 'stage', 'v_stg_transactions'], 'alias': 'v_stg_transactions', 'checksum': {'name': 'sha256', 'checksum': '99bdd345d9e3c4aa631a0cfaab313b49130313b5759e013526fabc8a32394d67'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.3429716, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.v_stg_transactions', 'raw_code': "{%- set yaml_metadata -%}\nsource_model: 'raw_transactions'\nderived_columns:\n  RECORD_SOURCE: '!RAW_TRANSACTIONS'\n  LOAD_DATE: DATEADD(DAY, 1, TRANSACTION_DATE)\n  EFFECTIVE_FROM: 'TRANSACTION_DATE'\nhashed_columns:\n  TRANSACTION_PK:\n    - 'CUSTOMER_ID'\n    - 'TRANSACTION_NUMBER'\n  CUSTOMER_PK: 'CUSTOMER_ID'\n  ORDER_PK: 'ORDER_ID'\n{%- endset -%}\n\n{% set metadata_dict = fromyaml(yaml_metadata) %}\n\n{% set source_model = metadata_dict['source_model'] %}\n\n{% set derived_columns = metadata_dict['derived_columns'] %}\n\n{% set hashed_columns = metadata_dict['hashed_columns'] %}\n\n{{ automate_dv.stage(include_source_columns=true,\n                  source_model=source_model,\n                  derived_columns=derived_columns,\n                  hashed_columns=hashed_columns,\n                  ranked_columns=none) }}", 'language': 'sql', 'refs': [{'name': 'raw_transactions', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.stage'], 'nodes': ['model.tpch.raw_transactions']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.v_stg_orders': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'v_stg_orders', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/stage/v_stg_orders.sql', 'original_file_path': 'models/dv_demo/stage/v_stg_orders.sql', 'unique_id': 'model.tpch.v_stg_orders', 'fqn': ['tpch', 'dv_demo', 'stage', 'v_stg_orders'], 'alias': 'v_stg_orders', 'checksum': {'name': 'sha256', 'checksum': 'a13eecd75bcd73a7a6595623d6deda8c10e95ea7e74ab034d3330cd9bd82d4b4'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.4197934, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.v_stg_orders', 'raw_code': "{%- set yaml_metadata -%}\nsource_model: 'raw_orders'\nderived_columns:\n  CUSTOMER_KEY: 'CUSTOMERKEY'\n  NATION_KEY: 'CUSTOMER_NATION_KEY'\n  REGION_KEY: 'CUSTOMER_REGION_KEY'\n  RECORD_SOURCE: '!TPCH-ORDERS'\n  EFFECTIVE_FROM: 'ORDERDATE'\nhashed_columns:\n  CUSTOMER_PK: 'CUSTOMER_KEY'\n  LINK_CUSTOMER_NATION_PK:\n    - 'CUSTOMER_KEY'\n    - 'CUSTOMER_NATION_KEY'\n  CUSTOMER_NATION_PK: 'CUSTOMER_NATION_KEY'\n  CUSTOMER_REGION_PK: 'CUSTOMER_REGION_KEY'\n  NATION_PK: 'CUSTOMER_NATION_KEY'\n  REGION_PK: 'CUSTOMER_REGION_KEY'\n  NATION_REGION_PK:\n    - 'CUSTOMER_NATION_KEY'\n    - 'CUSTOMER_REGION_KEY'\n  ORDER_PK: 'ORDERKEY'\n  ORDER_CUSTOMER_PK:\n    - 'CUSTOMER_KEY'\n    - 'ORDERKEY'\n  LINEITEM_PK:\n    - 'ORDERKEY'\n    - 'LINENUMBER'\n  LINK_LINEITEM_ORDER_PK:\n    - 'ORDERKEY'\n    - 'ORDERKEY'\n    - 'LINENUMBER'\n  PART_PK: 'PARTKEY'\n  SUPPLIER_PK: 'SUPPLIERKEY'\n  INVENTORY_PK:\n    - 'PARTKEY'\n    - 'SUPPLIERKEY'\n  INVENTORY_ALLOCATION_PK:\n    - 'LINENUMBER'\n    - 'PARTKEY'\n    - 'SUPPLIERKEY'\n  CUSTOMER_HASHDIFF:\n    is_hashdiff: true\n    columns:\n      - 'CUSTOMER_KEY'\n      - 'CUSTOMER_NAME'\n      - 'CUSTOMER_ADDRESS'\n      - 'CUSTOMER_PHONE'\n      - 'CUSTOMER_ACCBAL'\n      - 'CUSTOMER_MKTSEGMENT'\n      - 'CUSTOMER_COMMENT'\n  CUSTOMER_NATION_HASHDIFF:\n    is_hashdiff: true\n    columns:\n      - 'CUSTOMER_NATION_NAME'\n      - 'CUSTOMER_NATION_COMMENT'\n      - 'CUSTOMER_NATION_KEY'\n  CUSTOMER_REGION_HASHDIFF:\n    is_hashdiff: true\n    columns:\n      - 'CUSTOMER_REGION_NAME'\n      - 'CUSTOMER_REGION_COMMENT'\n      - 'CUSTOMER_REGION_KEY'\n  LINEITEM_HASHDIFF:\n    is_hashdiff: true\n    columns:\n      - 'ORDERKEY'\n      - 'LINENUMBER'\n      - 'COMMITDATE'\n      - 'DISCOUNT'\n      - 'EXTENDEDPRICE'\n      - 'LINESTATUS'\n      - 'LINE_COMMENT'\n      - 'QUANTITY'\n      - 'RECEIPTDATE'\n      - 'RETURNFLAG'\n      - 'SHIPDATE'\n      - 'SHIPINSTRUCT'\n      - 'SHIPMODE'\n      - 'TAX'\n  ORDER_HASHDIFF:\n    is_hashdiff: true\n    columns:\n      - 'ORDERKEY'\n      - 'CLERK'\n      - 'ORDERDATE'\n      - 'ORDERPRIORITY'\n      - 'ORDERSTATUS'\n      - 'ORDER_COMMENT'\n      - 'SHIPPRIORITY'\n      - 'TOTALPRICE'\n{%- endset -%}\n\n{% set metadata_dict = fromyaml(yaml_metadata) %}\n\n{% set source_model = metadata_dict['source_model'] %}\n\n{% set derived_columns = metadata_dict['derived_columns'] %}\n\n{% set hashed_columns = metadata_dict['hashed_columns'] %}\n\nWITH staging AS (\n{{ automate_dv.stage(include_source_columns=true,\n                  source_model=source_model,\n                  derived_columns=derived_columns,\n                  hashed_columns=hashed_columns,\n                  ranked_columns=none) }}\n)\n\nSELECT *,\n       TO_DATE('{{ var('load_date') }}') AS LOAD_DATE\nFROM staging", 'language': 'sql', 'refs': [{'name': 'raw_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.stage'], 'nodes': ['model.tpch.raw_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.t_link_transactions': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 't_link_transactions', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/t_links/t_link_transactions.sql', 'original_file_path': 'models/dv_demo/raw_vault/t_links/t_link_transactions.sql', 'unique_id': 'model.tpch.t_link_transactions', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 't_links', 't_link_transactions'], 'alias': 't_link_transactions', 'checksum': {'name': 'sha256', 'checksum': 'a028ae08fbead500e4837aa1a56bdf9ba4082e6776b66297fefd1ff88cc5ffc6'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.4844062, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.t_link_transactions', 'raw_code': '{%- set source_model = "v_stg_transactions" -%}\n{%- set src_pk = "TRANSACTION_PK" -%}\n{%- set src_fk = ["CUSTOMER_PK", "ORDER_PK"] -%}\n{%- set src_payload = ["TRANSACTION_NUMBER", "TRANSACTION_DATE", "TYPE", "AMOUNT"] -%}\n{%- set src_eff = "EFFECTIVE_FROM" -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.t_link(src_pk=src_pk, src_fk=src_fk, src_ldts=src_ldts,\n                   src_payload=src_payload, src_eff=src_eff,\n                   src_source=src_source, source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_transactions', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.t_link'], 'nodes': ['model.tpch.v_stg_transactions']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.hub_supplier': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'hub_supplier', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/hubs/hub_supplier.sql', 'original_file_path': 'models/dv_demo/raw_vault/hubs/hub_supplier.sql', 'unique_id': 'model.tpch.hub_supplier', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'hubs', 'hub_supplier'], 'alias': 'hub_supplier', 'checksum': {'name': 'sha256', 'checksum': '05233c7d6e2b19a98aec6ae5f5dfc3f39358da9921f2e9b7ca7759ce912a8b8a'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.548465, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.hub_supplier', 'raw_code': '{%- set source_model = ["v_stg_orders", "v_stg_inventory"] -%}\n{%- set src_pk = "SUPPLIER_PK" -%}\n{%- set src_nk = "SUPPLIERKEY" -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.hub(src_pk=src_pk, src_nk=src_nk, src_ldts=src_ldts,\n                src_source=src_source, source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_orders', 'package': None, 'version': None}, {'name': 'v_stg_inventory', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.hub'], 'nodes': ['model.tpch.v_stg_orders', 'model.tpch.v_stg_inventory']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.hub_region': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'hub_region', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/hubs/hub_region.sql', 'original_file_path': 'models/dv_demo/raw_vault/hubs/hub_region.sql', 'unique_id': 'model.tpch.hub_region', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'hubs', 'hub_region'], 'alias': 'hub_region', 'checksum': {'name': 'sha256', 'checksum': '486b46e47bafee44e65e33db17bce82db4c7581d04a7a61716288e2d91944a38'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.5802083, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.hub_region', 'raw_code': '{%- set source_model = ["v_stg_orders", "v_stg_inventory"] -%}\n{%- set src_pk = "REGION_PK" -%}\n{%- set src_nk = "REGION_KEY" -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.hub(src_pk=src_pk, src_nk=src_nk, src_ldts=src_ldts,\n                src_source=src_source, source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_orders', 'package': None, 'version': None}, {'name': 'v_stg_inventory', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.hub'], 'nodes': ['model.tpch.v_stg_orders', 'model.tpch.v_stg_inventory']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.hub_order': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'hub_order', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/hubs/hub_order.sql', 'original_file_path': 'models/dv_demo/raw_vault/hubs/hub_order.sql', 'unique_id': 'model.tpch.hub_order', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'hubs', 'hub_order'], 'alias': 'hub_order', 'checksum': {'name': 'sha256', 'checksum': 'a9300e8f43e1de332569480f8de080c2eb985b54ceac94c92f2109a36ed8281b'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.5912733, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.hub_order', 'raw_code': '{%- set source_model = "v_stg_orders" -%}\n{%- set src_pk = "ORDER_PK" -%}\n{%- set src_nk = "ORDERKEY" -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.hub(src_pk=src_pk, src_nk=src_nk, src_ldts=src_ldts,\n                src_source=src_source, source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.hub'], 'nodes': ['model.tpch.v_stg_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.hub_customer': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'hub_customer', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/hubs/hub_customer.sql', 'original_file_path': 'models/dv_demo/raw_vault/hubs/hub_customer.sql', 'unique_id': 'model.tpch.hub_customer', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'hubs', 'hub_customer'], 'alias': 'hub_customer', 'checksum': {'name': 'sha256', 'checksum': '7d424013f9e81cadd9f04dabf26a5879d5a1288bf0e52d8108b0c3c83312169d'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.6012318, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.hub_customer', 'raw_code': '{%- set source_model = "v_stg_orders" -%}\n{%- set src_pk = "CUSTOMER_PK" -%}\n{%- set src_nk = "CUSTOMERKEY" -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.hub(src_pk=src_pk, src_nk=src_nk, src_ldts=src_ldts,\n                src_source=src_source, source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.hub'], 'nodes': ['model.tpch.v_stg_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.hub_nation': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'hub_nation', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/hubs/hub_nation.sql', 'original_file_path': 'models/dv_demo/raw_vault/hubs/hub_nation.sql', 'unique_id': 'model.tpch.hub_nation', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'hubs', 'hub_nation'], 'alias': 'hub_nation', 'checksum': {'name': 'sha256', 'checksum': '434b50a98fa37ce5d93ca8bbc24edacf0b9d6318ec970389b631adb15c3e4f51'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.611962, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.hub_nation', 'raw_code': '{%- set source_model = ["v_stg_orders", "v_stg_inventory"] -%}\n{%- set src_pk = "NATION_PK" -%}\n{%- set src_nk = "NATION_KEY" -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.hub(src_pk=src_pk, src_nk=src_nk, src_ldts=src_ldts,\n                src_source=src_source, source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_orders', 'package': None, 'version': None}, {'name': 'v_stg_inventory', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.hub'], 'nodes': ['model.tpch.v_stg_orders', 'model.tpch.v_stg_inventory']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.hub_lineitem': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'hub_lineitem', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/hubs/hub_lineitem.sql', 'original_file_path': 'models/dv_demo/raw_vault/hubs/hub_lineitem.sql', 'unique_id': 'model.tpch.hub_lineitem', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'hubs', 'hub_lineitem'], 'alias': 'hub_lineitem', 'checksum': {'name': 'sha256', 'checksum': 'dcaf27d66a4f4f0a434974e41216eac0344d980cb717407d6e60875cf3a65b30'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.6231232, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.hub_lineitem', 'raw_code': '{%- set source_model = "v_stg_orders" -%}\n{%- set src_pk = "LINEITEM_PK" -%}\n{%- set src_nk = ["LINENUMBER", "ORDERKEY"] -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.hub(src_pk=src_pk, src_nk=src_nk, src_ldts=src_ldts,\n                src_source=src_source, source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.hub'], 'nodes': ['model.tpch.v_stg_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.hub_part': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'hub_part', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/hubs/hub_part.sql', 'original_file_path': 'models/dv_demo/raw_vault/hubs/hub_part.sql', 'unique_id': 'model.tpch.hub_part', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'hubs', 'hub_part'], 'alias': 'hub_part', 'checksum': {'name': 'sha256', 'checksum': 'feac83821db785f43deb25d9e18f9e99ff07504d78abe424ab338a4f99a26ad7'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.6336293, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.hub_part', 'raw_code': '{%- set source_model = ["v_stg_orders", "v_stg_inventory"] -%}\n{%- set src_pk = "PART_PK" -%}\n{%- set src_nk = "PARTKEY" -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.hub(src_pk=src_pk, src_nk=src_nk, src_ldts=src_ldts,\n                src_source=src_source, source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_orders', 'package': None, 'version': None}, {'name': 'v_stg_inventory', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.hub'], 'nodes': ['model.tpch.v_stg_orders', 'model.tpch.v_stg_inventory']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.link_customer_order': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'link_customer_order', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/links/link_customer_order.sql', 'original_file_path': 'models/dv_demo/raw_vault/links/link_customer_order.sql', 'unique_id': 'model.tpch.link_customer_order', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'links', 'link_customer_order'], 'alias': 'link_customer_order', 'checksum': {'name': 'sha256', 'checksum': 'a16bebd6f44f9021c2aaa22cd196d330a9d699c4bd5bbd9ee57e3c1e3f1115d8'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.6448388, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.link_customer_order', 'raw_code': '{%- set source_model = "v_stg_orders" -%}\n{%- set src_pk = "ORDER_CUSTOMER_PK" -%}\n{%- set src_fk = ["CUSTOMER_PK", "ORDER_PK"] -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.link(src_pk=src_pk, src_fk=src_fk, src_ldts=src_ldts,\n                 src_source=src_source, source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.link'], 'nodes': ['model.tpch.v_stg_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.link_inventory_allocation': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'link_inventory_allocation', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/links/link_inventory_allocation.sql', 'original_file_path': 'models/dv_demo/raw_vault/links/link_inventory_allocation.sql', 'unique_id': 'model.tpch.link_inventory_allocation', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'links', 'link_inventory_allocation'], 'alias': 'link_inventory_allocation', 'checksum': {'name': 'sha256', 'checksum': 'abbbfadd0f44002c4694607b23371825b8ad7f1a76226f55c833ebfc8041c118'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.674282, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.link_inventory_allocation', 'raw_code': '{%- set source_model = "v_stg_orders" -%}\n{%- set src_pk = "INVENTORY_ALLOCATION_PK" -%}\n{%- set src_fk = ["PART_PK", "SUPPLIER_PK", "LINEITEM_PK"] -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.link(src_pk=src_pk, src_fk=src_fk, src_ldts=src_ldts,\n                 src_source=src_source, source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.link'], 'nodes': ['model.tpch.v_stg_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.link_inventory': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'link_inventory', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/links/link_inventory.sql', 'original_file_path': 'models/dv_demo/raw_vault/links/link_inventory.sql', 'unique_id': 'model.tpch.link_inventory', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'links', 'link_inventory'], 'alias': 'link_inventory', 'checksum': {'name': 'sha256', 'checksum': 'ac3c4b67051aeb5932d2f5b2bd587b3a2d3dc502251ecc6318233ffcb9e90629'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.685968, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.link_inventory', 'raw_code': '{%- set source_model = "v_stg_inventory" -%}\n{%- set src_pk = "INVENTORY_PK" -%}\n{%- set src_fk = ["SUPPLIER_PK", "PART_PK"] -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.link(src_pk=src_pk, src_fk=src_fk, src_ldts=src_ldts,\n                 src_source=src_source, source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_inventory', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.link'], 'nodes': ['model.tpch.v_stg_inventory']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.link_customer_nation': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'link_customer_nation', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/links/link_customer_nation.sql', 'original_file_path': 'models/dv_demo/raw_vault/links/link_customer_nation.sql', 'unique_id': 'model.tpch.link_customer_nation', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'links', 'link_customer_nation'], 'alias': 'link_customer_nation', 'checksum': {'name': 'sha256', 'checksum': 'b34061487201a8ce0eff286815fbf92269ee023335839a31d0e38284a780cd0c'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.6961646, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.link_customer_nation', 'raw_code': '{%- set source_model = "v_stg_orders" -%}\n{%- set src_pk = "LINK_CUSTOMER_NATION_PK" -%}\n{%- set src_fk = ["CUSTOMER_PK", "NATION_PK"] -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.link(src_pk=src_pk, src_fk=src_fk, src_ldts=src_ldts,\n                 src_source=src_source, source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.link'], 'nodes': ['model.tpch.v_stg_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.link_order_lineitem': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'link_order_lineitem', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/links/link_order_lineitem.sql', 'original_file_path': 'models/dv_demo/raw_vault/links/link_order_lineitem.sql', 'unique_id': 'model.tpch.link_order_lineitem', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'links', 'link_order_lineitem'], 'alias': 'link_order_lineitem', 'checksum': {'name': 'sha256', 'checksum': '4a47b57848324f1ef2b4a7ccdcc58e7942731deab6b44992da0767d6c8053ca6'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.7064116, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.link_order_lineitem', 'raw_code': '{%- set source_model = "v_stg_orders" -%}\n{%- set src_pk = "LINK_LINEITEM_ORDER_PK" -%}\n{%- set src_fk = ["ORDER_PK", "LINEITEM_PK"] -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.link(src_pk=src_pk, src_fk=src_fk, src_ldts=src_ldts,\n                 src_source=src_source, source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.link'], 'nodes': ['model.tpch.v_stg_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.link_nation_region': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'link_nation_region', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/links/link_nation_region.sql', 'original_file_path': 'models/dv_demo/raw_vault/links/link_nation_region.sql', 'unique_id': 'model.tpch.link_nation_region', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'links', 'link_nation_region'], 'alias': 'link_nation_region', 'checksum': {'name': 'sha256', 'checksum': 'efb0f30457aa8a0ef4dbfcb627f4d29311133b26b9585ff010f42a1b66775925'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.7172167, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.link_nation_region', 'raw_code': '{%- set source_model = ["v_stg_orders", "v_stg_inventory"] -%}\n{%- set src_pk = "NATION_REGION_PK" -%}\n{%- set src_fk = ["NATION_PK", "REGION_PK"] -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.link(src_pk=src_pk, src_fk=src_fk, src_ldts=src_ldts,\n                 src_source=src_source, source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_orders', 'package': None, 'version': None}, {'name': 'v_stg_inventory', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.link'], 'nodes': ['model.tpch.v_stg_orders', 'model.tpch.v_stg_inventory']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.link_supplier_nation': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'link_supplier_nation', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/links/link_supplier_nation.sql', 'original_file_path': 'models/dv_demo/raw_vault/links/link_supplier_nation.sql', 'unique_id': 'model.tpch.link_supplier_nation', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'links', 'link_supplier_nation'], 'alias': 'link_supplier_nation', 'checksum': {'name': 'sha256', 'checksum': 'fff55efb70d7b0fa1b70180bac129e58e06f1a9597f3fa4e94d69396e298dedd'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.7283099, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.link_supplier_nation', 'raw_code': '{%- set source_model = "v_stg_inventory" -%}\n{%- set src_pk = "LINK_SUPPLIER_NATION_PK" -%}\n{%- set src_fk = ["SUPPLIER_PK", "NATION_PK"] -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.link(src_pk=src_pk, src_fk=src_fk, src_ldts=src_ldts,\n                 src_source=src_source, source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_inventory', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.link'], 'nodes': ['model.tpch.v_stg_inventory']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.sat_inv_inventory_details': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'sat_inv_inventory_details', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/sats/sat_inv_inventory_details.sql', 'original_file_path': 'models/dv_demo/raw_vault/sats/sat_inv_inventory_details.sql', 'unique_id': 'model.tpch.sat_inv_inventory_details', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'sats', 'sat_inv_inventory_details'], 'alias': 'sat_inv_inventory_details', 'checksum': {'name': 'sha256', 'checksum': 'd8f0fe23c3cd68ed23e4f563db26f3da0bcb686d55e8f796055e53089fa432cc'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.7382867, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.sat_inv_inventory_details', 'raw_code': '{%- set source_model = "v_stg_inventory" -%}\n{%- set src_pk = "INVENTORY_PK" -%}\n{%- set src_hashdiff = "INVENTORY_HASHDIFF" -%}\n{%- set src_payload = ["AVAILQTY", "SUPPLYCOST", "PART_SUPPLY_COMMENT"] -%}\n{%- set src_eff = "EFFECTIVE_FROM" -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.sat(src_pk=src_pk, src_hashdiff=src_hashdiff,\n                src_payload=src_payload, src_eff=src_eff,\n                src_ldts=src_ldts, src_source=src_source,\n                source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_inventory', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.sat'], 'nodes': ['model.tpch.v_stg_inventory']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.sat_order_cust_nation_details': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'sat_order_cust_nation_details', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/sats/sat_order_cust_nation_details.sql', 'original_file_path': 'models/dv_demo/raw_vault/sats/sat_order_cust_nation_details.sql', 'unique_id': 'model.tpch.sat_order_cust_nation_details', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'sats', 'sat_order_cust_nation_details'], 'alias': 'sat_order_cust_nation_details', 'checksum': {'name': 'sha256', 'checksum': '7bfed13866cc2ee71ee5a63023d073b06089e06e79cb75f16f6d17bea6497a7b'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.7870755, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.sat_order_cust_nation_details', 'raw_code': '{%- set source_model = "v_stg_orders" -%}\n{%- set src_pk = "CUSTOMER_PK" -%}\n{%- set src_hashdiff = "CUSTOMER_NATION_HASHDIFF" -%}\n{%- set src_payload = ["CUSTOMER_NATION_NAME", "CUSTOMER_NATION_COMMENT"] -%}\n{%- set src_eff = "EFFECTIVE_FROM" -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.sat(src_pk=src_pk, src_hashdiff=src_hashdiff,\n                src_payload=src_payload, src_eff=src_eff,\n                src_ldts=src_ldts, src_source=src_source,\n                source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.sat'], 'nodes': ['model.tpch.v_stg_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.sat_order_lineitem_details': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'sat_order_lineitem_details', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/sats/sat_order_lineitem_details.sql', 'original_file_path': 'models/dv_demo/raw_vault/sats/sat_order_lineitem_details.sql', 'unique_id': 'model.tpch.sat_order_lineitem_details', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'sats', 'sat_order_lineitem_details'], 'alias': 'sat_order_lineitem_details', 'checksum': {'name': 'sha256', 'checksum': 'e9d9c31b8f3e701244aed349ebd7e910d384eaceccc2cd38bca11da4109d47ce'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.7995124, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.sat_order_lineitem_details', 'raw_code': '{%- set source_model = "v_stg_orders" -%}\n{%- set src_pk = "LINEITEM_PK" -%}\n{%- set src_hashdiff = "LINEITEM_HASHDIFF" -%}\n{%- set src_payload = ["COMMITDATE", "DISCOUNT", "EXTENDEDPRICE", "LINE_COMMENT",\n                       "QUANTITY", "RECEIPTDATE", "RETURNFLAG", "SHIPDATE",\n                       "SHIPINSTRUCT", "SHIPMODE", "TAX"] -%}\n{%- set src_eff = "EFFECTIVE_FROM" -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.sat(src_pk=src_pk, src_hashdiff=src_hashdiff,\n                src_payload=src_payload, src_eff=src_eff,\n                src_ldts=src_ldts, src_source=src_source,\n                source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.sat'], 'nodes': ['model.tpch.v_stg_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.sat_inv_supplier_details': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'sat_inv_supplier_details', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/sats/sat_inv_supplier_details.sql', 'original_file_path': 'models/dv_demo/raw_vault/sats/sat_inv_supplier_details.sql', 'unique_id': 'model.tpch.sat_inv_supplier_details', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'sats', 'sat_inv_supplier_details'], 'alias': 'sat_inv_supplier_details', 'checksum': {'name': 'sha256', 'checksum': 'f06049dfbee4a8bb8e26b085e973d292e28e2744239174c3e0797d532a569f69'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.8153849, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.sat_inv_supplier_details', 'raw_code': '{%- set source_model = "v_stg_inventory" -%}\n{%- set src_pk = "SUPPLIER_PK" -%}\n{%- set src_hashdiff = "SUPPLIER_HASHDIFF" -%}\n{%- set src_payload = ["SUPPLIER_ADDRESS", "SUPPLIER_PHONE", "SUPPLIER_ACCTBAL", "SUPPLIER_NAME", "SUPPLIER_COMMENT"] -%}\n{%- set src_eff = "EFFECTIVE_FROM" -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.sat(src_pk=src_pk, src_hashdiff=src_hashdiff,\n                src_payload=src_payload, src_eff=src_eff,\n                src_ldts=src_ldts, src_source=src_source,\n                source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_inventory', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.sat'], 'nodes': ['model.tpch.v_stg_inventory']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.sat_inv_supp_nation_details': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'sat_inv_supp_nation_details', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/sats/sat_inv_supp_nation_details.sql', 'original_file_path': 'models/dv_demo/raw_vault/sats/sat_inv_supp_nation_details.sql', 'unique_id': 'model.tpch.sat_inv_supp_nation_details', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'sats', 'sat_inv_supp_nation_details'], 'alias': 'sat_inv_supp_nation_details', 'checksum': {'name': 'sha256', 'checksum': '5e89995f7a71fa59d0b4e047e2ce34307bb1d6a61d773e3cb62ee01fb0c6ef8a'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.8291008, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.sat_inv_supp_nation_details', 'raw_code': '{%- set source_model = "v_stg_inventory" -%}\n{%- set src_pk = "SUPPLIER_PK" -%}\n{%- set src_hashdiff = "SUPPLIER_NATION_HASHDIFF" -%}\n{%- set src_payload = ["SUPPLIER_NATION_NAME", "SUPPLIER_NATION_COMMENT"] -%}\n{%- set src_eff = "EFFECTIVE_FROM" -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.sat(src_pk=src_pk, src_hashdiff=src_hashdiff,\n                src_payload=src_payload, src_eff=src_eff,\n                src_ldts=src_ldts, src_source=src_source,\n                source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_inventory', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.sat'], 'nodes': ['model.tpch.v_stg_inventory']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.sat_inv_supp_region_details': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'sat_inv_supp_region_details', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/sats/sat_inv_supp_region_details.sql', 'original_file_path': 'models/dv_demo/raw_vault/sats/sat_inv_supp_region_details.sql', 'unique_id': 'model.tpch.sat_inv_supp_region_details', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'sats', 'sat_inv_supp_region_details'], 'alias': 'sat_inv_supp_region_details', 'checksum': {'name': 'sha256', 'checksum': '5e89995f7a71fa59d0b4e047e2ce34307bb1d6a61d773e3cb62ee01fb0c6ef8a'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.8438394, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.sat_inv_supp_region_details', 'raw_code': '{%- set source_model = "v_stg_inventory" -%}\n{%- set src_pk = "SUPPLIER_PK" -%}\n{%- set src_hashdiff = "SUPPLIER_NATION_HASHDIFF" -%}\n{%- set src_payload = ["SUPPLIER_NATION_NAME", "SUPPLIER_NATION_COMMENT"] -%}\n{%- set src_eff = "EFFECTIVE_FROM" -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.sat(src_pk=src_pk, src_hashdiff=src_hashdiff,\n                src_payload=src_payload, src_eff=src_eff,\n                src_ldts=src_ldts, src_source=src_source,\n                source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_inventory', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.sat'], 'nodes': ['model.tpch.v_stg_inventory']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.sat_order_order_details': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'sat_order_order_details', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/sats/sat_order_order_details.sql', 'original_file_path': 'models/dv_demo/raw_vault/sats/sat_order_order_details.sql', 'unique_id': 'model.tpch.sat_order_order_details', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'sats', 'sat_order_order_details'], 'alias': 'sat_order_order_details', 'checksum': {'name': 'sha256', 'checksum': '3f31cf9c5cfba54d88554166bdaaf2bee3a5b20bf2047bcdf28eaaf162b5dc66'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.8569658, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.sat_order_order_details', 'raw_code': '{%- set source_model = "v_stg_orders" -%}\n{%- set src_pk = "ORDER_PK" -%}\n{%- set src_hashdiff = "ORDER_HASHDIFF" -%}\n{%- set src_payload = ["ORDERSTATUS", "TOTALPRICE", "ORDERDATE", "ORDERPRIORITY",\n                       "CLERK", "SHIPPRIORITY", "ORDER_COMMENT"] -%}\n{%- set src_eff = "EFFECTIVE_FROM" -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.sat(src_pk=src_pk, src_hashdiff=src_hashdiff,\n                src_payload=src_payload, src_eff=src_eff,\n                src_ldts=src_ldts, src_source=src_source,\n                source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.sat'], 'nodes': ['model.tpch.v_stg_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.sat_inv_part_details': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'sat_inv_part_details', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/sats/sat_inv_part_details.sql', 'original_file_path': 'models/dv_demo/raw_vault/sats/sat_inv_part_details.sql', 'unique_id': 'model.tpch.sat_inv_part_details', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'sats', 'sat_inv_part_details'], 'alias': 'sat_inv_part_details', 'checksum': {'name': 'sha256', 'checksum': 'e668a38260c66a12cc5c7a462c5bb6af4496d90ec90de10f57fd21d402e1c054'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.8723226, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.sat_inv_part_details', 'raw_code': '{%- set source_model = "v_stg_inventory" -%}\n{%- set src_pk = "PART_PK" -%}\n{%- set src_hashdiff = "PART_HASHDIFF" -%}\n{%- set src_payload = ["PART_NAME", "PART_MFGR", "PART_BRAND", "PART_TYPE", "PART_SIZE", "PART_CONTAINER", "PART_RETAILPRICE", "PART_COMMENT"] -%}\n{%- set src_eff = "EFFECTIVE_FROM" -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.sat(src_pk=src_pk, src_hashdiff=src_hashdiff,\n                src_payload=src_payload, src_eff=src_eff,\n                src_ldts=src_ldts, src_source=src_source,\n                source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_inventory', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.sat'], 'nodes': ['model.tpch.v_stg_inventory']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.sat_order_customer_details': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'sat_order_customer_details', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/sats/sat_order_customer_details.sql', 'original_file_path': 'models/dv_demo/raw_vault/sats/sat_order_customer_details.sql', 'unique_id': 'model.tpch.sat_order_customer_details', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'sats', 'sat_order_customer_details'], 'alias': 'sat_order_customer_details', 'checksum': {'name': 'sha256', 'checksum': '288b23d8d3dd75b72f6bbb3ac224856f2183c8cdfa667d51abd54bd4551eb27d'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.8870733, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.sat_order_customer_details', 'raw_code': '{%- set source_model = "v_stg_orders" -%}\n{%- set src_pk = "CUSTOMER_PK" -%}\n{%- set src_hashdiff = "CUSTOMER_HASHDIFF" -%}\n{%- set src_payload = ["CUSTOMER_NAME", "CUSTOMER_ADDRESS", "CUSTOMER_PHONE",\n                       "CUSTOMER_ACCBAL", "CUSTOMER_MKTSEGMENT", "CUSTOMER_COMMENT"] -%}\n{%- set src_eff = "EFFECTIVE_FROM" -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.sat(src_pk=src_pk, src_hashdiff=src_hashdiff,\n                src_payload=src_payload, src_eff=src_eff,\n                src_ldts=src_ldts, src_source=src_source,\n                source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.sat'], 'nodes': ['model.tpch.v_stg_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.sat_order_cust_region_details': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'sat_order_cust_region_details', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_vault/sats/sat_order_cust_region_details.sql', 'original_file_path': 'models/dv_demo/raw_vault/sats/sat_order_cust_region_details.sql', 'unique_id': 'model.tpch.sat_order_cust_region_details', 'fqn': ['tpch', 'dv_demo', 'raw_vault', 'sats', 'sat_order_cust_region_details'], 'alias': 'sat_order_cust_region_details', 'checksum': {'name': 'sha256', 'checksum': 'f92c161165f6c32d197a02566bd5c102b562666bd8cc6b0481f5afd7a02146f3'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.9021666, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.sat_order_cust_region_details', 'raw_code': '{%- set source_model = "v_stg_orders" -%}\n{%- set src_pk = "CUSTOMER_PK" -%}\n{%- set src_hashdiff = "CUSTOMER_REGION_HASHDIFF" -%}\n{%- set src_payload = ["CUSTOMER_REGION_NAME", "CUSTOMER_REGION_COMMENT"] -%}\n{%- set src_eff = "EFFECTIVE_FROM" -%}\n{%- set src_ldts = "LOAD_DATE" -%}\n{%- set src_source = "RECORD_SOURCE" -%}\n\n{{ automate_dv.sat(src_pk=src_pk, src_hashdiff=src_hashdiff,\n                src_payload=src_payload, src_eff=src_eff,\n                src_ldts=src_ldts, src_source=src_source,\n                source_model=source_model) }}', 'language': 'sql', 'refs': [{'name': 'v_stg_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.automate_dv.sat'], 'nodes': ['model.tpch.v_stg_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.raw_transactions': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'raw_transactions', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_stage/raw_transactions.sql', 'original_file_path': 'models/dv_demo/raw_stage/raw_transactions.sql', 'unique_id': 'model.tpch.raw_transactions', 'fqn': ['tpch', 'dv_demo', 'raw_stage', 'raw_transactions'], 'alias': 'raw_transactions', 'checksum': {'name': 'sha256', 'checksum': 'bc638f71d0bbaa481130ddc00cf94126f6542c2df11ec5964c425a23c400347c'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.91451, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.raw_transactions', 'raw_code': "SELECT\n    b.O_ORDERKEY AS ORDER_ID,\n    b.O_CUSTKEY AS CUSTOMER_ID,\n    b.O_ORDERDATE AS ORDER_DATE,\n    DATEADD(DAY, 20, b.O_ORDERDATE) AS TRANSACTION_DATE,\n    TO_NUMBER(RPAD(CONCAT(b.O_ORDERKEY, b.O_CUSTKEY, TO_CHAR(b.O_ORDERDATE, 'YYYYMMDD')),  24, '0')) AS TRANSACTION_NUMBER,\n    b.O_TOTALPRICE AS AMOUNT,\n    CAST(\n    CASE ABS(MOD(RANDOM(1), 2)) + 1\n        WHEN 1 THEN 'DR'\n        WHEN 2 THEN 'CR'\n    END AS VARCHAR(2)) AS TYPE\nFROM {{ source('tpch', 'orders') }}  AS b\nLEFT JOIN {{ source('tpch', 'customer') }} AS c\n    ON b.O_CUSTKEY = c.C_CUSTKEY\nWHERE b.O_ORDERDATE = TO_DATE('{{ var('load_date') }}')", 'language': 'sql', 'refs': [], 'sources': [['tpch', 'orders'], ['tpch', 'customer']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.tpch.orders', 'source.tpch.tpch.customer']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.raw_orders': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'raw_orders', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_stage/raw_orders.sql', 'original_file_path': 'models/dv_demo/raw_stage/raw_orders.sql', 'unique_id': 'model.tpch.raw_orders', 'fqn': ['tpch', 'dv_demo', 'raw_stage', 'raw_orders'], 'alias': 'raw_orders', 'checksum': {'name': 'sha256', 'checksum': 'f1afc0c3704cbc098f294555b5f79f5769fb6a112c89777af0e9b4c54205e717'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.9224696, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.raw_orders', 'raw_code': "SELECT\n    a.L_ORDERKEY AS ORDERKEY,\n    a.L_PARTKEY AS PARTKEY ,\n    a.L_SUPPKEY AS SUPPLIERKEY,\n    a.L_LINENUMBER AS LINENUMBER,\n    a.L_QUANTITY AS QUANTITY,\n    a.L_EXTENDEDPRICE AS EXTENDEDPRICE,\n    a.L_DISCOUNT AS DISCOUNT,\n    a.L_TAX AS TAX,\n    a.L_RETURNFLAG AS RETURNFLAG,\n    a.L_LINESTATUS AS LINESTATUS,\n    a.L_SHIPDATE AS SHIPDATE,\n    a.L_COMMITDATE AS COMMITDATE,\n    a.L_RECEIPTDATE AS RECEIPTDATE,\n    a.L_SHIPINSTRUCT AS SHIPINSTRUCT,\n    a.L_SHIPMODE AS SHIPMODE,\n    a.L_COMMENT AS LINE_COMMENT,\n    b.O_CUSTKEY AS CUSTOMERKEY,\n    b.O_ORDERSTATUS AS ORDERSTATUS,\n    b.O_TOTALPRICE AS TOTALPRICE,\n    b.O_ORDERDATE AS ORDERDATE,\n    b.O_ORDERPRIORITY AS ORDERPRIORITY,\n    b.O_CLERK AS CLERK,\n    b.O_SHIPPRIORITY AS SHIPPRIORITY,\n    b.O_COMMENT AS ORDER_COMMENT,\n    c.C_NAME AS CUSTOMER_NAME,\n    c.C_ADDRESS AS CUSTOMER_ADDRESS,\n    c.C_NATIONKEY AS CUSTOMER_NATION_KEY,\n    c.C_PHONE AS CUSTOMER_PHONE,\n    c.C_ACCTBAL AS CUSTOMER_ACCBAL,\n    c.C_MKTSEGMENT AS CUSTOMER_MKTSEGMENT,\n    c.C_COMMENT AS CUSTOMER_COMMENT,\n    d.N_NAME AS CUSTOMER_NATION_NAME,\n    d.N_REGIONKEY AS CUSTOMER_REGION_KEY,\n    d.N_COMMENT AS CUSTOMER_NATION_COMMENT,\n    e.R_NAME AS CUSTOMER_REGION_NAME,\n    e.R_COMMENT AS CUSTOMER_REGION_COMMENT\nFROM {{ source('tpch', 'orders') }} AS b\nLEFT JOIN {{ source('tpch', 'lineitem') }} AS a\n    ON a.L_ORDERKEY = b.O_ORDERKEY\nLEFT JOIN {{ source('tpch', 'customer') }} AS c\n    ON b.O_CUSTKEY  = c.C_CUSTKEY\nLEFT JOIN {{ source('tpch', 'nation') }} AS d\n    ON c.C_NATIONKEY  = d.N_NATIONKEY\nLEFT JOIN {{ source('tpch', 'region') }} AS e\n    ON d.N_REGIONKEY  = e.R_REGIONKEY\nLEFT JOIN {{ source('tpch', 'part') }} AS g\n    ON a.L_PARTKEY = g.P_PARTKEY\nLEFT JOIN {{ source('tpch', 'supplier') }} AS h\n    ON a.L_SUPPKEY = h.S_SUPPKEY\nLEFT JOIN {{ source('tpch', 'nation') }} AS j\n    ON h.S_NATIONKEY = j.N_NATIONKEY\nLEFT JOIN {{ source('tpch', 'region') }} AS k\n    ON j.N_REGIONKEY = k.R_REGIONKEY\nWHERE b.O_ORDERDATE = TO_DATE('{{ var('load_date') }}')", 'language': 'sql', 'refs': [], 'sources': [['tpch', 'orders'], ['tpch', 'lineitem'], ['tpch', 'customer'], ['tpch', 'nation'], ['tpch', 'region'], ['tpch', 'part'], ['tpch', 'supplier'], ['tpch', 'nation'], ['tpch', 'region']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.tpch.orders', 'source.tpch.tpch.lineitem', 'source.tpch.tpch.customer', 'source.tpch.tpch.nation', 'source.tpch.tpch.region', 'source.tpch.tpch.part', 'source.tpch.tpch.supplier']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.all_days': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'all_days', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'utils/all_days.sql', 'original_file_path': 'models/utils/all_days.sql', 'unique_id': 'model.tpch.all_days', 'fqn': ['tpch', 'utils', 'all_days'], 'alias': 'all_days', 'checksum': {'name': 'sha256', 'checksum': '07511c8cce5ac1b93c721a9691612940e28736da2cfc79705eb706a1b5ed8ccf'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': "This model is an example of how to create a date spine using dbt_utils. Rather than writing a bunch of code to create this, we're able to three lines of code.", 'columns': {'date_day': {'name': 'date_day', 'description': 'date generated by the macro', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/utils/utils.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.8469288, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.all_days', 'raw_code': '{{ dbt_utils.date_spine(\n    datepart="day",\n    start_date="to_date(\'01/01/1992\', \'mm/dd/yyyy\')",\n    end_date="dateadd(year, 1, current_date)"\n   )\n}}', 'language': 'sql', 'refs': [], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.date_spine'], 'nodes': []}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.agg_pizza_big_spenders': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'agg_pizza_big_spenders', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'versions_demo/agg_pizza_big_spenders.sql', 'original_file_path': 'models/versions_demo/agg_pizza_big_spenders.sql', 'unique_id': 'model.tpch.agg_pizza_big_spenders', 'fqn': ['tpch', 'versions_demo', 'agg_pizza_big_spenders'], 'alias': 'agg_pizza_big_spenders', 'checksum': {'name': 'sha256', 'checksum': '96de1149be55de8f626f51cc7d92af957801e8413563413cd62e30c5c4879c6b'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652804.9700634, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.agg_pizza_big_spenders', 'raw_code': "select\n    count(*) as pizzas_bought,\n    sum(total_price) as revenue\nfrom {{ ref('pizza_big_spenders', v=2) }}", 'language': 'sql', 'refs': [{'name': 'pizza_big_spenders', 'package': None, 'version': 2}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.pizza_big_spenders.v2']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.stg_pizza_sales': {'database': 'mike_fuller_sandbox', 'schema': 'dbt_mfuller_sa_demo_test_defer_pizza', 'name': 'stg_pizza_sales', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'staging/pizza/stg_pizza_sales.sql', 'original_file_path': 'models/staging/pizza/stg_pizza_sales.sql', 'unique_id': 'model.tpch.stg_pizza_sales', 'fqn': ['tpch', 'staging', 'pizza', 'stg_pizza_sales'], 'alias': 'stg_pizza_sales', 'checksum': {'name': 'sha256', 'checksum': '38c4e3e3e40aa0238acbb16eb99486489ecc7a0d13a2f7e26514119026c168e6'}, 'config': {'enabled': True, 'alias': None, 'schema': 'pizza', 'database': 'mike_fuller_sandbox', 'tags': [], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'pizza sales staging model', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/staging/pizza/pizza.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'database': 'mike_fuller_sandbox', 'schema': 'pizza'}, 'created_at': 1706652805.8980246, 'config_call_dict': {}, 'relation_name': 'mike_fuller_sandbox.dbt_mfuller_sa_demo_test_defer_pizza.stg_pizza_sales', 'raw_code': "with source as (\n\n    select * from {{ source('pizza_shop', 'pizza_sales') }}\n\n),\n\nrenamed as (\n\n    select\n        order_details_id as order_details_id,\n        order_id as order_id,\n        pizza_id as pizza_id,\n        quantity as order_quantity,\n        order_date as order_date,\n        order_time as order_time,\n        unit_price as unit_price,\n        total_price as total_price,\n        pizza_size as pizza_size,\n        pizza_category as pizza_category,\n        pizza_ingredients as pizza_ingredients,\n        pizza_name as pizza_name\n\n    from source\n\n)\n\nselect * from renamed", 'language': 'sql', 'refs': [], 'sources': [['pizza_shop', 'pizza_sales']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.pizza_shop.pizza_sales']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.dim_pizza': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'dim_pizza', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'staging/pizza/dim_pizza.sql', 'original_file_path': 'models/staging/pizza/dim_pizza.sql', 'unique_id': 'model.tpch.dim_pizza', 'fqn': ['tpch', 'staging', 'pizza', 'dim_pizza'], 'alias': 'dim_pizza', 'checksum': {'name': 'sha256', 'checksum': 'daa98bc8818b0b80fc56d533c00a6647991e910b674e4c2636b8d98e2cd9fcee'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1706652804.9857905, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.dim_pizza', 'raw_code': "select distinct\n    pizza_id,\n    pizza_category\nfrom {{ ref('stg_pizza_sales') }}\norder by pizza_id", 'language': 'sql', 'refs': [{'name': 'stg_pizza_sales', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.stg_pizza_sales']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.stg_f1_drivers': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'stg_f1_drivers', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'staging/formula1/stg_f1_drivers.sql', 'original_file_path': 'models/staging/formula1/stg_f1_drivers.sql', 'unique_id': 'model.tpch.stg_f1_drivers', 'fqn': ['tpch', 'staging', 'formula1', 'stg_f1_drivers'], 'alias': 'stg_f1_drivers', 'checksum': {'name': 'sha256', 'checksum': '9fb767015e619582fa2700ef0dee8f127afeaeea00e22fc411f9e4ebb4933ddb'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1706652804.9887102, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.stg_f1_drivers', 'raw_code': "with\n\nsource  as (\n\n    select * from {{ source('formula1','drivers') }}\n\n), \n\nrenamed as (\n    select \n       driverid as driver_id,\n       driverref as driver_ref,\n       number as driver_number,\n       code as driver_code,\n       forename,\n       surname,\n       dob as date_of_birth,\n       nationality as driver_nationality\n      -- omit the url\n    from source\n)\n\nselect * from renamed", 'language': 'sql', 'refs': [], 'sources': [['formula1', 'drivers']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.formula1.drivers']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.stg_f1_constructors': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'stg_f1_constructors', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'staging/formula1/stg_f1_constructors.sql', 'original_file_path': 'models/staging/formula1/stg_f1_constructors.sql', 'unique_id': 'model.tpch.stg_f1_constructors', 'fqn': ['tpch', 'staging', 'formula1', 'stg_f1_constructors'], 'alias': 'stg_f1_constructors', 'checksum': {'name': 'sha256', 'checksum': '6da6579aec8189c9e4d2dcdc861a942016ca8755a054eac333d9ab96345cefdc'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1706652804.9916785, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.stg_f1_constructors', 'raw_code': "with\n\nsource  as (\n\n    select * from {{ source('formula1','constructors') }}\n\n), \n\nrenamed as (\n    select \n       constructorid as constructor_id,\n       constructorref as constructor_ref,\n       name as constructor_name,\n       nationality as constructor_nationality \n       -- omit the url \n    from source\n)\n\nselect * from renamed", 'language': 'sql', 'refs': [], 'sources': [['formula1', 'constructors']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.formula1.constructors']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.stg_f1_pit_stops': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'stg_f1_pit_stops', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'staging/formula1/stg_f1_pit_stops.sql', 'original_file_path': 'models/staging/formula1/stg_f1_pit_stops.sql', 'unique_id': 'model.tpch.stg_f1_pit_stops', 'fqn': ['tpch', 'staging', 'formula1', 'stg_f1_pit_stops'], 'alias': 'stg_f1_pit_stops', 'checksum': {'name': 'sha256', 'checksum': 'b1ba36545cfca051597a2adb5bc29d405017ab4dfb53f12335b83415e8557e82'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1706652804.9946475, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.stg_f1_pit_stops', 'raw_code': "with\n\nsource  as (\n\n    select * from {{ source('formula1','pit_stops') }}\n\n), \n\nrenamed as (\n    select \n        raceid as race_id,\n        driverid as driver_id,\n        stop as stop_number,\n        lap, \n        time as lap_time_formatted,\n        duration as pit_stop_duration_seconds, \n        milliseconds as pit_stop_milliseconds\n    from source\n)\n\nselect * from renamed", 'language': 'sql', 'refs': [], 'sources': [['formula1', 'pit_stops']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.formula1.pit_stops']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.stg_f1_status': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'stg_f1_status', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'staging/formula1/stg_f1_status.sql', 'original_file_path': 'models/staging/formula1/stg_f1_status.sql', 'unique_id': 'model.tpch.stg_f1_status', 'fqn': ['tpch', 'staging', 'formula1', 'stg_f1_status'], 'alias': 'stg_f1_status', 'checksum': {'name': 'sha256', 'checksum': '5d3851331f8961ec574dda91a240ed3b40338a8dc0b2fe4a9a9a16f833949738'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1706652804.9975998, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.stg_f1_status', 'raw_code': "with\n\nsource  as (\n\n    select * from {{ source('formula1','status') }}\n\n), \n\nrenamed as (\n    select \n        statusid as status_id,\n        status \n    from source\n)\n\nselect * from renamed", 'language': 'sql', 'refs': [], 'sources': [['formula1', 'status']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.formula1.status']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.stg_f1_results': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'stg_f1_results', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'staging/formula1/stg_f1_results.sql', 'original_file_path': 'models/staging/formula1/stg_f1_results.sql', 'unique_id': 'model.tpch.stg_f1_results', 'fqn': ['tpch', 'staging', 'formula1', 'stg_f1_results'], 'alias': 'stg_f1_results', 'checksum': {'name': 'sha256', 'checksum': 'ea1c0839373b2b89b82d01a4353a6dceb51b718c1847e19bc55a7e6bd2762fef'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1706652805.0018458, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.stg_f1_results', 'raw_code': "with\n\nsource  as (\n\n    select * from {{ source('formula1','results') }}\n\n), \n\nrenamed as (\n    select \n        resultid as result_id,\n        raceid as race_id,\n        driverid as driver_id,\n        constructorid as constructor_id,\n        number as driver_number,\n        grid, \n        position::int as position,\n        positiontext as position_text,\n        positionorder as position_order,\n        points,\n        laps,\n        time as results_time_formatted, \n        milliseconds as results_milliseconds,\n        fastestlap as fastest_lap,\n        rank as results_rank,\n        fastestlaptime as fastest_lap_time_formatted,\n        fastestlapspeed::decimal(6,3) as fastest_lap_speed, \n        statusid as status_id\n    from source\n)\n\nselect * from renamed", 'language': 'sql', 'refs': [], 'sources': [['formula1', 'results']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.formula1.results']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.stg_f1_circuits': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'stg_f1_circuits', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'staging/formula1/stg_f1_circuits.sql', 'original_file_path': 'models/staging/formula1/stg_f1_circuits.sql', 'unique_id': 'model.tpch.stg_f1_circuits', 'fqn': ['tpch', 'staging', 'formula1', 'stg_f1_circuits'], 'alias': 'stg_f1_circuits', 'checksum': {'name': 'sha256', 'checksum': '62ce48d9226b7328790b94c39f89c37aebd11945f45b19efba616efbadda6e15'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1706652805.004795, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.stg_f1_circuits', 'raw_code': "with\n\nsource  as (\n\n    select * from {{ source('formula1','circuits') }}\n\n), \n\nrenamed as (\n    select \n        circuitid as circuit_id,\n        circuitref as circuit_ref,\n        name as circuit_name,\n        location,\n        country,\n        lat as latitude,\n        lng as longitude,\n        alt as altitude\n        -- omit the url\n    from source\n)\nselect * from renamed", 'language': 'sql', 'refs': [], 'sources': [['formula1', 'circuits']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.formula1.circuits']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.stg_f1_races': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'stg_f1_races', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'staging/formula1/stg_f1_races.sql', 'original_file_path': 'models/staging/formula1/stg_f1_races.sql', 'unique_id': 'model.tpch.stg_f1_races', 'fqn': ['tpch', 'staging', 'formula1', 'stg_f1_races'], 'alias': 'stg_f1_races', 'checksum': {'name': 'sha256', 'checksum': 'b75d689d74daa6e637851632186459b0829d96cbc827a6393c4183d584bc18bf'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1706652805.0077693, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.stg_f1_races', 'raw_code': "with\n\nsource  as (\n\n    select * from {{ source('formula1','races') }}\n\n), \n\nrenamed as (\n    select \n        raceid as race_id,\n        year as race_year, \n        round as race_round,\n        circuitid as circuit_id,\n        name as circuit_name,\n        date as race_date,\n        to_time(time) as race_time, \n        -- omit the url \n        fp1_date as free_practice_1_date,\n        fp1_time as free_practice_1_time,\n        fp2_date as free_practice_2_date,\n        fp2_time as free_practice_2_time,\n        fp3_date as free_practice_3_date,\n        fp3_time as free_practice_3_time,\n        quali_date as qualifying_date,\n        quali_time as qualifying_time,\n        sprint_date,\n        sprint_time\n    from source\n)\n\nselect * from renamed", 'language': 'sql', 'refs': [], 'sources': [['formula1', 'races']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.formula1.races']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.stg_f1_lap_times': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'stg_f1_lap_times', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'staging/formula1/stg_f1_lap_times.sql', 'original_file_path': 'models/staging/formula1/stg_f1_lap_times.sql', 'unique_id': 'model.tpch.stg_f1_lap_times', 'fqn': ['tpch', 'staging', 'formula1', 'stg_f1_lap_times'], 'alias': 'stg_f1_lap_times', 'checksum': {'name': 'sha256', 'checksum': 'd434c1df74a2d2bd44f368af06ed2926aba72703f7edd718c7fbfbf83cbda363'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1706652805.0107117, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.stg_f1_lap_times', 'raw_code': "with\n\nsource  as (\n\n    select * from {{ source('formula1','lap_times') }}\n\n), \n\nrenamed as (\n    select \n        raceid as race_id, \n        driverid as driver_id,\n        lap,\n        position, \n        time as lap_time_formatted,\n        milliseconds as lap_time_milliseconds\n    from source\n)\n\nselect * from renamed", 'language': 'sql', 'refs': [], 'sources': [['formula1', 'lap_times']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.formula1.lap_times']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.stg_tpch_regions': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'stg_tpch_regions', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'staging/tpch/stg_tpch_regions.sql', 'original_file_path': 'models/staging/tpch/stg_tpch_regions.sql', 'unique_id': 'model.tpch.stg_tpch_regions', 'fqn': ['tpch', 'staging', 'tpch', 'stg_tpch_regions'], 'alias': 'stg_tpch_regions', 'checksum': {'name': 'sha256', 'checksum': '5c45bba024d6d0699e21c20e64896613725601f2f269a33888c66cf659937ca1'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'staging layer for regions data', 'columns': {'region_key': {'name': 'region_key', 'description': 'primary key of the model', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'name': {'name': 'name', 'description': 'region name', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'comment': {'name': 'comment', 'description': 'additional commentary', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/staging/tpch/stg_tpch.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1706652805.9363928, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.stg_tpch_regions', 'raw_code': "with source as (\n\n    select * from {{ source('tpch', 'region') }}\n\n),\n\nrenamed as (\n\n    select\n        r_regionkey as region_key,\n        r_name as name,\n        r_comment as comment\n\n    from source\n\n)\n\nselect * from renamed", 'language': 'sql', 'refs': [], 'sources': [['tpch', 'region']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.tpch.region']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.stg_tpch_suppliers': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'stg_tpch_suppliers', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'staging/tpch/stg_tpch_suppliers.sql', 'original_file_path': 'models/staging/tpch/stg_tpch_suppliers.sql', 'unique_id': 'model.tpch.stg_tpch_suppliers', 'fqn': ['tpch', 'staging', 'tpch', 'stg_tpch_suppliers'], 'alias': 'stg_tpch_suppliers', 'checksum': {'name': 'sha256', 'checksum': '39e217e9757437fcc72c0938f2729a5f5fec76f79d911f216377459f8890a766'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'staging layer for suppliers data', 'columns': {'supplier_key': {'name': 'supplier_key', 'description': 'primary key of the model', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'supplier_name': {'name': 'supplier_name', 'description': 'id of the supplier', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'supplier_address': {'name': 'supplier_address', 'description': 'address of the supplier', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'nation_key': {'name': 'nation_key', 'description': 'foreign key to stg_tpch_nations', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'phone_number': {'name': 'phone_number', 'description': 'phone number of the supplier', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'account_balance': {'name': 'account_balance', 'description': 'raw account balance', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'comment': {'name': 'comment', 'description': 'additional commentary', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/staging/tpch/stg_tpch.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1706652805.938349, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.stg_tpch_suppliers', 'raw_code': "with source as (\n\n    select * from {{ source('tpch', 'supplier') }}\n\n),\n\nrenamed as (\n\n    select\n    \n        s_suppkey as supplier_key,\n        s_name as supplier_name,\n        s_address as supplier_address,\n        s_nationkey as nation_key,\n        s_phone as phone_number,\n        s_acctbal as account_balance,\n        s_comment as comment\n\n    from source\n\n)\n\nselect * from renamed", 'language': 'sql', 'refs': [], 'sources': [['tpch', 'supplier']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.tpch.supplier']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.stg_tpch_orders': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'stg_tpch_orders', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'staging/tpch/stg_tpch_orders.sql', 'original_file_path': 'models/staging/tpch/stg_tpch_orders.sql', 'unique_id': 'model.tpch.stg_tpch_orders', 'fqn': ['tpch', 'staging', 'tpch', 'stg_tpch_orders'], 'alias': 'stg_tpch_orders', 'checksum': {'name': 'sha256', 'checksum': 'd262f47111ed26c55ff6816024afabc1b605d78e43aee13916808ccc632a9e78'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'staging layer for orders data', 'columns': {'order_key': {'name': 'order_key', 'description': 'primary key of the model', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'customer_key': {'name': 'customer_key', 'description': 'foreign key to stg_tpch_customers', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'status_code': {'name': 'status_code', 'description': 'status of the order', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'total_price': {'name': 'total_price', 'description': 'raw price', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'order_date': {'name': 'order_date', 'description': 'date the order was made', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'priority_code': {'name': 'priority_code', 'description': 'code associated with the order', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'clerk_name': {'name': 'clerk_name', 'description': 'id of the clerk', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'ship_priority': {'name': 'ship_priority', 'description': 'numeric representation of the shipping priority, zero being the default', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'comment': {'name': 'comment', 'description': 'additional commentary', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/staging/tpch/stg_tpch.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1706652805.9290135, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.stg_tpch_orders', 'raw_code': "with source as (\n\n    select * from {{ source('tpch', 'orders') }}\n\n),\n\nrename as (\n\n    select\n    \n        o_orderkey as order_key,\n        o_custkey as customer_key,\n        o_orderstatus as status_code,\n        o_totalprice as total_price,\n        o_orderdate as order_date,\n        o_orderpriority as priority_code,\n        o_clerk as clerk_name,\n        o_shippriority as ship_priority,\n        o_comment as comment\n\n    from source\n\n)\n\nselect * from rename", 'language': 'sql', 'refs': [], 'sources': [['tpch', 'orders']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.tpch.orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.stg_tpch_line_items': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'stg_tpch_line_items', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'staging/tpch/stg_tpch_line_items.sql', 'original_file_path': 'models/staging/tpch/stg_tpch_line_items.sql', 'unique_id': 'model.tpch.stg_tpch_line_items', 'fqn': ['tpch', 'staging', 'tpch', 'stg_tpch_line_items'], 'alias': 'stg_tpch_line_items', 'checksum': {'name': 'sha256', 'checksum': 'ca9792b85a5005a1c65fff607ed734e5e9e631f163a37827e3b6e4ceac1a1ee3'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'staging layer for line items data', 'columns': {'order_item_key': {'name': 'order_item_key', 'description': 'surrogate key for the model -- combo of order_key + line_number', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'order_key': {'name': 'order_key', 'description': 'foreign key to stg_tpch_orders', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'part_key': {'name': 'part_key', 'description': 'foreign key to stg_tpch_part_suppliers', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'supplier_key': {'name': 'supplier_key', 'description': 'foreign key to stg_tpch_suppliers', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'line_number': {'name': 'line_number', 'description': 'sequence of the order items within the order', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'quantity': {'name': 'quantity', 'description': 'total units', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'extended_price': {'name': 'extended_price', 'description': 'line item price', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'discount_percentage': {'name': 'discount_percentage', 'description': 'percentage of the discount', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'tax_rate': {'name': 'tax_rate', 'description': 'tax rate of the order item', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'return_flag': {'name': 'return_flag', 'description': 'letter determining the status of the return (r is returned; a is accepted)', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'is_return': {'name': 'is_return', 'description': 'indicates a returned order (true / false)', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'status_code': {'name': 'status_code', 'description': 'status code of the order item', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'ship_date': {'name': 'ship_date', 'description': 'the date the order item is being shipped', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'commit_date': {'name': 'commit_date', 'description': 'the date the order item is being commited', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'receipt_date': {'name': 'receipt_date', 'description': 'the receipt date of the order item', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'ship_instructions': {'name': 'ship_instructions', 'description': 'additional instructions on the shipment', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'ship_mode': {'name': 'ship_mode', 'description': 'method of shipping', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'comment': {'name': 'comment', 'description': 'additional commentary', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/staging/tpch/stg_tpch.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1706652805.9244506, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.stg_tpch_line_items', 'raw_code': "with source as (\n\n    select * from {{ source('tpch', 'lineitem') }}\n\n),\n\nrenamed as (\n\n    select\n    \n        {{ dbt_utils.generate_surrogate_key(\n            ['l_orderkey', \n            'l_linenumber']) }}\n                as order_item_key,\n        l_orderkey as order_key,\n        l_partkey as part_key,\n        l_suppkey as supplier_key,\n        l_linenumber as line_number,\n        l_quantity as quantity,\n        l_extendedprice as extended_price,\n        l_discount as discount_percentage,\n        l_tax as tax_rate,\n        \n        case \n            when l_returnflag in ('R') then 'returned'\n            when l_returnflag in ('A') then 'accepted'\n            else 'unknown'\n        end as return_flag, \n\n        case \n            when return_flag = 'accepted' then false\n            else true\n        end as is_return,\n\n        case l_linestatus \n            when 'P' then 'returned'\n            when 'F' then 'billed'\n            when 'O' then 'shipped'\n            else null\n        end as status_code,\n        \n        l_shipdate as ship_date,\n        l_commitdate as commit_date,\n        l_receiptdate as receipt_date,\n        l_shipinstruct as ship_instructions,\n        l_shipmode as ship_mode,\n        l_comment as comment\n\n    from source\n\n)\n\nselect * from renamed", 'language': 'sql', 'refs': [], 'sources': [['tpch', 'lineitem']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.generate_surrogate_key'], 'nodes': ['source.tpch.tpch.lineitem']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.stg_tpch_part_suppliers': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'stg_tpch_part_suppliers', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'staging/tpch/stg_tpch_part_suppliers.sql', 'original_file_path': 'models/staging/tpch/stg_tpch_part_suppliers.sql', 'unique_id': 'model.tpch.stg_tpch_part_suppliers', 'fqn': ['tpch', 'staging', 'tpch', 'stg_tpch_part_suppliers'], 'alias': 'stg_tpch_part_suppliers', 'checksum': {'name': 'sha256', 'checksum': '8d6fd06f1a895d7dcff7fe7c806b575e6bacc1380863ae8f6455e1272ef75dd8'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'staging layer for suppliers data', 'columns': {'part_supplier_key': {'name': 'part_supplier_key', 'description': 'surrogate key for the model -- combo of ps_partkey + ps_suppkey', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'part_key': {'name': 'part_key', 'description': 'foreign key to stg_tpch_parts', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'supplier_key': {'name': 'supplier_key', 'description': 'foreign key to stg_tpch_suppliers', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'available_quantity': {'name': 'available_quantity', 'description': 'raw available quantity', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'cost': {'name': 'cost', 'description': 'raw cost', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'comment': {'name': 'comment', 'description': 'additional commentary', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/staging/tpch/stg_tpch.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1706652805.931252, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.stg_tpch_part_suppliers', 'raw_code': "with source as (\n\n    select * from {{ source('tpch', 'partsupp') }}\n\n),\n\nrenamed as (\n\n    select\n    \n        {{ dbt_utils.generate_surrogate_key(\n            ['ps_partkey', \n            'ps_suppkey']) }} \n                as part_supplier_key,\n        ps_partkey as part_key,\n        ps_suppkey as supplier_key,\n        ps_availqty as available_quantity,\n        ps_supplycost as cost,\n        ps_comment as comment\n\n    from source\n\n)\n\nselect * from renamed", 'language': 'sql', 'refs': [], 'sources': [['tpch', 'partsupp']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.generate_surrogate_key'], 'nodes': ['source.tpch.tpch.partsupp']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.stg_tpch_customers': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'stg_tpch_customers', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'staging/tpch/stg_tpch_customers.sql', 'original_file_path': 'models/staging/tpch/stg_tpch_customers.sql', 'unique_id': 'model.tpch.stg_tpch_customers', 'fqn': ['tpch', 'staging', 'tpch', 'stg_tpch_customers'], 'alias': 'stg_tpch_customers', 'checksum': {'name': 'sha256', 'checksum': '6d5af209730b008a316be2d033ff689b902c1fe932e2faf85047b6e178969748'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'staging layer for customers data', 'columns': {'customer_key': {'name': 'customer_key', 'description': 'primary key of the model', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'name': {'name': 'name', 'description': 'customer id', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'address': {'name': 'address', 'description': 'address of the customer', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'nation_key': {'name': 'nation_key', 'description': 'foreign key to stg_tpch_nations', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'phone_number': {'name': 'phone_number', 'description': 'phone number of the customer', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'account_balance': {'name': 'account_balance', 'description': 'total account balance from the customer', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'market_segment': {'name': 'market_segment', 'description': 'market segment of the customer', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'comment': {'name': 'comment', 'description': 'additional commentary', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/staging/tpch/stg_tpch.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1706652805.9162667, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.stg_tpch_customers', 'raw_code': "with source as (\n\n    select * from {{ source('tpch', 'customer') }}\n\n),final as (\n\n    select\n    \n        c_custkey as customer_key,\n        c_name as name,\n        c_address as address, \n        c_nationkey as nation_key,\n        c_phone as phone_number,\n        c_acctbal as account_balance,\n        c_mktsegment as market_segment,\n        c_comment as comment\n\n    from source\n\n)\n\nselect * from final", 'language': 'sql', 'refs': [], 'sources': [['tpch', 'customer']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.tpch.customer']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.stg_tpch_nations': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'stg_tpch_nations', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'staging/tpch/stg_tpch_nations.sql', 'original_file_path': 'models/staging/tpch/stg_tpch_nations.sql', 'unique_id': 'model.tpch.stg_tpch_nations', 'fqn': ['tpch', 'staging', 'tpch', 'stg_tpch_nations'], 'alias': 'stg_tpch_nations', 'checksum': {'name': 'sha256', 'checksum': 'b864eb71cb7121aaa9324c726e4b731790d1051663f5d0800cc333984f469a07'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'staging layer for nations data', 'columns': {'nation_key': {'name': 'nation_key', 'description': 'primary key of the model', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'name': {'name': 'name', 'description': 'nation name', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'region_key': {'name': 'region_key', 'description': 'foreign key to stg_tpch_regions', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'comment': {'name': 'comment', 'description': 'additional commentary', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/staging/tpch/stg_tpch.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1706652805.9259684, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.stg_tpch_nations', 'raw_code': "with source as (\n\n    select * from {{ source('tpch', 'nation') }}\n\n),\n\nrenamed as (\n\n    select\n    \n        n_nationkey as nation_key,\n        n_name as name,\n        n_regionkey as region_key,\n        n_comment as comment\n\n    from source\n\n)\n\nselect * from renamed", 'language': 'sql', 'refs': [], 'sources': [['tpch', 'nation']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.tpch.nation']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.stg_tpch_parts': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'stg_tpch_parts', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'staging/tpch/stg_tpch_parts.sql', 'original_file_path': 'models/staging/tpch/stg_tpch_parts.sql', 'unique_id': 'model.tpch.stg_tpch_parts', 'fqn': ['tpch', 'staging', 'tpch', 'stg_tpch_parts'], 'alias': 'stg_tpch_parts', 'checksum': {'name': 'sha256', 'checksum': '8ffc7b305f598ea1db84ec708219e456b237e7de5e2048b3bb3efc4c230192ef'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'staging layer for parts data', 'columns': {'part_key': {'name': 'part_key', 'description': 'primary key of the model', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'name': {'name': 'name', 'description': 'name of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'manufacturer': {'name': 'manufacturer', 'description': 'manufacturer of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'brand': {'name': 'brand', 'description': 'brand of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'type': {'name': 'type', 'description': 'type of part including material', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'size': {'name': 'size', 'description': 'size of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'container': {'name': 'container', 'description': 'container of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'retail_price': {'name': 'retail_price', 'description': 'raw retail price', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'comment': {'name': 'comment', 'description': 'additional commentary', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/staging/tpch/stg_tpch.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1706652805.935363, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.stg_tpch_parts', 'raw_code': "with source as (\n\n    select * from {{ source('tpch', 'part') }}\n\n),\n\nrenamed as (\n\n    select\n    \n        p_partkey as part_key,\n        p_name as name,\n        p_mfgr as manufacturer,\n        p_brand as brand,\n        p_type as type,\n        p_size as size,\n        p_container as container,\n        p_retailprice as retail_price,\n        p_comment as comment\n\n    from source\n\n)\n\nselect * from renamed", 'language': 'sql', 'refs': [], 'sources': [['tpch', 'part']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.tpch.part']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.use_variables': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'use_variables', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'demo_examples/use_variables.sql', 'original_file_path': 'models/demo_examples/use_variables.sql', 'unique_id': 'model.tpch.use_variables', 'fqn': ['tpch', 'demo_examples', 'use_variables'], 'alias': 'use_variables', 'checksum': {'name': 'sha256', 'checksum': '6645070a7fa501a6fa7ce26684617a5a70ed16d0e6c63c9f98d26d7861360e71'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'demo to show variables', 'columns': {'order_item_key': {'name': 'order_item_key', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/demo_examples/demo_examples.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.0446332, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.use_variables', 'raw_code': '-- This is here to show that data older than start_date exists - run this first\n-- select min(order_date) from {{ ref(\'fct_order_items\') }}\n\n-- start_date is defined in the dbt_project.yml \n-- to illustrate overriding variables from the command line, run dbt run -m use_variables --vars \'{"start_date": "1996-01-01"}\'\nselect * from {{ ref(\'fct_order_items\') }} where order_date >= \'{{ var("start_date") }}\'', 'language': 'sql', 'refs': [{'name': 'fct_order_items', 'package': None, 'version': None}, {'name': 'fct_order_items', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.fct_order_items']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.actual_and_forecasted_returns': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'actual_and_forecasted_returns', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'demo_examples/actual_and_forecasted_returns.sql', 'original_file_path': 'models/demo_examples/actual_and_forecasted_returns.sql', 'unique_id': 'model.tpch.actual_and_forecasted_returns', 'fqn': ['tpch', 'demo_examples', 'actual_and_forecasted_returns'], 'alias': 'actual_and_forecasted_returns', 'checksum': {'name': 'sha256', 'checksum': '2a726f62feb57a9cb41d0f9aeb42e374048ab5ca15bae2689e3ba0a122b168cd'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Actual and forecasted returned orders; forecast generated using Prophet predictive model', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/demo_examples/demo_examples.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.0430946, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.actual_and_forecasted_returns', 'raw_code': 'with agg_daily_returned_orders as (\n    select * from {{ ref(\'agg_daily_returned_orders\') }}\n),\n\nforecast_daily_returns as (\n    select * from {{ ref(\'forecast_daily_returns\') }}\n),\n\nfinal as (\n    select \n        "DS" as relevant_date, \n        "Y" as returned_orders, \n        false as is_forecast,\n        null as lower_bound,\n        null as upper_bound\n    from agg_daily_returned_orders\n\n    union all \n\n    select \n        cast(to_timestamp_ntz("ds"::varchar) as date) as relevant_date, \n        "yhat" as returned_orders, \n        true as is_forecast,\n        "yhat_lower" as lower_bound,\n        "yhat_upper" as upper_bound \n    from forecast_daily_returns\n    where relevant_date > (select max("DS") from agg_daily_returned_orders)\n)\n\nselect * from final', 'language': 'sql', 'refs': [{'name': 'agg_daily_returned_orders', 'package': None, 'version': None}, {'name': 'forecast_daily_returns', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.agg_daily_returned_orders', 'model.tpch.forecast_daily_returns']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.slowly_changing_dimension_incremental': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'slowly_changing_dimension_incremental', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'demo_examples/slowly_changing_dimensions/slowly_changing_dimension_incremental.sql', 'original_file_path': 'models/demo_examples/slowly_changing_dimensions/slowly_changing_dimension_incremental.sql', 'unique_id': 'model.tpch.slowly_changing_dimension_incremental', 'fqn': ['tpch', 'demo_examples', 'slowly_changing_dimensions', 'slowly_changing_dimension_incremental'], 'alias': 'slowly_changing_dimension_incremental', 'checksum': {'name': 'sha256', 'checksum': 'ba61dbfc4d162dee86b92dd38ce810b25846fddfdf7a542e630e2de776748744'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'incremental', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': 'row_id', 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'merge_update_columns': ['eff_to', 'current_flg'], 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'incremental', 'unique_key': 'row_id', 'merge_update_columns': ['eff_to', 'current_flg']}, 'created_at': 1706652805.0787637, 'config_call_dict': {'materialized': 'incremental', 'unique_key': 'row_id', 'merge_update_columns': ['eff_to', 'current_flg']}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.slowly_changing_dimension_incremental', 'raw_code': "{{\n    config(\n        materialized='incremental',\n        unique_key='row_id',\n        merge_update_columns = ['eff_to','current_flg']\n    )\n}}\n\nwith\nevents as (\n    select * from {{ ref('immutable_events') }}\n    )\n\n,slowly_changing_dim as (\n    select \n{{ dbt_utils.generate_surrogate_key(['id', 'event_dt']) }} as row_id\n,events.id\n,events.status\n,events.event_dt as event_dt\n,events.event_dt as eff_from\n,case when lead(events.id) over(order by events.id, events.event_dt) = events.id then lead(events.event_dt) over(order by events.id, events.event_dt) else null end as eff_to\n,case when lead(events.id) over(order by events.id, events.event_dt) = events.id then 'N' else 'Y' end as current_flg\nfrom events\n\n{% if is_incremental() %}\n\nwhere id in (\n    select id from {{ ref('immutable_events')  }} where event_dt > (select max(event_dt) from {{ this }} )\n)\n\n{% endif %}\n\n)\n\n,final as (\n    select row_id\n    ,id\n    ,event_dt\n    ,status\n    ,eff_from\n    ,eff_to\n    ,current_flg\n    from slowly_changing_dim\n)\n\nselect * from final", 'language': 'sql', 'refs': [{'name': 'immutable_events', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.generate_surrogate_key', 'macro.dbt.is_incremental'], 'nodes': ['seed.tpch.immutable_events']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.slowly_changing_dimension_table': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'slowly_changing_dimension_table', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'demo_examples/slowly_changing_dimensions/slowly_changing_dimension_table.sql', 'original_file_path': 'models/demo_examples/slowly_changing_dimensions/slowly_changing_dimension_table.sql', 'unique_id': 'model.tpch.slowly_changing_dimension_table', 'fqn': ['tpch', 'demo_examples', 'slowly_changing_dimensions', 'slowly_changing_dimension_table'], 'alias': 'slowly_changing_dimension_table', 'checksum': {'name': 'sha256', 'checksum': '8846f21dfa58e20176d89dec5b240b3819f14730865ae9b25010eb3ac837ff81'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table'}, 'created_at': 1706652805.088102, 'config_call_dict': {'materialized': 'table'}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.slowly_changing_dimension_table', 'raw_code': "{{\n    config(\n        materialized='table'\n    )\n}}\n\nwith \n\nevents as \n    (select * from {{ ref('immutable_events') }})\n\n,slowly_changing_dimension as (\nselect \n{{ dbt_utils.generate_surrogate_key(['id', 'event_dt']) }} as row_id\n,events.id\n,events.status\n,events.event_dt as event_dt\n,events.event_dt as eff_from\n,case when lead(events.id) over(order by id) = id then lead(events.event_dt) over(order by events.id) else null end as eff_to\n,case when lead(events.id) over(order by id) = id then 'N' else 'Y' end as current_flg\nfrom events\n)\n\n,final as (\n    select row_id\n    ,id\n    ,status\n    ,event_dt\n    ,eff_from\n    ,eff_to\n    ,current_flg\n    from slowly_changing_dimension\n)\n\nselect * from final", 'language': 'sql', 'refs': [{'name': 'immutable_events', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.generate_surrogate_key'], 'nodes': ['seed.tpch.immutable_events']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.dim_bookings_scd6': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'dim_bookings_scd6', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'demo_examples/slowly_changing_dimensions/dim_bookings_scd6.sql', 'original_file_path': 'models/demo_examples/slowly_changing_dimensions/dim_bookings_scd6.sql', 'unique_id': 'model.tpch.dim_bookings_scd6', 'fqn': ['tpch', 'demo_examples', 'slowly_changing_dimensions', 'dim_bookings_scd6'], 'alias': 'dim_bookings_scd6', 'checksum': {'name': 'sha256', 'checksum': '776ea75d040ea44873933d22bd3e71b66673391cb4f8997dadaba80292d46b05'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table'}, 'created_at': 1706652805.0961597, 'config_call_dict': {'materialized': 'table'}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.dim_bookings_scd6', 'raw_code': "{{\n  config(\n    materialized = 'table'\n    )\n}}\n\nselect id,\nstatus,\nstate,\ncountry,\n{{ cents_to_dollars('booking_amt',2) }} as booking_usd,\nevent_dt,\ndbt_scd_id,\ndbt_updated_at,\ndbt_valid_from,\ndbt_valid_to,\n{{ scd2_cols('id', 'event_dt') }},\n{{ scd3_cols('status,state', 'id', 'event_dt') }} \nfrom {{ ref('bookings_snapshot') }}\norder by id, event_dt", 'language': 'sql', 'refs': [{'name': 'bookings_snapshot', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tpch.cents_to_dollars', 'macro.tpch.scd2_cols', 'macro.tpch.scd3_cols'], 'nodes': ['snapshot.tpch.bookings_snapshot']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.dim_bookings': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'dim_bookings', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'demo_examples/slowly_changing_dimensions/dim_bookings.sql', 'original_file_path': 'models/demo_examples/slowly_changing_dimensions/dim_bookings.sql', 'unique_id': 'model.tpch.dim_bookings', 'fqn': ['tpch', 'demo_examples', 'slowly_changing_dimensions', 'dim_bookings'], 'alias': 'dim_bookings', 'checksum': {'name': 'sha256', 'checksum': '4f2cf7246965adc1bb57558f685f0ac7e852db10ab50842954751e5ab90a8fa7'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table'}, 'created_at': 1706652805.2300487, 'config_call_dict': {'materialized': 'table'}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.dim_bookings', 'raw_code': "{{\n  config(\n    materialized = 'table'\n    )\n}}\n\nselect id,\nstatus,\nstate,\ncountry,\n{{ cents_to_dollars('booking_amt',2) }} as booking_usd,\nevent_dt,\ndbt_scd_id,\ndbt_updated_at,\ndbt_valid_from,\ndbt_valid_to,\n{{ scd3_cols('status,state', 'id', 'event_dt') }} \nfrom {{ ref('bookings_snapshot') }}\norder by id, event_dt", 'language': 'sql', 'refs': [{'name': 'bookings_snapshot', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tpch.cents_to_dollars', 'macro.tpch.scd3_cols'], 'nodes': ['snapshot.tpch.bookings_snapshot']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.metricflow_time_spine': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'metricflow_time_spine', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'metrics_demo/metricflow_time_spine.sql', 'original_file_path': 'models/metrics_demo/metricflow_time_spine.sql', 'unique_id': 'model.tpch.metricflow_time_spine', 'fqn': ['tpch', 'metrics_demo', 'metricflow_time_spine'], 'alias': 'metricflow_time_spine', 'checksum': {'name': 'sha256', 'checksum': '47914e17fe314e27f22878b413a03b264ce1eaecf2cfa09ecf9a309155f25e0c'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table'}, 'created_at': 1706652805.2376373, 'config_call_dict': {'materialized': 'table'}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.metricflow_time_spine', 'raw_code': '{{\n    config(\n        materialized = \'table\',\n    )\n}}\n\nwith days as (\n\n    {{\n        dbt_utils.date_spine(\n            \'day\',\n            "to_date(\'01/01/2000\',\'mm/dd/yyyy\')",\n            "to_date(\'01/01/2027\',\'mm/dd/yyyy\')"\n        )\n    }}\n\n),\n\nfinal as (\n    select cast(date_day as date) as date_day\n    from days\n)\n\nselect * from final', 'language': 'sql', 'refs': [], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt_utils.date_spine'], 'nodes': []}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.agg_ship_modes_dynamic_pivot': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'agg_ship_modes_dynamic_pivot', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/aggregates/agg_ship_modes_dynamic_pivot.sql', 'original_file_path': 'models/marts/aggregates/agg_ship_modes_dynamic_pivot.sql', 'unique_id': 'model.tpch.agg_ship_modes_dynamic_pivot', 'fqn': ['tpch', 'marts', 'aggregates', 'agg_ship_modes_dynamic_pivot'], 'alias': 'agg_ship_modes_dynamic_pivot', 'checksum': {'name': 'sha256', 'checksum': '7bb902ee2f121900dface286424b53cbf8a3b6955f4323df0621f760385ce5df'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Example of creating a pivot table with hard-coded columns based on a query of the ship modes that are in the system', 'columns': {'order_year': {'name': 'order_year', 'description': 'year of the order', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/marts/aggregates/aggregates.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.1035812, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.agg_ship_modes_dynamic_pivot', 'raw_code': '/* Create a pivot table with dynamic columns based on the ship modes that are in the system */\n\n{%- call statement(\'result\', fetch_result=True) -%}\n\n    {# this pulls the unique ship modes from the fct_order_items table #}\n    select ship_mode from {{ ref(\'fct_order_items\') }} group by 1 \n\n{%- endcall %}\n\n{% set ship_modes = load_result(\'result\').table.columns[0].values() %}\n\nselect\n    date_part(\'year\', order_date) as order_year,\n\n    {# Loop over ship_modes array from above, and sum based on whether the record matches the ship mode #}\n    {%- for ship_mode in ship_modes -%}\n        sum(case when ship_mode = \'{{ship_mode}}\' then gross_item_sales_amount end) as "{{ship_mode|replace(\' \', \'_\')}}_amount"\n        {%- if not loop.last -%},{% endif %}\n    {% endfor %}\n\nfrom {{ ref(\'fct_order_items\') }}\ngroup by 1', 'language': 'sql', 'refs': [{'name': 'fct_order_items', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.statement'], 'nodes': ['model.tpch.fct_order_items']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.agg_daily_returned_orders': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'agg_daily_returned_orders', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/aggregates/agg_daily_returned_orders.sql', 'original_file_path': 'models/marts/aggregates/agg_daily_returned_orders.sql', 'unique_id': 'model.tpch.agg_daily_returned_orders', 'fqn': ['tpch', 'marts', 'aggregates', 'agg_daily_returned_orders'], 'alias': 'agg_daily_returned_orders', 'checksum': {'name': 'sha256', 'checksum': 'fb544aed6942c7bfa07632294c1bccc497684915b7332e4a496c00d28695625e'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.2581975, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.agg_daily_returned_orders', 'raw_code': "with fct_order_items as (\n    select * from {{ ref('fct_order_items') }}\n),\n\nfinal as (\n    select\n        fct_order_items.order_date as ds\n        , cast(1.0*count(case when is_return then order_item_key else null end) as float) as y\n    from fct_order_items\n    group by 1\n    order by 1 desc\n)\n\nselect * from final", 'language': 'sql', 'refs': [{'name': 'fct_order_items', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.fct_order_items']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.agg_ship_modes_hardcoded_pivot': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'agg_ship_modes_hardcoded_pivot', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/aggregates/agg_ship_modes_hardcoded_pivot.sql', 'original_file_path': 'models/marts/aggregates/agg_ship_modes_hardcoded_pivot.sql', 'unique_id': 'model.tpch.agg_ship_modes_hardcoded_pivot', 'fqn': ['tpch', 'marts', 'aggregates', 'agg_ship_modes_hardcoded_pivot'], 'alias': 'agg_ship_modes_hardcoded_pivot', 'checksum': {'name': 'sha256', 'checksum': 'fb4d45e5eeb79b20f3daa52029cb340a75fa52c2e6516c9f921ee34b21d604dd'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Example of creating a pivot table with dynamic columns based on the ship modes that are in the system', 'columns': {'order_year': {'name': 'order_year', 'description': 'year of the order', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/marts/aggregates/aggregates.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.1028638, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.agg_ship_modes_hardcoded_pivot', 'raw_code': "/* Create a pivot table with hard-coded columns based on a query of the ship modes that are in the system */\n\nwith merged as (\n    select\n        date_part('year', order_date) as order_year,\n        ship_mode,\n        gross_item_sales_amount\n    from {{ ref('fct_order_items') }}\n)\n\nselect\n    * \nfrom\n    merged\n    -- have to manually map strings in the pivot operation\n    pivot(sum(gross_item_sales_amount) for ship_mode in (\n        'AIR',\n        'REG AIR',\n        'FOB',\n        'RAIL',\n        'MAIL',\n        'SHIP',\n        'TRUCK'\n    )) as p \n\norder by order_year", 'language': 'sql', 'refs': [{'name': 'fct_order_items', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.fct_order_items']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.monthly_gross_revenue': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'monthly_gross_revenue', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/aggregates/monthly_gross_revenue.sql', 'original_file_path': 'models/marts/aggregates/monthly_gross_revenue.sql', 'unique_id': 'model.tpch.monthly_gross_revenue', 'fqn': ['tpch', 'marts', 'aggregates', 'monthly_gross_revenue'], 'alias': 'monthly_gross_revenue', 'checksum': {'name': 'sha256', 'checksum': '3799035b4333b0165669a483196761e1a7ad851a3a93e094d08cc5e1d871fd69'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {'order_month': {'name': 'order_month', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/marts/aggregates/aggregates.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.1046991, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.monthly_gross_revenue', 'raw_code': "select \n    date_trunc(MONTH, fct_order_items.order_date) as order_month\n    , sum(fct_order_items.gross_item_sales_amount) as gross_revenue\nfrom {{ ref('fct_order_items') }}\ngroup by 1", 'language': 'sql', 'refs': [{'name': 'fct_order_items', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.fct_order_items']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.dim_customers': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'dim_customers', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/core/dim_customers.sql', 'original_file_path': 'models/marts/core/dim_customers.sql', 'unique_id': 'model.tpch.dim_customers', 'fqn': ['tpch', 'marts', 'core', 'dim_customers'], 'alias': 'dim_customers', 'checksum': {'name': 'sha256', 'checksum': '87235ae51f8254961a90b63bad4f34c89616c157555a790260226d694821dc97'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'transient': False, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Customer dimensions table', 'columns': {'customer_key': {'name': 'customer_key', 'description': 'Primary key on the customers table', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'region': {'name': 'region', 'description': 'region name', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'name': {'name': 'name', 'description': 'customer id', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'address': {'name': 'address', 'description': 'address of the customer', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'nation': {'name': 'nation', 'description': 'nation name', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'phone_number': {'name': 'phone_number', 'description': 'phone number of the customer', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'account_balance': {'name': 'account_balance', 'description': 'raw account balance', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'market_segment': {'name': 'market_segment', 'description': 'market segment of the customer', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/marts/core/core.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'transient': False}, 'created_at': 1706652806.1292505, 'config_call_dict': {'materialized': 'table', 'transient': False}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.dim_customers', 'raw_code': "--change\n\n{{\n    config(\n        materialized = 'table',\n        transient=false\n    )\n}}\n\nwith customer as (\n\n    select * from {{ ref('stg_tpch_customers') }}\n\n),\nnation as (\n\n    select * from {{ ref('stg_tpch_nations') }}\n),\nregion as (\n\n    select * from {{ ref('stg_tpch_regions') }}\n\n),\nfinal as (\n    select \n        customer.customer_key,\n        customer.name,\n        customer.address,\n        {# nation.nation_key as nation_key, #}\n        nation.name as nation,\n        {# region.region_key as region_key, #}\n        region.name as region,\n        customer.phone_number,\n        customer.account_balance,\n        customer.market_segment\n    from\n        customer\n        inner join nation\n            on customer.nation_key = nation.nation_key\n        inner join region\n            on nation.region_key = region.region_key\n)\nselect \n    *\nfrom\n    final\norder by\n    customer_key", 'language': 'sql', 'refs': [{'name': 'stg_tpch_customers', 'package': None, 'version': None}, {'name': 'stg_tpch_nations', 'package': None, 'version': None}, {'name': 'stg_tpch_regions', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.stg_tpch_customers', 'model.tpch.stg_tpch_nations', 'model.tpch.stg_tpch_regions']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.dim_suppliers': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'dim_suppliers', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/core/dim_suppliers.sql', 'original_file_path': 'models/marts/core/dim_suppliers.sql', 'unique_id': 'model.tpch.dim_suppliers', 'fqn': ['tpch', 'marts', 'core', 'dim_suppliers'], 'alias': 'dim_suppliers', 'checksum': {'name': 'sha256', 'checksum': 'ecdf5d788fb87a00fe8c6e089a5a3e0e6e5e7d0ae6ac0076d68a675dae309518'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Suppliers dimensions table', 'columns': {'supplier_key': {'name': 'supplier_key', 'description': 'primary key of the model', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'supplier_name': {'name': 'supplier_name', 'description': 'id of the supplier', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'supplier_address': {'name': 'supplier_address', 'description': 'address of the supplier', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'nation': {'name': 'nation', 'description': 'nation name', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'region': {'name': 'region', 'description': 'region name', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'phone_number': {'name': 'phone_number', 'description': 'phone number of the supplier', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'account_balance': {'name': 'account_balance', 'description': 'raw account balance', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/marts/core/core.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table'}, 'created_at': 1706652806.1316266, 'config_call_dict': {'materialized': 'table'}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.dim_suppliers', 'raw_code': "{{\n    config(\n        materialized = 'table'\n    )\n}}\n\nwith supplier as (\n\n    select * from {{ ref('stg_tpch_suppliers') }}\n\n),\nnation as (\n\n    select * from {{ ref('stg_tpch_nations') }}\n),\nregion as (\n\n    select * from {{ ref('stg_tpch_regions') }}\n\n),\nfinal as (\n\n    select \n        supplier.supplier_key,\n        supplier.supplier_name,\n        supplier.supplier_address,\n        nation.name as nation,\n        region.name as region,\n        supplier.phone_number,\n        supplier.account_balance\n    from\n        supplier\n    inner join nation\n            on supplier.nation_key = nation.nation_key\n    inner join region \n            on nation.region_key = region.region_key\n)\n\nselect * from final", 'language': 'sql', 'refs': [{'name': 'stg_tpch_suppliers', 'package': None, 'version': None}, {'name': 'stg_tpch_nations', 'package': None, 'version': None}, {'name': 'stg_tpch_regions', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.stg_tpch_suppliers', 'model.tpch.stg_tpch_nations', 'model.tpch.stg_tpch_regions']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.dim_parts': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'dim_parts', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/core/dim_parts.sql', 'original_file_path': 'models/marts/core/dim_parts.sql', 'unique_id': 'model.tpch.dim_parts', 'fqn': ['tpch', 'marts', 'core', 'dim_parts'], 'alias': 'dim_parts', 'checksum': {'name': 'sha256', 'checksum': 'd219372a8f9f61e7f76d160ba914834de7fc5883f1fdc81c03da59c08ad262ba'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Parts dimensions table', 'columns': {'part_key': {'name': 'part_key', 'description': 'primary key of the model', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'manufacturer': {'name': 'manufacturer', 'description': 'manufacturer of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'name': {'name': 'name', 'description': 'name of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'brand': {'name': 'brand', 'description': 'brand of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'type': {'name': 'type', 'description': 'type of part including material', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'size': {'name': 'size', 'description': 'size of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'container': {'name': 'container', 'description': 'container of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'retail_price': {'name': 'retail_price', 'description': 'raw retail price', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/marts/core/core.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table'}, 'created_at': 1706652806.1304975, 'config_call_dict': {'materialized': 'table'}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.dim_parts', 'raw_code': "{{\n    config(\n        materialized = 'table'\n    )\n}}\nwith part as (\n\n    select * from {{ref('stg_tpch_parts')}}\n\n),\n\nfinal as (\n    select \n        part_key,\n        manufacturer,\n        name,\n        brand,\n        type,\n        size,\n        container,\n        retail_price\n    from\n        part\n)\nselect *\nfrom final  \norder by part_key", 'language': 'sql', 'refs': [{'name': 'stg_tpch_parts', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.stg_tpch_parts']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.fct_orders': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'fct_orders', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/core/fct_orders.sql', 'original_file_path': 'models/marts/core/fct_orders.sql', 'unique_id': 'model.tpch.fct_orders', 'fqn': ['tpch', 'marts', 'core', 'fct_orders'], 'alias': 'fct_orders', 'checksum': {'name': 'sha256', 'checksum': 'f1d2c85b420d929fab95a426c7e5051d520609f9c3b92193060f17f51b5d5dd0'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': ['finance'], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': ['finance'], 'description': 'orders fact table', 'columns': {'order_key': {'name': 'order_key', 'description': 'primary key of the model', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'customer_key': {'name': 'customer_key', 'description': 'foreign key for customers', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'order_date': {'name': 'order_date', 'description': 'date of the order', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'status_code': {'name': 'status_code', 'description': 'status of the order', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'priority_code': {'name': 'priority_code', 'description': 'code associated with the order', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'clerk_name': {'name': 'clerk_name', 'description': 'id of the clerk', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'ship_priority': {'name': 'ship_priority', 'description': 'numeric representation of the shipping priority, zero being the default', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'order_count': {'name': 'order_count', 'description': 'number of orders (includes returns)', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'return_count': {'name': 'return_count', 'description': 'How many line items have the return flag in this order?', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'gross_item_sales_amount': {'name': 'gross_item_sales_amount', 'description': 'same as extended_price', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'item_discount_amount': {'name': 'item_discount_amount', 'description': 'item level discount amount. this is always a negative number', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'item_tax_amount': {'name': 'item_tax_amount', 'description': 'item level tax total', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'net_item_sales_amount': {'name': 'net_item_sales_amount', 'description': 'the net total which factors in discount and tax', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/marts/core/core.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'tags': ['finance']}, 'created_at': 1706652806.1403637, 'config_call_dict': {'materialized': 'table', 'tags': ['finance']}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.fct_orders', 'raw_code': "{{\n    config(\n        materialized = 'table',\n        tags=['finance']\n    )\n}}\n\nwith orders as (\n    \n    select * from {{ ref('stg_tpch_orders') }} \n\n),\norder_item as (\n    \n    select * from {{ ref('order_items') }}\n\n),\norder_item_summary as (\n\n    select \n        order_key,\n        sum(gross_item_sales_amount) as gross_item_sales_amount,\n        sum(item_discount_amount) as item_discount_amount,\n        sum(item_tax_amount) as item_tax_amount,\n        sum(net_item_sales_amount) as net_item_sales_amount,\n        count_if( is_return = true ) as return_count\n    from order_item\n    group by\n        1\n),\nfinal as (\n\n    select \n\n        orders.order_key, \n        orders.order_date,\n        orders.customer_key,\n        orders.status_code,\n        orders.priority_code,\n        orders.clerk_name,\n        orders.ship_priority,     \n        1 as order_count,\n        order_item_summary.return_count,             \n        order_item_summary.gross_item_sales_amount,\n        order_item_summary.item_discount_amount,\n        order_item_summary.item_tax_amount,\n        order_item_summary.net_item_sales_amount\n    from\n        orders\n        inner join order_item_summary\n            on orders.order_key = order_item_summary.order_key\n)\nselect \n    *\nfrom\n    final\n\norder by\n    order_date", 'language': 'sql', 'refs': [{'name': 'stg_tpch_orders', 'package': None, 'version': None}, {'name': 'order_items', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.stg_tpch_orders', 'model.tpch.order_items']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.fct_order_items': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'fct_order_items', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/core/fct_order_items.sql', 'original_file_path': 'models/marts/core/fct_order_items.sql', 'unique_id': 'model.tpch.fct_order_items', 'fqn': ['tpch', 'marts', 'core', 'fct_order_items'], 'alias': 'fct_order_items', 'checksum': {'name': 'sha256', 'checksum': '1bc1935c9d5cb0096e3f86b0539a8b60c496bc323086b296e772480ee9808d19'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': ['finance'], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': ['finance'], 'description': 'order items fact table', 'columns': {'order_item_key': {'name': 'order_item_key', 'description': 'surrogate key for the model -- combo of order_key + line_number', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'order_key': {'name': 'order_key', 'description': 'foreign key for orders', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'order_date': {'name': 'order_date', 'description': 'date of the order', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'customer_key': {'name': 'customer_key', 'description': 'foreign key for customers', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'part_key': {'name': 'part_key', 'description': 'foreign key for part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'supplier_key': {'name': 'supplier_key', 'description': 'foreign key for suppliers', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'order_item_status_code': {'name': 'order_item_status_code', 'description': 'status of the order item', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'return_flag': {'name': 'return_flag', 'description': 'letter determining the status of the return (r is returned; a is accepted)', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'line_number': {'name': 'line_number', 'description': 'sequence of the order items within the order', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'ship_date': {'name': 'ship_date', 'description': 'the date the order item is being shipped', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'commit_date': {'name': 'commit_date', 'description': 'the date the order item is being commited', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'receipt_date': {'name': 'receipt_date', 'description': 'the receipt date of the order item', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'ship_mode': {'name': 'ship_mode', 'description': 'method of shipping', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'supplier_cost': {'name': 'supplier_cost', 'description': 'raw cost', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'base_price': {'name': 'base_price', 'description': 'since extended_price is the line item total, we back out the price per item', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'discount_percentage': {'name': 'discount_percentage', 'description': 'percentage of the discount', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'discounted_price': {'name': 'discounted_price', 'description': 'factoring in the discount_percentage, the line item discount total', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'tax_rate': {'name': 'tax_rate', 'description': 'tax rate of the order item', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'nation_key': {'name': 'nation_key', 'description': 'Nation key', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'order_item_count': {'name': 'order_item_count', 'description': 'count of order items', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'quantity': {'name': 'quantity', 'description': 'total units', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'gross_item_sales_amount': {'name': 'gross_item_sales_amount', 'description': 'same as extended_price', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'discounted_item_sales_amount': {'name': 'discounted_item_sales_amount', 'description': 'line item (includes quantity) discount amount', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'item_discount_amount': {'name': 'item_discount_amount', 'description': 'item level discount amount. this is always a negative number', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'item_tax_amount': {'name': 'item_tax_amount', 'description': 'item level tax total', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'net_item_sales_amount': {'name': 'net_item_sales_amount', 'description': 'the net total which factors in discount and tax', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/marts/core/core.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'tags': ['finance']}, 'created_at': 1706652806.1379871, 'config_call_dict': {'materialized': 'table', 'tags': ['finance']}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.fct_order_items', 'raw_code': "{{\n    config(\n        materialized = 'table',\n        tags = ['finance']\n    )\n}}\n\nwith order_item as (\n    \n    select * from {{ ref('order_items') }}\n\n),\npart_supplier as (\n    \n    select * from {{ ref('part_suppliers') }}\n\n),\nfinal as (\n    select \n        order_item.order_item_key,\n        order_item.order_key,\n        order_item.order_date,\n        order_item.customer_key,\n        order_item.part_key,\n        order_item.supplier_key,\n        order_item.order_item_status_code,\n        order_item.is_return,\n        order_item.line_number,\n        order_item.ship_date,\n        order_item.commit_date,\n        order_item.receipt_date,\n        order_item.ship_mode,\n        part_supplier.cost as supplier_cost,\n        {# ps.retail_price, #}\n        order_item.base_price,\n        order_item.discount_percentage,\n        order_item.discounted_price,\n        order_item.tax_rate,\n        part_supplier.nation_key,\n        1 as order_item_count,\n        order_item.quantity,\n        order_item.gross_item_sales_amount,\n        order_item.discounted_item_sales_amount,\n        order_item.item_discount_amount,\n        order_item.item_tax_amount,\n        order_item.net_item_sales_amount\n\n    from\n        order_item\n        inner join part_supplier\n            on order_item.part_key = part_supplier.part_key and\n                order_item.supplier_key = part_supplier.supplier_key\n)\nselect \n    *\nfrom\n    final\norder by\n    order_date", 'language': 'sql', 'refs': [{'name': 'order_items', 'package': None, 'version': None}, {'name': 'part_suppliers', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.order_items', 'model.tpch.part_suppliers']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.fct_pizza_sales': {'database': 'mike_fuller_sandbox', 'schema': 'dbt_mfuller_sa_demo_test_defer_pizza', 'name': 'fct_pizza_sales', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/core/fct_pizza_sales.sql', 'original_file_path': 'models/marts/core/fct_pizza_sales.sql', 'unique_id': 'model.tpch.fct_pizza_sales', 'fqn': ['tpch', 'marts', 'core', 'fct_pizza_sales'], 'alias': 'fct_pizza_sales', 'checksum': {'name': 'sha256', 'checksum': 'cb6f17d79d3e57dfc04b1707eada300cd1574f0b2f80dcceea467b583a01ad28'}, 'config': {'enabled': True, 'alias': None, 'schema': 'pizza', 'database': 'mike_fuller_sandbox', 'tags': [], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'pizza sales fact table', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/staging/pizza/pizza.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'database': 'mike_fuller_sandbox', 'schema': 'pizza'}, 'created_at': 1706652805.9000878, 'config_call_dict': {}, 'relation_name': 'mike_fuller_sandbox.dbt_mfuller_sa_demo_test_defer_pizza.fct_pizza_sales', 'raw_code': '{% set ingredients_query %}\n    select trim(l.value) as ingredient\n    from\n        {{ ref(\'stg_pizza_sales\') }} pizza_sales,\n        lateral split_to_table(pizza_sales.pizza_ingredients, \',\') as l\n    group by trim(l.value)\n    order by ingredient\n{% endset %}\n\n{% set results = run_query(ingredients_query) %}\n\n{% if execute %} {% set ingredients_list = results.columns[0].values() %}\n{% else %} {% set ingredients_list = [] %}\n{% endif %}\n\n\nwith\n    pizza_sales as (select * from {{ ref(\'stg_pizza_sales\') }}),\n\n    ingredients_bool as (\n    select \n        order_details_id,\n        {%- for ingredient in ingredients_list %}\n        contains(\n            collate(pizza_ingredients, \'en-ci\'), \'{{ingredient}}\'\n        ) as has_{{ ingredient.replace(" ", "_").replace(\'-\',\'_\') | lower }}\n        {%- if not loop.last %},{% endif -%}\n        {% endfor %}\n\n        from pizza_sales\n    ),\n\n    final as (\n\n        select\n            --pizza_sales.order_details_id,\n            pizza_sales.order_id,\n            pizza_sales.pizza_id,\n            pizza_sales.order_quantity,\n            pizza_sales.order_date,\n            pizza_sales.order_time,\n            pizza_sales.unit_price,\n            pizza_sales.total_price,\n            pizza_sales.pizza_size,\n            pizza_sales.pizza_category,\n            pizza_sales.pizza_ingredients,\n            pizza_sales.pizza_name,\n            ingredients_bool.*\n        from pizza_sales\n        join\n            ingredients_bool\n            on pizza_sales.order_details_id = ingredients_bool.order_details_id\n    )\n\nselect *\nfrom final', 'language': 'sql', 'refs': [{'name': 'stg_pizza_sales', 'package': None, 'version': None}, {'name': 'stg_pizza_sales', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.run_query'], 'nodes': ['model.tpch.stg_pizza_sales']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.fct_results': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'fct_results', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/core/formula1/fct_results.sql', 'original_file_path': 'models/marts/core/formula1/fct_results.sql', 'unique_id': 'model.tpch.fct_results', 'fqn': ['tpch', 'marts', 'core', 'formula1', 'fct_results'], 'alias': 'fct_results', 'checksum': {'name': 'sha256', 'checksum': '4611db61d47c92a6f8b5c8a3f175e0176330548c0d4afa02c90e383a5b524ef2'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table'}, 'created_at': 1706652805.3030417, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.fct_results', 'raw_code': "with int_results as (\n\n  select * from {{ ref('int_results') }}\n\n),\n\nint_pit_stops as (\n  select \n    race_id,\n    driver_id, \n    max(total_pit_stops_per_race) as total_pit_stops_per_race\n  from {{ ref('int_pit_stops') }}\n  group by 1,2\n  \n), \n\ncircuits as (\n\n  select * from {{ ref('stg_f1_circuits') }}\n  \n), \n \n base_results as (\n     select \n        result_id,\n        int_results.race_id,\n        race_year, \n        race_round,\n        int_results.circuit_id,\n        int_results.circuit_name,\n        circuit_ref,\n        location,\n        country,\n        latitude,\n        longitude,\n        altitude,\n        total_pit_stops_per_race, \n        race_date,\n        race_time, \n        int_results.driver_id, \n        driver, \n        driver_number,\n        drivers_age_years, \n        driver_nationality,\n        constructor_id,\n        constructor_name,\n        constructor_nationality, \n        grid, \n        position,\n        position_text,\n        position_order,\n        points,\n        laps,\n        results_time_formatted, \n        results_milliseconds,\n        fastest_lap,\n        results_rank,\n        fastest_lap_time_formatted,\n        fastest_lap_speed, \n        status_id,\n        status,\n        dnf_flag\n     from int_results\n     left join circuits\n        on int_results.circuit_id=circuits.circuit_id\n     left join int_pit_stops \n        on int_results.driver_id=int_pit_stops.driver_id and int_results.race_id=int_pit_stops.race_id\n )\n\nselect * from base_results", 'language': 'sql', 'refs': [{'name': 'int_results', 'package': None, 'version': None}, {'name': 'int_pit_stops', 'package': None, 'version': None}, {'name': 'stg_f1_circuits', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.int_results', 'model.tpch.int_pit_stops', 'model.tpch.stg_f1_circuits']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.pit_stops_joined': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'pit_stops_joined', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/core/formula1/pit_stops_joined.sql', 'original_file_path': 'models/marts/core/formula1/pit_stops_joined.sql', 'unique_id': 'model.tpch.pit_stops_joined', 'fqn': ['tpch', 'marts', 'core', 'formula1', 'pit_stops_joined'], 'alias': 'pit_stops_joined', 'checksum': {'name': 'sha256', 'checksum': '59c1b529e1df0e3017eb680dbca4056c3c19562a9c9a1a13d54cf1158a440217'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table'}, 'created_at': 1706652805.3062007, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.pit_stops_joined', 'raw_code': "with base_results as (\n\n  select * from {{ ref('fct_results') }}\n  \n), \n\npit_stops as (\n\n  select * from {{ ref('int_pit_stops') }}\n  \n),\n\npit_stops_joined as (\n\n    select \n        base_results.race_id,\n        race_year,\n        base_results.driver_id,\n        constructor_id,\n        constructor_name,\n        stop_number,\n        lap, \n        lap_time_formatted,\n        pit_stop_duration_seconds, \n        pit_stop_milliseconds\n    from base_results\n    left join pit_stops\n        on base_results.race_id=pit_stops.race_id and base_results.driver_id=pit_stops.driver_id\n)\nselect * from pit_stops_joined", 'language': 'sql', 'refs': [{'name': 'fct_results', 'package': None, 'version': None}, {'name': 'int_pit_stops', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.fct_results', 'model.tpch.int_pit_stops']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.order_items': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'order_items', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/intermediate/order_items.sql', 'original_file_path': 'models/marts/intermediate/order_items.sql', 'unique_id': 'model.tpch.order_items', 'fqn': ['tpch', 'marts', 'intermediate', 'order_items'], 'alias': 'order_items', 'checksum': {'name': 'sha256', 'checksum': 'd3b62042722cfa2ac8b38ca33a2b49d620eabc30fd39e4b82f002e6d0a42af20'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Intermediate model where we calculate item price, discounts and tax. This model is at the order item level.', 'columns': {'order_item_key': {'name': 'order_item_key', 'description': 'surrogate key for the model -- combo of order_key + line_number', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'order_key': {'name': 'order_key', 'description': 'foreign key for orders', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'customer_key': {'name': 'customer_key', 'description': 'foreign key for customers', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'part_key': {'name': 'part_key', 'description': 'foreign key for part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'supplier_key': {'name': 'supplier_key', 'description': 'foreign key for suppliers', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'order_date': {'name': 'order_date', 'description': 'date of the order', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'order_status_code': {'name': 'order_status_code', 'description': 'status of the order', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'return_flag': {'name': 'return_flag', 'description': 'letter determining the status of the return (r is returned; a is accepted)', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'line_number': {'name': 'line_number', 'description': 'sequence of the order items within the order', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'order_item_status_code': {'name': 'order_item_status_code', 'description': 'status of the order item', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'ship_date': {'name': 'ship_date', 'description': 'the date the order item is being shipped', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'commit_date': {'name': 'commit_date', 'description': 'the date the order item is being commited', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'receipt_date': {'name': 'receipt_date', 'description': 'the receipt date of the order item', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'ship_mode': {'name': 'ship_mode', 'description': 'method of shipping', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'extended_price': {'name': 'extended_price', 'description': 'line item price', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'quantity': {'name': 'quantity', 'description': 'total units', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'base_price': {'name': 'base_price', 'description': 'since extended_price is the line item total, we back out the price per item', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'discount_percentage': {'name': 'discount_percentage', 'description': 'percentage of the discount', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'discounted_price': {'name': 'discounted_price', 'description': 'factoring in the discount_percentage, the line item discount total', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'gross_item_sales_amount': {'name': 'gross_item_sales_amount', 'description': 'same as extended_price', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'discounted_item_sales_amount': {'name': 'discounted_item_sales_amount', 'description': 'line item (includes quantity) discount amount', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'item_discount_amount': {'name': 'item_discount_amount', 'description': 'item level discount amount. this is always a negative number', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'tax_rate': {'name': 'tax_rate', 'description': 'tax rate of the order item', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'item_tax_amount': {'name': 'item_tax_amount', 'description': 'item level tax total', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'net_item_sales_amount': {'name': 'net_item_sales_amount', 'description': 'the net total which factors in discount and tax', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/marts/intermediate/intermediate.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.1878402, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.order_items', 'raw_code': "with orders as (\n    \n    select * from {{ ref('stg_tpch_orders') }}\n\n),\n\nline_item as (\n\n    select * from {{ ref('stg_tpch_line_items') }}\n\n)\nselect \n\n    line_item.order_item_key,\n    orders.order_key,\n    orders.customer_key,\n    line_item.part_key,\n    line_item.supplier_key,\n    orders.order_date,\n    orders.status_code as order_status_code,\n    \n    \n    line_item.is_return,\n    \n    line_item.line_number,\n    line_item.status_code as order_item_status_code,\n    line_item.ship_date,\n    line_item.commit_date,\n    line_item.receipt_date,\n    line_item.ship_mode,\n    line_item.extended_price,\n    line_item.quantity,\n    \n    -- extended_price is actually the line item total,\n    -- so we back out the extended price per item\n    (line_item.extended_price/nullif(line_item.quantity, 0)){{ money() }} as base_price,\n    line_item.discount_percentage,\n    (base_price * (1 - line_item.discount_percentage)){{ money() }} as discounted_price,\n\n    line_item.extended_price as gross_item_sales_amount,\n    (line_item.extended_price * (1 - line_item.discount_percentage)){{ money() }} as discounted_item_sales_amount,\n    -- We model discounts as negative amounts\n    (-1 * line_item.extended_price * line_item.discount_percentage){{ money() }} as item_discount_amount,\n    line_item.tax_rate,\n    ((gross_item_sales_amount + item_discount_amount) * line_item.tax_rate){{ money() }} as item_tax_amount,\n    (\n        gross_item_sales_amount + \n        item_discount_amount + \n        item_tax_amount\n    ){{ money() }} as net_item_sales_amount\n\nfrom\n    orders\ninner join line_item\n        on orders.order_key = line_item.order_key\norder by\n    orders.order_date", 'language': 'sql', 'refs': [{'name': 'stg_tpch_orders', 'package': None, 'version': None}, {'name': 'stg_tpch_line_items', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tpch.money'], 'nodes': ['model.tpch.stg_tpch_orders', 'model.tpch.stg_tpch_line_items']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.part_suppliers': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'part_suppliers', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/intermediate/part_suppliers.sql', 'original_file_path': 'models/marts/intermediate/part_suppliers.sql', 'unique_id': 'model.tpch.part_suppliers', 'fqn': ['tpch', 'marts', 'intermediate', 'part_suppliers'], 'alias': 'part_suppliers', 'checksum': {'name': 'sha256', 'checksum': 'b91609b8b02af6d8690f13bbfd816df2e35444657ae9777bc5977d1af64c7553'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Intermediate model where we join part, supplier and part_supplier. This model is at the part supplier level.', 'columns': {'part_supplier_key': {'name': 'part_supplier_key', 'description': 'primary key of the models', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'part_key': {'name': 'part_key', 'description': 'foreign key for part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'part_name': {'name': 'part_name', 'description': 'name of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'manufacturer': {'name': 'manufacturer', 'description': 'manufacturer of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'brand': {'name': 'brand', 'description': 'brand of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'part_type': {'name': 'part_type', 'description': 'type of part including material', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'part_size': {'name': 'part_size', 'description': 'size of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'container': {'name': 'container', 'description': 'container of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'retail_price': {'name': 'retail_price', 'description': 'raw retail price', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'supplier_key': {'name': 'supplier_key', 'description': 'foreign key for supplier', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'supplier_name': {'name': 'supplier_name', 'description': 'id of the supplier', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'supplier_address': {'name': 'supplier_address', 'description': 'address of the supplier', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'phone_number': {'name': 'phone_number', 'description': 'phone number of the supplier', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'account_balance': {'name': 'account_balance', 'description': 'raw account balance', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'nation_key': {'name': 'nation_key', 'description': 'foreign key for nation', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'available_quantity': {'name': 'available_quantity', 'description': 'raw available quantity', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'cost': {'name': 'cost', 'description': 'raw cost', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/marts/intermediate/intermediate.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.1910489, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.part_suppliers', 'raw_code': "with part as (\n    \n    select * from {{ ref('stg_tpch_parts') }}\n\n),\n\nsupplier as (\n\n    select * from {{ ref('stg_tpch_suppliers') }}\n\n),\n\npart_supplier as (\n\n    select * from {{ ref('stg_tpch_part_suppliers') }}\n\n),\n\nfinal as (\n    select \n\n    part_supplier.part_supplier_key,\n    part.part_key,\n    part.name as part_name,\n    part.manufacturer,\n    part.brand,\n    part.type as part_type,\n    part.size as part_size,\n    part.container,\n    part.retail_price,\n\n    supplier.supplier_key,\n    supplier.supplier_name,\n    supplier.supplier_address,\n    supplier.phone_number,\n    supplier.account_balance,\n    supplier.nation_key,\n\n    part_supplier.available_quantity,\n    part_supplier.cost\nfrom\n    part \ninner join \n    part_supplier\n        on part.part_key = part_supplier.part_key\ninner join\n    supplier\n        on part_supplier.supplier_key = supplier.supplier_key\norder by\n    part.part_key\n)\n\nselect * from final", 'language': 'sql', 'refs': [{'name': 'stg_tpch_parts', 'package': None, 'version': None}, {'name': 'stg_tpch_suppliers', 'package': None, 'version': None}, {'name': 'stg_tpch_part_suppliers', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.stg_tpch_parts', 'model.tpch.stg_tpch_suppliers', 'model.tpch.stg_tpch_part_suppliers']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.int_results': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'int_results', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/intermediate/formula1/int_results.sql', 'original_file_path': 'models/marts/intermediate/formula1/int_results.sql', 'unique_id': 'model.tpch.int_results', 'fqn': ['tpch', 'marts', 'intermediate', 'formula1', 'int_results'], 'alias': 'int_results', 'checksum': {'name': 'sha256', 'checksum': 'f191d758f85552ad782c93dcbcc9f27949a8ad60a91b3caf386d2fcc2a0a9b30'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.3224523, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.int_results', 'raw_code': "with results as (\n\n  select * from {{ ref('stg_f1_results') }}\n\n),\n\nraces as ( \n\n  select * from {{ ref('stg_f1_races') }}\n\n),\n\ndrivers as (\n\n  select * from {{ ref('stg_f1_drivers') }}\n\n), \n\nconstructors as (\n\n  select * from {{ ref('stg_f1_constructors') }}\n  \n), \n\nstatus as (\n\n  select * from {{ ref('stg_f1_status') }}\n  \n), \n\nint_results as (\n    select \n      result_id,\n      results.race_id,\n      race_year, \n      race_round,\n      circuit_id,\n      circuit_name,\n      race_date,\n      race_time, \n      results.driver_id,\n      results.driver_number,\n      forename ||' '|| surname as driver, \n      cast(datediff('year', date_of_birth, race_date) as int) as drivers_age_years, \n      driver_nationality,\n      results.constructor_id,\n      constructor_name,\n      constructor_nationality, \n      grid, \n      position,\n      position_text,\n      position_order,\n      points,\n      laps,\n      results_time_formatted, \n      results_milliseconds,\n      fastest_lap,\n      results_rank,\n      fastest_lap_time_formatted,\n      fastest_lap_speed, \n      results.status_id,\n      status,\n      case when position is null then 1 else 0 end as dnf_flag\n    from results\n    left join races\n      on results.race_id=races.race_id\n    left join drivers \n      on results.driver_id = drivers.driver_id\n    left join constructors \n      on results.constructor_id = constructors.constructor_id\n    left join status\n      on results.status_id = status.status_id\n )\n\n select * from int_results", 'language': 'sql', 'refs': [{'name': 'stg_f1_results', 'package': None, 'version': None}, {'name': 'stg_f1_races', 'package': None, 'version': None}, {'name': 'stg_f1_drivers', 'package': None, 'version': None}, {'name': 'stg_f1_constructors', 'package': None, 'version': None}, {'name': 'stg_f1_status', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.stg_f1_results', 'model.tpch.stg_f1_races', 'model.tpch.stg_f1_drivers', 'model.tpch.stg_f1_constructors', 'model.tpch.stg_f1_status']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.int_lap_times_years': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'int_lap_times_years', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/intermediate/formula1/int_lap_times_years.sql', 'original_file_path': 'models/marts/intermediate/formula1/int_lap_times_years.sql', 'unique_id': 'model.tpch.int_lap_times_years', 'fqn': ['tpch', 'marts', 'intermediate', 'formula1', 'int_lap_times_years'], 'alias': 'int_lap_times_years', 'checksum': {'name': 'sha256', 'checksum': '2c5b16d4765de77e8d7b3c90f2539932189fb654d9217f668ef9f6590bb64495'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.3257172, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.int_lap_times_years', 'raw_code': "with lap_times as (\n\n  select * from {{ ref('stg_f1_lap_times') }}\n\n),\n\nraces as (\n\n  select * from {{ ref('stg_f1_races') }}\n\n),\n\nexpanded_lap_times_by_year as (\n    select \n        lap_times.race_id, \n        driver_id, \n        race_year,\n        lap,\n        lap_time_milliseconds \n    from lap_times\n    left join races\n        on lap_times.race_id = races.race_id\n    where lap_time_milliseconds is not null \n)\n\nselect * from expanded_lap_times_by_year", 'language': 'sql', 'refs': [{'name': 'stg_f1_lap_times', 'package': None, 'version': None}, {'name': 'stg_f1_races', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.stg_f1_lap_times', 'model.tpch.stg_f1_races']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.int_pit_stops': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'int_pit_stops', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/intermediate/formula1/int_pit_stops.sql', 'original_file_path': 'models/marts/intermediate/formula1/int_pit_stops.sql', 'unique_id': 'model.tpch.int_pit_stops', 'fqn': ['tpch', 'marts', 'intermediate', 'formula1', 'int_pit_stops'], 'alias': 'int_pit_stops', 'checksum': {'name': 'sha256', 'checksum': '7c79f4f982be72822d5fce096adb7afe490c4a0d3d067442a26e929e74831048'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.3287559, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.int_pit_stops', 'raw_code': "with stg_f1__pit_stops as \n(\n    select * from {{ ref('stg_f1_pit_stops') }}\n),\n\npit_stops_per_race as (\n    select \n        race_id,\n        driver_id,\n        stop_number,\n        lap,\n        lap_time_formatted,\n        pit_stop_duration_seconds,\n        pit_stop_milliseconds, \n        max(stop_number) over (partition by race_id,driver_id) as total_pit_stops_per_race\n    from stg_f1__pit_stops\n \n)\n\nselect * from pit_stops_per_race", 'language': 'sql', 'refs': [{'name': 'stg_f1_pit_stops', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.stg_f1_pit_stops']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.forecast_daily_returns': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'forecast_daily_returns', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'demo_examples/forecast_daily_returns.py', 'original_file_path': 'models/demo_examples/forecast_daily_returns.py', 'unique_id': 'model.tpch.forecast_daily_returns', 'fqn': ['tpch', 'demo_examples', 'forecast_daily_returns'], 'alias': 'forecast_daily_returns', 'checksum': {'name': 'sha256', 'checksum': 'f229af4cee8421fa32faa9d9362a20464a9f3de2d7dae2baac78568cafa0f6b9'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': ['pandas', 'Prophet', 'holidays==0.18'], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'Returned orders forecast generated using Prophet predictive model', 'columns': {'ds': {'name': 'ds', 'description': 'Raw epoch timestamp generated by Prophet from within Snowpark', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'trend': {'name': 'trend', 'description': 'Forecasted trend of returned orders', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'yhat_lower': {'name': 'yhat_lower', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'yhat_upper': {'name': 'yhat_upper', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'trend_lower': {'name': 'trend_lower', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'trend_upper': {'name': 'trend_upper', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'additive_terms': {'name': 'additive_terms', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'additive_terms_lower': {'name': 'additive_terms_lower', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'additive_terms_upper': {'name': 'additive_terms_upper', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'weekly': {'name': 'weekly', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'weekly_lower': {'name': 'weekly_lower', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'weekly_upper': {'name': 'weekly_upper', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'yearly': {'name': 'yearly', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'yearly_lower': {'name': 'yearly_lower', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'yearly_upper': {'name': 'yearly_upper', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'multiplicative_terms': {'name': 'multiplicative_terms', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'multiplicative_terms_lower': {'name': 'multiplicative_terms_lower', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'multiplicative_terms_upper': {'name': 'multiplicative_terms_upper', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'yhat': {'name': 'yhat', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/demo_examples/demo_examples.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'packages': ['pandas', 'Prophet', 'holidays==0.18']}, 'created_at': 1706652806.0552769, 'config_call_dict': {'materialized': 'table', 'packages': ['pandas', 'Prophet', 'holidays==0.18']}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.forecast_daily_returns', 'raw_code': 'import pandas as pd\nfrom prophet import Prophet\n\ndef model( dbt, session ):\n    \n    dbt.config(\n        materialized="table",\n        packages=[\'pandas\',\'Prophet\',\'holidays==0.18\'] # how to import python libraries in dbt\'s context\n    )\n\n    # use historical data to fit model\n    df = dbt.ref("agg_daily_returned_orders").to_pandas()\n    df.columns = df.columns.str.lower()\n    m = Prophet()\n    m.fit(df)\n    \n    # forecast returns and output dataframe\n    future = m.make_future_dataframe(periods=365)\n    df = m.predict(future)\n    \n    return df', 'language': 'python', 'refs': [{'name': 'agg_daily_returned_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.agg_daily_returned_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.fastest_pit_stops_by_constructor': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'fastest_pit_stops_by_constructor', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/aggregates/formula1/fastest_pit_stops_by_constructor.py', 'original_file_path': 'models/marts/aggregates/formula1/fastest_pit_stops_by_constructor.py', 'unique_id': 'model.tpch.fastest_pit_stops_by_constructor', 'fqn': ['tpch', 'marts', 'aggregates', 'formula1', 'fastest_pit_stops_by_constructor'], 'alias': 'fastest_pit_stops_by_constructor', 'checksum': {'name': 'sha256', 'checksum': '72705dc261016164ca71db525ee1c7b7510797abe5af2aef59b890cec90b5455'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': ['pandas', 'numpy'], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'packages': ['pandas', 'numpy']}, 'created_at': 1706652805.3371775, 'config_call_dict': {'materialized': 'table', 'packages': ['pandas', 'numpy']}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.fastest_pit_stops_by_constructor', 'raw_code': 'import numpy as np\nimport pandas as pd\n\ndef model(dbt, session):\n    # dbt configuration\n    dbt.config(packages=["pandas","numpy"])\n\n    # get upstream data\n    pit_stops_joined = dbt.ref("pit_stops_joined").to_pandas()\n\n    # provide year so we do not hardcode dates \n    year=2021\n\n    # describe the data\n    pit_stops_joined["PIT_STOP_SECONDS"] = pit_stops_joined["PIT_STOP_MILLISECONDS"]/1000\n    fastest_pit_stops = pit_stops_joined[(pit_stops_joined["RACE_YEAR"]==year)].groupby(by="CONSTRUCTOR_NAME")["PIT_STOP_SECONDS"].describe().sort_values(by=\'mean\')\n    fastest_pit_stops.reset_index(inplace=True)\n    fastest_pit_stops.columns = fastest_pit_stops.columns.str.upper()\n    \n    return fastest_pit_stops.round(2)', 'language': 'python', 'refs': [{'name': 'pit_stops_joined', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.pit_stops_joined']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.lap_times_moving_avg': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'lap_times_moving_avg', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/aggregates/formula1/lap_times_moving_avg.py', 'original_file_path': 'models/marts/aggregates/formula1/lap_times_moving_avg.py', 'unique_id': 'model.tpch.lap_times_moving_avg', 'fqn': ['tpch', 'marts', 'aggregates', 'formula1', 'lap_times_moving_avg'], 'alias': 'lap_times_moving_avg', 'checksum': {'name': 'sha256', 'checksum': '2e8eeac7e5e7e7c43770b2800cd2734d9cfc3c3656b9e0336f25f5a7ac43322e'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': ['pandas'], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'packages': ['pandas']}, 'created_at': 1706652805.342504, 'config_call_dict': {'materialized': 'table', 'packages': ['pandas']}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.lap_times_moving_avg', 'raw_code': 'import pandas as pd\n\ndef model(dbt, session):\n    # dbt configuration\n    dbt.config(packages=["pandas"])\n\n    # get upstream data\n    lap_times = dbt.ref("int_lap_times_years").to_pandas()\n\n    # describe the data\n    lap_times["LAP_TIME_SECONDS"] = lap_times["LAP_TIME_MILLISECONDS"]/1000\n    lap_time_trends = lap_times.groupby(by="RACE_YEAR")["LAP_TIME_SECONDS"].mean().to_frame()\n    lap_time_trends.reset_index(inplace=True)\n    lap_time_trends["LAP_MOVING_AVG_5_YEARS"] = lap_time_trends["LAP_TIME_SECONDS"].rolling(5).mean()\n    lap_time_trends.columns = lap_time_trends.columns.str.upper()\n    \n    return lap_time_trends.round(1)', 'language': 'python', 'refs': [{'name': 'int_lap_times_years', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.int_lap_times_years']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.train_test_position': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'train_test_position', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/ml/formula1/train_predict/train_test_position.py', 'original_file_path': 'models/marts/ml/formula1/train_predict/train_test_position.py', 'unique_id': 'model.tpch.train_test_position', 'fqn': ['tpch', 'marts', 'ml', 'formula1', 'train_predict', 'train_test_position'], 'alias': 'train_test_position', 'checksum': {'name': 'sha256', 'checksum': 'e548d5dba125feadef01773120685e846c0f3a553da522cb135b625f5ba244f0'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': ['train'], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': ['numpy', 'scikit-learn', 'pandas', 'numpy', 'joblib', 'cachetools'], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': ['train'], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'packages': ['numpy', 'scikit-learn', 'pandas', 'numpy', 'joblib', 'cachetools'], 'tags': ['train']}, 'created_at': 1706652805.3484313, 'config_call_dict': {'materialized': 'table', 'packages': ['numpy', 'scikit-learn', 'pandas', 'numpy', 'joblib', 'cachetools'], 'tags': ['train']}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.train_test_position', 'raw_code': 'import snowflake.snowpark.functions as F\nfrom sklearn.model_selection import train_test_split\nimport pandas as pd\nfrom sklearn.metrics import confusion_matrix, balanced_accuracy_score\nimport io\nfrom sklearn.linear_model import LogisticRegression\nfrom joblib import dump, load\nimport joblib\nimport logging\nimport sys\nfrom joblib import dump, load\n\nlogger = logging.getLogger("mylog")\n\ndef save_file(session, model, path, dest_filename):\n input_stream = io.BytesIO()\n joblib.dump(model, input_stream)\n session._conn.upload_stream(input_stream, path, dest_filename)\n return "successfully created file: " + path\n\ndef model(dbt, session):\n   dbt.config(\n       packages = [\'numpy\',\'scikit-learn\',\'pandas\',\'numpy\',\'joblib\',\'cachetools\'],\n       materialized = "table",\n       tags = "train"\n   )\n   # Create a stage in Snowflake to save our model file\n   session.sql(\'create or replace stage MODELSTAGE\').collect()\n  \n   #session._use_scoped_temp_objects = False\n   version = "1.0"\n   logger.info(\'Model training version: \' + version)\n\n   # read in our training and testing upstream dataset\n   test_train_df = dbt.ref("train_test_dataset")\n\n   #  cast snowpark df to pandas df\n   test_train_pd_df = test_train_df.to_pandas()\n   target_col = "POSITION_LABEL"\n\n   # split out covariate predictors, x, from our target column position_label, y.\n   split_X = test_train_pd_df.drop([target_col], axis=1)\n   split_y = test_train_pd_df[target_col]\n\n   # Split out our training and test data into proportions\n   X_train, X_test, y_train, y_test  = train_test_split(split_X, split_y, train_size=0.7, random_state=42)\n   train = [X_train, y_train]\n   test = [X_test, y_test]\n    # now we are only training our one model to deploy\n   # we are keeping the focus on the workflows and not algorithms for this lab!\n   model = LogisticRegression()\n \n   # fit the preprocessing pipeline and the model together \n   model.fit(X_train, y_train)   \n   y_pred = model.predict_proba(X_test)[:,1]\n   predictions = [round(value) for value in y_pred]\n   balanced_accuracy =  balanced_accuracy_score(y_test, predictions)\n\n   # Save the model to a stage\n   save_file(session, model, "@MODELSTAGE/driver_position_"+version, "driver_position_"+version+".joblib" )\n   logger.info(\'Model artifact:\' + "@MODELSTAGE/driver_position_"+version+".joblib")\n  \n   # Take our pandas training and testing dataframes and put them back into snowpark dataframes\n   snowpark_train_df = session.write_pandas(pd.concat(train, axis=1, join=\'inner\'), "train_table", auto_create_table=True, create_temp_table=True)\n   snowpark_test_df = session.write_pandas(pd.concat(test, axis=1, join=\'inner\'), "test_table", auto_create_table=True, create_temp_table=True)\n  \n   # Union our training and testing data together and add a column indicating train vs test rows\n   return  snowpark_train_df.with_column("DATASET_TYPE", F.lit("train")).union(snowpark_test_df.with_column("DATASET_TYPE", F.lit("test")))', 'language': 'python', 'refs': [{'name': 'train_test_dataset', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.train_test_dataset']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.predict_position': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'predict_position', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/ml/formula1/train_predict/predict_position.py', 'original_file_path': 'models/marts/ml/formula1/train_predict/predict_position.py', 'unique_id': 'model.tpch.predict_position', 'fqn': ['tpch', 'marts', 'ml', 'formula1', 'train_predict', 'predict_position'], 'alias': 'predict_position', 'checksum': {'name': 'sha256', 'checksum': '9cdcb00e8d43f4fbe340c214120a8a8813309595d739c519a6330ef2157c2191'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': ['predict'], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': ['snowflake-snowpark-python', 'scipy', 'scikit-learn', 'pandas', 'numpy'], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': ['predict'], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'packages': ['snowflake-snowpark-python', 'scipy', 'scikit-learn', 'pandas', 'numpy'], 'tags': ['predict']}, 'created_at': 1706652805.354174, 'config_call_dict': {'materialized': 'table', 'packages': ['snowflake-snowpark-python', 'scipy', 'scikit-learn', 'pandas', 'numpy'], 'tags': ['predict']}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.predict_position', 'raw_code': 'import logging\nimport joblib\nimport pandas as pd\nimport os\nfrom snowflake.snowpark import types as T\n\nDB_STAGE = \'MODELSTAGE\'\nversion = \'1.0\'\n# The name of the model file\nmodel_file_path = \'driver_position_\'+version\nmodel_file_packaged = \'driver_position_\'+version+\'.joblib\'\n\n# This is a local directory, used for storing the various artifacts locally\nLOCAL_TEMP_DIR = f\'/tmp/driver_position\'\nDOWNLOAD_DIR = os.path.join(LOCAL_TEMP_DIR, \'download\')\nTARGET_MODEL_DIR_PATH = os.path.join(LOCAL_TEMP_DIR, \'ml_model\')\nTARGET_LIB_PATH = os.path.join(LOCAL_TEMP_DIR, \'lib\')\n\n# The feature columns that were used during model training\n# and that will be used during prediction\nFEATURE_COLS = [\n           "RACE_YEAR"\n           ,"CIRCUIT_NAME"\n           ,"GRID"\n           ,"CONSTRUCTOR_NAME"\n           ,"DRIVER"\n           ,"DRIVERS_AGE_YEARS"\n           ,"DRIVER_CONFIDENCE"\n           ,"CONSTRUCTOR_RELAIBLITY"\n           ,"TOTAL_PIT_STOPS_PER_RACE"]\n\ndef register_udf_for_prediction(p_predictor ,p_session ,p_dbt):\n\n   # The prediction udf\n\n   def predict_position(p_df: T.PandasDataFrame[int, int, int, int,\n                                       int, int, int, int, int]) -> T.PandasSeries[int]:\n       # Snowpark currently does not set the column name in the input dataframe\n       # The default col names are like 0,1,2,... Hence we need to reset the column\n       # names to the features that we initially used for training.\n       p_df.columns = [*FEATURE_COLS]\n      \n       # Perform prediction. this returns an array object\n       pred_array = p_predictor.predict(p_df)\n       # Convert to series\n       df_predicted = pd.Series(pred_array)\n       return df_predicted\n\n   # The list of packages that will be used by UDF\n   udf_packages = p_dbt.config.get(\'packages\')\n\n   predict_position_udf = p_session.udf.register(\n       predict_position\n       ,name=f\'predict_position\'\n       ,packages = udf_packages\n   )\n   return predict_position_udf\n\ndef download_models_and_libs_from_stage(p_session):\n   p_session.file.get(f\'@{DB_STAGE}/{model_file_path}/{model_file_packaged}\', DOWNLOAD_DIR)\n  \ndef load_model(p_session):\n   # Load the model and initialize the predictor\n   model_fl_path = os.path.join(DOWNLOAD_DIR, model_file_packaged)\n   predictor = joblib.load(model_fl_path)\n   return predictor\n  \n# -------------------------------\ndef model(dbt, session):\n   dbt.config(\n       packages = [\'snowflake-snowpark-python\' ,\'scipy\',\'scikit-learn\' ,\'pandas\' ,\'numpy\'],\n       materialized = "table",\n       tags = "predict"\n   )\n   session._use_scoped_temp_objects = False\n   download_models_and_libs_from_stage(session)\n   predictor = load_model(session)\n   predict_position_udf = register_udf_for_prediction(predictor, session ,dbt)\n  \n   # Retrieve the data, and perform the prediction\n   hold_out_df = (dbt.ref("hold_out_dataset_for_prediction")\n       .select(*FEATURE_COLS)\n   )\n\n   # Perform prediction.\n   new_predictions_df = hold_out_df.withColumn("position_predicted"\n       ,predict_position_udf(*FEATURE_COLS)\n   )\n  \n   return new_predictions_df', 'language': 'python', 'refs': [{'name': 'hold_out_dataset_for_prediction', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.hold_out_dataset_for_prediction']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.hold_out_dataset_for_prediction': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'hold_out_dataset_for_prediction', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/ml/formula1/prep/hold_out_dataset_for_prediction.py', 'original_file_path': 'models/marts/ml/formula1/prep/hold_out_dataset_for_prediction.py', 'unique_id': 'model.tpch.hold_out_dataset_for_prediction', 'fqn': ['tpch', 'marts', 'ml', 'formula1', 'prep', 'hold_out_dataset_for_prediction'], 'alias': 'hold_out_dataset_for_prediction', 'checksum': {'name': 'sha256', 'checksum': '9a44053ae5a3bce046b626a9dd1d7ba5125fc02ba4054f631f8070341f9fa30b'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': ['predict'], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': ['pandas'], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': ['predict'], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'packages': ['pandas'], 'tags': ['predict']}, 'created_at': 1706652805.3600006, 'config_call_dict': {'materialized': 'table', 'packages': ['pandas'], 'tags': ['predict']}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.hold_out_dataset_for_prediction', 'raw_code': 'def model(dbt, session):\n    # dbt configuration\n    dbt.config(packages=["pandas"], tags="predict")\n\n    # get upstream data\n    encoding = dbt.ref("covariate_encoding").to_pandas()\n    \n    # variable for year instead of hardcoding it \n    year=2020\n\n    # filter the data based on the specified year\n    hold_out_dataset =  encoding.loc[encoding[\'RACE_YEAR\'] == year]\n    \n    return hold_out_dataset', 'language': 'python', 'refs': [{'name': 'covariate_encoding', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.covariate_encoding']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.train_test_dataset': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'train_test_dataset', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/ml/formula1/prep/train_test_dataset.py', 'original_file_path': 'models/marts/ml/formula1/prep/train_test_dataset.py', 'unique_id': 'model.tpch.train_test_dataset', 'fqn': ['tpch', 'marts', 'ml', 'formula1', 'prep', 'train_test_dataset'], 'alias': 'train_test_dataset', 'checksum': {'name': 'sha256', 'checksum': '5dd4a62c187187c662d3d35159e308905b054527f52a3acb7853afc8fc0b050a'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': ['train'], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': ['pandas'], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': ['train'], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'packages': ['pandas'], 'tags': ['train']}, 'created_at': 1706652805.365055, 'config_call_dict': {'materialized': 'table', 'packages': ['pandas'], 'tags': ['train']}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.train_test_dataset', 'raw_code': 'import pandas as pd\n\ndef model(dbt, session):\n\n    # dbt configuration\n    dbt.config(packages=["pandas"], tags="train")\n\n    # get upstream data\n    encoding = dbt.ref("covariate_encoding").to_pandas()\n\n    # provide years so we do not hardcode dates in filter command\n    start_year=2010\n    end_year=2019\n\n    # describe the data for a full decade\n    train_test_dataset =  encoding.loc[encoding[\'RACE_YEAR\'].between(start_year, end_year)]\n\n    return train_test_dataset', 'language': 'python', 'refs': [{'name': 'covariate_encoding', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.covariate_encoding']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.covariate_encoding': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'covariate_encoding', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/ml/formula1/prep/covariate_encoding.py', 'original_file_path': 'models/marts/ml/formula1/prep/covariate_encoding.py', 'unique_id': 'model.tpch.covariate_encoding', 'fqn': ['tpch', 'marts', 'ml', 'formula1', 'prep', 'covariate_encoding'], 'alias': 'covariate_encoding', 'checksum': {'name': 'sha256', 'checksum': 'ab1159a135f183eee9382f76cb59017fa8248fc95923a3e97924d79c02aa0fb0'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': ['pandas', 'numpy', 'scikit-learn'], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'packages': ['pandas', 'numpy', 'scikit-learn']}, 'created_at': 1706652805.3711922, 'config_call_dict': {'materialized': 'table', 'packages': ['pandas', 'numpy', 'scikit-learn']}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.covariate_encoding', 'raw_code': 'import pandas as pd\nimport numpy as np\nfrom sklearn.preprocessing import StandardScaler,LabelEncoder,OneHotEncoder\nfrom sklearn.linear_model import LogisticRegression\n\ndef model(dbt, session):\n  # dbt configuration\n  dbt.config(packages=["pandas","numpy","scikit-learn"])\n\n  # get upstream data\n  data = dbt.ref("ml_data_prep").to_pandas()\n\n  # list out covariates we want to use in addition to outcome variable we are modeling - position\n  covariates = data[[\'RACE_YEAR\',\'CIRCUIT_NAME\',\'GRID\',\'CONSTRUCTOR_NAME\',\'DRIVER\',\'DRIVERS_AGE_YEARS\',\'DRIVER_CONFIDENCE\',\'CONSTRUCTOR_RELAIBLITY\',\'TOTAL_PIT_STOPS_PER_RACE\',\'ACTIVE_DRIVER\',\'ACTIVE_CONSTRUCTOR\', \'POSITION\']]\n \n  # filter covariates on active drivers and constructors\n  # use fil_cov as short for "filtered_covariates"\n  fil_cov = covariates[(covariates[\'ACTIVE_DRIVER\']==1)&(covariates[\'ACTIVE_CONSTRUCTOR\']==1)]\n\n  # Encode categorical variables using LabelEncoder\n  # TODO: we\'ll update this to both ohe in the future for non-ordinal variables! \n  le = LabelEncoder()\n  fil_cov[\'CIRCUIT_NAME\'] = le.fit_transform(fil_cov[\'CIRCUIT_NAME\'])\n  fil_cov[\'CONSTRUCTOR_NAME\'] = le.fit_transform(fil_cov[\'CONSTRUCTOR_NAME\'])\n  fil_cov[\'DRIVER\'] = le.fit_transform(fil_cov[\'DRIVER\'])\n  fil_cov[\'TOTAL_PIT_STOPS_PER_RACE\'] = le.fit_transform(fil_cov[\'TOTAL_PIT_STOPS_PER_RACE\'])\n\n   # Simply target variable "position" to represent 3 meaningful categories in Formula1\n   # 1. Podium position 2. Points for team 3. Nothing - no podium or points!\n  def position_index(x):\n      if x<4:\n          return 1\n      if x>10:\n          return 3\n      else :\n          return 2\n\n  # we are dropping the columns that we filtered on in addition to our training variable\n  encoded_data = fil_cov.drop([\'ACTIVE_DRIVER\',\'ACTIVE_CONSTRUCTOR\'],1)\n  encoded_data[\'POSITION_LABEL\']= encoded_data[\'POSITION\'].apply(lambda x: position_index(x))\n  encoded_data_grouped_target = encoded_data.drop([\'POSITION\'],1)\n\n  return encoded_data_grouped_target', 'language': 'python', 'refs': [{'name': 'ml_data_prep', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.ml_data_prep']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.ml_data_prep': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'ml_data_prep', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/ml/formula1/prep/ml_data_prep.py', 'original_file_path': 'models/marts/ml/formula1/prep/ml_data_prep.py', 'unique_id': 'model.tpch.ml_data_prep', 'fqn': ['tpch', 'marts', 'ml', 'formula1', 'prep', 'ml_data_prep'], 'alias': 'ml_data_prep', 'checksum': {'name': 'sha256', 'checksum': 'fe00629a9716575933ad256f09e51a2349e45d48e8c2ed0e862d0a17a1a74bb4'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': ['pandas'], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table', 'packages': ['pandas']}, 'created_at': 1706652805.376686, 'config_call_dict': {'materialized': 'table', 'packages': ['pandas']}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.ml_data_prep', 'raw_code': 'import pandas as pd\n\ndef model(dbt, session):\n    # dbt configuration\n    dbt.config(packages=["pandas"])\n\n    # get upstream data\n    fct_results = dbt.ref("fct_results").to_pandas()\n\n    # provide years so we do not hardcode dates in filter command\n    start_year=2010\n    end_year=2020\n\n    # describe the data for a full decade\n    data =  fct_results.loc[fct_results[\'RACE_YEAR\'].between(start_year, end_year)]\n\n    # convert string to an integer\n    data[\'POSITION\'] = data[\'POSITION\'].astype(float)\n\n    # we cannot have nulls if we want to use total pit stops \n    data[\'TOTAL_PIT_STOPS_PER_RACE\'] = data[\'TOTAL_PIT_STOPS_PER_RACE\'].fillna(0)\n\n    # some of the constructors changed their name over the year so replacing old names with current name\n    mapping = {\'Force India\': \'Racing Point\', \'Sauber\': \'Alfa Romeo\', \'Lotus F1\': \'Renault\', \'Toro Rosso\': \'AlphaTauri\'}\n    data[\'CONSTRUCTOR_NAME\'].replace(mapping, inplace=True)\n\n    # create confidence metrics for drivers and constructors\n    dnf_by_driver = data.groupby(\'DRIVER\').sum()[\'DNF_FLAG\']\n    driver_race_entered = data.groupby(\'DRIVER\').count()[\'DNF_FLAG\']\n    driver_dnf_ratio = (dnf_by_driver/driver_race_entered)\n    driver_confidence = 1-driver_dnf_ratio\n    driver_confidence_dict = dict(zip(driver_confidence.index,driver_confidence))\n\n    dnf_by_constructor = data.groupby(\'CONSTRUCTOR_NAME\').sum()[\'DNF_FLAG\']\n    constructor_race_entered = data.groupby(\'CONSTRUCTOR_NAME\').count()[\'DNF_FLAG\']\n    constructor_dnf_ratio = (dnf_by_constructor/constructor_race_entered)\n    constructor_relaiblity = 1-constructor_dnf_ratio\n    constructor_relaiblity_dict = dict(zip(constructor_relaiblity.index,constructor_relaiblity))\n\n    data[\'DRIVER_CONFIDENCE\'] = data[\'DRIVER\'].apply(lambda x:driver_confidence_dict[x])\n    data[\'CONSTRUCTOR_RELAIBLITY\'] = data[\'CONSTRUCTOR_NAME\'].apply(lambda x:constructor_relaiblity_dict[x])\n\n    #removing retired drivers and constructors\n    active_constructors = [\'Renault\', \'Williams\', \'McLaren\', \'Ferrari\', \'Mercedes\',\n                        \'AlphaTauri\', \'Racing Point\', \'Alfa Romeo\', \'Red Bull\',\n                        \'Haas F1 Team\']\n    active_drivers = [\'Daniel Ricciardo\', \'Kevin Magnussen\', \'Carlos Sainz\',\n                    \'Valtteri Bottas\', \'Lance Stroll\', \'George Russell\',\n                    \'Lando Norris\', \'Sebastian Vettel\', \'Kimi Räikkönen\',\n                    \'Charles Leclerc\', \'Lewis Hamilton\', \'Daniil Kvyat\',\n                    \'Max Verstappen\', \'Pierre Gasly\', \'Alexander Albon\',\n                    \'Sergio Pérez\', \'Esteban Ocon\', \'Antonio Giovinazzi\',\n                    \'Romain Grosjean\',\'Nicholas Latifi\']\n\n    # create flags for active drivers and constructors so we can filter downstream              \n    data[\'ACTIVE_DRIVER\'] = data[\'DRIVER\'].apply(lambda x: int(x in active_drivers))\n    data[\'ACTIVE_CONSTRUCTOR\'] = data[\'CONSTRUCTOR_NAME\'].apply(lambda x: int(x in active_constructors))\n    \n    return data', 'language': 'python', 'refs': [{'name': 'fct_results', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.fct_results']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'snapshot.tpch.bookings_snapshot': {'database': 'mike_fuller_sandbox', 'schema': 'sa_demo_snapshots', 'name': 'bookings_snapshot', 'resource_type': 'snapshot', 'package_name': 'tpch', 'path': 'bookings.sql', 'original_file_path': 'snapshots/bookings.sql', 'unique_id': 'snapshot.tpch.bookings_snapshot', 'fqn': ['tpch', 'bookings', 'bookings_snapshot'], 'alias': 'bookings_snapshot', 'checksum': {'name': 'sha256', 'checksum': 'a524708b32256faf986efd54c96e372f98fedd737e6a6c4ed8580d94c97025c6'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'snapshot', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': 'id', 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'strategy': 'timestamp', 'target_schema': 'sa_demo_snapshots', 'target_database': 'mike_fuller_sandbox', 'updated_at': 'event_dt', 'check_cols': None, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'target_database': 'mike_fuller_sandbox', 'target_schema': 'sa_demo_snapshots', 'unique_key': 'id', 'strategy': 'timestamp', 'updated_at': 'event_dt'}, 'created_at': 1706652805.4129016, 'config_call_dict': {'target_database': 'mike_fuller_sandbox', 'target_schema': 'sa_demo_snapshots', 'unique_key': 'id', 'strategy': 'timestamp', 'updated_at': 'event_dt'}, 'relation_name': 'mike_fuller_sandbox.sa_demo_snapshots.bookings_snapshot', 'raw_code': "\n\n{{\n    config(\n      target_database='mike_fuller_sandbox',\n      target_schema='sa_demo_snapshots',\n      unique_key='id',\n\n      strategy='timestamp',\n      updated_at='event_dt',\n    )\n}}\n\nselect * from {{ source('scd_demo', 'bookings') }}\n\n", 'language': 'sql', 'refs': [], 'sources': [['scd_demo', 'bookings']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.scd_demo.bookings']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'defer_relation': None}, 'analysis.tpch.select_from_orders_example': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'select_from_orders_example', 'resource_type': 'analysis', 'package_name': 'tpch', 'path': 'analysis/select_from_orders_example.sql', 'original_file_path': 'analyses/select_from_orders_example.sql', 'unique_id': 'analysis.tpch.select_from_orders_example', 'fqn': ['tpch', 'analysis', 'select_from_orders_example'], 'alias': 'select_from_orders_example', 'checksum': {'name': 'sha256', 'checksum': '87a84651789bb5f1fd9524aaabd3f8ba5612cacfd2fde1b112f7e961736ec339'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.450089, 'config_call_dict': {}, 'relation_name': None, 'raw_code': "SELECT order_key, \n       order_date, \n       {{ standard_account_fields() }} \nFROM {{ ref('fct_orders') }}", 'language': 'sql', 'refs': [{'name': 'fct_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tpch.standard_account_fields'], 'nodes': ['model.tpch.fct_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}}, 'analysis.tpch.generate_model_yaml': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'generate_model_yaml', 'resource_type': 'analysis', 'package_name': 'tpch', 'path': 'analysis/generate_model_yaml.sql', 'original_file_path': 'analyses/generate_model_yaml.sql', 'unique_id': 'analysis.tpch.generate_model_yaml', 'fqn': ['tpch', 'analysis', 'generate_model_yaml'], 'alias': 'generate_model_yaml', 'checksum': {'name': 'sha256', 'checksum': '5b4dabbbabdce2c147e37e2d65584228b827c011d20fd02af2230a7b03625d7e'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.4586685, 'config_call_dict': {}, 'relation_name': None, 'raw_code': "{{ codegen.generate_model_yaml(\n    model_names=['stg_tpch_orders']\n) }}", 'language': 'sql', 'refs': [{'name': 'stg_tpch_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.codegen.generate_model_yaml'], 'nodes': ['model.tpch.stg_tpch_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}}, 'test.tpch.stg_worker_assert_no_future_hire_date': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'stg_worker_assert_no_future_hire_date', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'stg_worker_assert_no_future_hire_date.sql', 'original_file_path': 'tests/stg_worker_assert_no_future_hire_date.sql', 'unique_id': 'test.tpch.stg_worker_assert_no_future_hire_date', 'fqn': ['tpch', 'stg_worker_assert_no_future_hire_date'], 'alias': 'stg_worker_assert_no_future_hire_date', 'checksum': {'name': 'sha256', 'checksum': '1178d0409f2acb97503fc2dea6d6775e78f1eeb1053ced2f372004930ad5c5e1'}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.4984407, 'config_call_dict': {}, 'relation_name': None, 'raw_code': "select * from {{ ref('stg_worker') }} \nwhere hire_dt > current_date", 'language': 'sql', 'refs': [{'name': 'stg_worker', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.stg_worker']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}}, 'test.tpch.agg_returned_orders_by_month_threshold': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'agg_returned_orders_by_month_threshold', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'agg_returned_orders_by_month_threshold.sql', 'original_file_path': 'tests/agg_returned_orders_by_month_threshold.sql', 'unique_id': 'test.tpch.agg_returned_orders_by_month_threshold', 'fqn': ['tpch', 'agg_returned_orders_by_month_threshold'], 'alias': 'agg_returned_orders_by_month_threshold', 'checksum': {'name': 'sha256', 'checksum': '2c2961a3e155fd6c72bd29ecd5559e5274a87485ae040e8c002a1a68f93b7832'}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'error', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'severity': 'error'}, 'created_at': 1706652805.5039058, 'config_call_dict': {'enabled': True, 'severity': 'error'}, 'relation_name': None, 'raw_code': "{{\n    config(\n        enabled=true,\n        severity='error',\n    )\n}}\n\nwith agg_returned_orders_by_month as ( select * from {{ ref('agg_returned_orders_by_month') }} )\n\nselect *\nfrom agg_returned_orders_by_month\nwhere order_month = (select max(order_month) from agg_returned_orders_by_month)\nand return_rate > 0.50", 'language': 'sql', 'refs': [{'name': 'agg_returned_orders_by_month', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.agg_returned_orders_by_month']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}}, 'test.tpch.macro_stg_tpch_orders_assert_pos_price': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'macro_stg_tpch_orders_assert_pos_price', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'macro_stg_tpch_orders_assert_pos_price.sql', 'original_file_path': 'tests/macro_stg_tpch_orders_assert_pos_price.sql', 'unique_id': 'test.tpch.macro_stg_tpch_orders_assert_pos_price', 'fqn': ['tpch', 'macro_stg_tpch_orders_assert_pos_price'], 'alias': 'macro_stg_tpch_orders_assert_pos_price', 'checksum': {'name': 'sha256', 'checksum': 'bd383c3dbfe817a0fc1b18fa7431a8d3da0e4b53802e70a10f6c8461bbe89e79'}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': ['finance'], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'error', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': ['finance'], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'severity': 'error', 'tags': ['finance']}, 'created_at': 1706652805.5089338, 'config_call_dict': {'enabled': True, 'severity': 'error', 'tags': ['finance']}, 'relation_name': None, 'raw_code': "{{\n    config(\n        enabled=true,\n        severity='error',\n        tags = ['finance']\n    )\n}}\n\n\n{{ test_all_values_gte_zero('stg_tpch_orders', 'total_price') }}", 'language': 'sql', 'refs': [{'name': 'stg_tpch_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tpch.test_all_values_gte_zero'], 'nodes': ['model.tpch.stg_tpch_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}}, 'test.tpch.stg_tpch_orders_assert_positive_price': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'stg_tpch_orders_assert_positive_price', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'stg_tpch_orders_assert_positive_price.sql', 'original_file_path': 'tests/stg_tpch_orders_assert_positive_price.sql', 'unique_id': 'test.tpch.stg_tpch_orders_assert_positive_price', 'fqn': ['tpch', 'stg_tpch_orders_assert_positive_price'], 'alias': 'stg_tpch_orders_assert_positive_price', 'checksum': {'name': 'sha256', 'checksum': '8053b8720b4b33690bebc56cb881005b949ee16023e351a1bc962529f18fe038'}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': ['finance'], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'error', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': ['finance'], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'severity': 'error', 'tags': ['finance']}, 'created_at': 1706652805.515877, 'config_call_dict': {'enabled': True, 'severity': 'error', 'tags': ['finance']}, 'relation_name': None, 'raw_code': "{{\n    config(\n        enabled=true,\n        severity='error',\n        tags = ['finance']\n    )\n}}\n\nwith orders as ( select * from {{ ref('stg_tpch_orders') }} )\n\nselect *\nfrom   orders \nwhere  total_price < 0", 'language': 'sql', 'refs': [{'name': 'stg_tpch_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.stg_tpch_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}}, 'test.tpch.macro_stg_tphc_suppliers_assert_pos_acct_bal': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'macro_stg_tphc_suppliers_assert_pos_acct_bal', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'macro_stg_tphc_suppliers_assert_pos_acct_bal.sql', 'original_file_path': 'tests/macro_stg_tphc_suppliers_assert_pos_acct_bal.sql', 'unique_id': 'test.tpch.macro_stg_tphc_suppliers_assert_pos_acct_bal', 'fqn': ['tpch', 'macro_stg_tphc_suppliers_assert_pos_acct_bal'], 'alias': 'macro_stg_tphc_suppliers_assert_pos_acct_bal', 'checksum': {'name': 'sha256', 'checksum': 'bf636d56abefc837b17711ef1da6b27464592065652f29633fa94905b5eea4cc'}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': ['finance'], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'warn', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': ['finance'], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'enabled': True, 'severity': 'warn', 'tags': ['finance']}, 'created_at': 1706652805.52101, 'config_call_dict': {'enabled': True, 'severity': 'warn', 'tags': ['finance']}, 'relation_name': None, 'raw_code': "{{\n    config(\n        enabled=true,\n        severity='warn',\n        tags = ['finance']\n    )\n}}\n\n\n{{ test_all_values_gte_zero('stg_tpch_suppliers', 'account_balance') }}", 'language': 'sql', 'refs': [{'name': 'stg_tpch_suppliers', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tpch.test_all_values_gte_zero'], 'nodes': ['model.tpch.stg_tpch_suppliers']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}}, 'seed.tpch.fake_data': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'fake_data', 'resource_type': 'seed', 'package_name': 'tpch', 'path': 'fake_data.csv', 'original_file_path': 'seeds/fake_data.csv', 'unique_id': 'seed.tpch.fake_data', 'fqn': ['tpch', 'fake_data'], 'alias': 'fake_data', 'checksum': {'name': 'sha256', 'checksum': '35388b101db5f39aa2bb0d22cf2e757cc3bddfcf5de8960d5ae8d3494e676650'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'seed', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'quote_columns': None, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.5565948, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.fake_data', 'raw_code': '', 'root_path': '/usr/src/develop/user-21574/environment-135917/repository-105782', 'depends_on': {'macros': []}, 'defer_relation': None}, 'seed.tpch.immutable_events': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'immutable_events', 'resource_type': 'seed', 'package_name': 'tpch', 'path': 'immutable_events.csv', 'original_file_path': 'seeds/immutable_events.csv', 'unique_id': 'seed.tpch.immutable_events', 'fqn': ['tpch', 'immutable_events'], 'alias': 'immutable_events', 'checksum': {'name': 'sha256', 'checksum': 'cedc27b0f723d6cbf5a9ed40ab1dfa52239e9e05f7b0ce775174ad96bfc393ef'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'seed', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'quote_columns': None, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.5591576, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.immutable_events', 'raw_code': '', 'root_path': '/usr/src/develop/user-21574/environment-135917/repository-105782', 'depends_on': {'macros': []}, 'defer_relation': None}, 'seed.tpch.snowflake_contract_rates': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'snowflake_contract_rates', 'resource_type': 'seed', 'package_name': 'tpch', 'path': 'snowflake_contract_rates.csv', 'original_file_path': 'seeds/snowflake_contract_rates.csv', 'unique_id': 'seed.tpch.snowflake_contract_rates', 'fqn': ['tpch', 'snowflake_contract_rates'], 'alias': 'snowflake_contract_rates', 'checksum': {'name': 'sha256', 'checksum': '7a45369a64ed269dddd2eee23564d668bcd14ccf702d50a485334398b18c0d29'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'seed', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {'effective_date': 'DATE', 'rate': 'NUMBER'}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'quote_columns': None, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'This is an example of a seed. Seeds are CSV files in your dbt project (typically in your data directory), that dbt can load into your data warehouse using the dbt seed command.\n', 'columns': {'effective_date': {'name': 'effective_date', 'description': 'effective date of contract', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'rate': {'name': 'rate', 'description': 'rate based on the effective date', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://seeds/data.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'column_types': {'effective_date': 'DATE', 'rate': 'NUMBER'}}, 'created_at': 1706652805.8367777, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.snowflake_contract_rates', 'raw_code': '', 'root_path': '/usr/src/develop/user-21574/environment-135917/repository-105782', 'depends_on': {'macros': []}, 'defer_relation': None}, 'operation.tpch.tpch-on-run-start-0': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'tpch-on-run-start-0', 'resource_type': 'operation', 'package_name': 'tpch', 'path': 'hooks/tpch-on-run-start-0.sql', 'original_file_path': './dbt_project.yml', 'unique_id': 'operation.tpch.tpch-on-run-start-0', 'fqn': ['tpch', 'hooks', 'tpch-on-run-start-0'], 'alias': 'tpch-on-run-start-0', 'checksum': {'name': 'sha256', 'checksum': 'e64557b3954e90500c4c320566a511b55cf232b2ee7aa833bfc03d6ba7e10c5c'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': ['on-run-start'], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.5908904, 'config_call_dict': {}, 'relation_name': None, 'raw_code': 'alter warehouse transforming set warehouse_size=small;', 'language': 'sql', 'refs': [], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': []}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'index': 0}, 'operation.tpch.tpch-on-run-end-0': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'tpch-on-run-end-0', 'resource_type': 'operation', 'package_name': 'tpch', 'path': 'hooks/tpch-on-run-end-0.sql', 'original_file_path': './dbt_project.yml', 'unique_id': 'operation.tpch.tpch-on-run-end-0', 'fqn': ['tpch', 'hooks', 'tpch-on-run-end-0'], 'alias': 'tpch-on-run-end-0', 'checksum': {'name': 'sha256', 'checksum': 'e64557b3954e90500c4c320566a511b55cf232b2ee7aa833bfc03d6ba7e10c5c'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': ['on-run-end'], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.5954652, 'config_call_dict': {}, 'relation_name': None, 'raw_code': 'alter warehouse transforming set warehouse_size=xsmall;', 'language': 'sql', 'refs': [], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': []}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'index': 0}, 'operation.tpch.tpch-on-run-end-1': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'tpch-on-run-end-1', 'resource_type': 'operation', 'package_name': 'tpch', 'path': 'hooks/tpch-on-run-end-1.sql', 'original_file_path': './dbt_project.yml', 'unique_id': 'operation.tpch.tpch-on-run-end-1', 'fqn': ['tpch', 'hooks', 'tpch-on-run-end-1'], 'alias': 'tpch-on-run-end-1', 'checksum': {'name': 'sha256', 'checksum': 'e64557b3954e90500c4c320566a511b55cf232b2ee7aa833bfc03d6ba7e10c5c'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': ['on-run-end'], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.599969, 'config_call_dict': {}, 'relation_name': None, 'raw_code': "{{ grant_all_on_schemas(schemas, 'transformer') }}", 'language': 'sql', 'refs': [], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.tpch.grant_all_on_schemas'], 'nodes': []}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'index': 1}, 'model.tpch.pizza_big_spenders.v1': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'pizza_big_spenders', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'versions_demo/pizza_big_spenders_v1.sql', 'original_file_path': 'models/versions_demo/pizza_big_spenders_v1.sql', 'unique_id': 'model.tpch.pizza_big_spenders.v1', 'fqn': ['tpch', 'versions_demo', 'pizza_big_spenders', 'v1'], 'alias': 'pizza_big_spenders_v1', 'checksum': {'name': 'sha256', 'checksum': '1a5e74fe1e91896ad7af0703e4ef42d1efbd1b0fa7739495723601bd96fc595d'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/versions_demo/pizza_versions.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table'}, 'created_at': 1706652805.8481321, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.pizza_big_spenders_v1', 'raw_code': "select * from\n{{ ref('stg_pizza_sales') }}\nwhere total_price > 50", 'language': 'sql', 'refs': [{'name': 'stg_pizza_sales', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.stg_pizza_sales']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': 1, 'latest_version': 1, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.pizza_big_spenders.v2': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'pizza_big_spenders', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'versions_demo/pizza_big_spenders_v2.sql', 'original_file_path': 'models/versions_demo/pizza_big_spenders_v2.sql', 'unique_id': 'model.tpch.pizza_big_spenders.v2', 'fqn': ['tpch', 'versions_demo', 'pizza_big_spenders', 'v2'], 'alias': 'pizza_big_spenders_v2', 'checksum': {'name': 'sha256', 'checksum': '1ea28a8978695c43ea7b8e9d87dfdf1a28597b8fc245a386e6601bce8d09f3a9'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/versions_demo/pizza_versions.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table'}, 'created_at': 1706652805.8496265, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.pizza_big_spenders_v2', 'raw_code': "select *\nfrom {{ ref('stg_pizza_sales') }}\nwhere total_price > 60", 'language': 'sql', 'refs': [{'name': 'stg_pizza_sales', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.stg_pizza_sales']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': 2, 'latest_version': 1, 'deprecation_date': None, 'defer_relation': None}, 'test.tpch.unique_stg_tpch_customers_customer_key.7f1a18b1a4': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'customer_key', 'model': "{{ get_where_subquery(ref('stg_tpch_customers')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'unique_stg_tpch_customers_customer_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'unique_stg_tpch_customers_customer_key.sql', 'original_file_path': 'models/staging/tpch/stg_tpch.yml', 'unique_id': 'test.tpch.unique_stg_tpch_customers_customer_key.7f1a18b1a4', 'fqn': ['tpch', 'staging', 'tpch', 'unique_stg_tpch_customers_customer_key'], 'alias': 'unique_stg_tpch_customers_customer_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.9395537, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'stg_tpch_customers', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tpch.stg_tpch_customers']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'customer_key', 'file_key_name': 'models.stg_tpch_customers', 'attached_node': 'model.tpch.stg_tpch_customers'}, 'test.tpch.not_null_stg_tpch_customers_customer_key.a10e15535a': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'customer_key', 'model': "{{ get_where_subquery(ref('stg_tpch_customers')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'not_null_stg_tpch_customers_customer_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'not_null_stg_tpch_customers_customer_key.sql', 'original_file_path': 'models/staging/tpch/stg_tpch.yml', 'unique_id': 'test.tpch.not_null_stg_tpch_customers_customer_key.a10e15535a', 'fqn': ['tpch', 'staging', 'tpch', 'not_null_stg_tpch_customers_customer_key'], 'alias': 'not_null_stg_tpch_customers_customer_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.9415936, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'stg_tpch_customers', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tpch.stg_tpch_customers']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'customer_key', 'file_key_name': 'models.stg_tpch_customers', 'attached_node': 'model.tpch.stg_tpch_customers'}, 'test.tpch.unique_stg_tpch_line_items_order_item_key.c819d91e0a': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'order_item_key', 'model': "{{ get_where_subquery(ref('stg_tpch_line_items')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'unique_stg_tpch_line_items_order_item_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'unique_stg_tpch_line_items_order_item_key.sql', 'original_file_path': 'models/staging/tpch/stg_tpch.yml', 'unique_id': 'test.tpch.unique_stg_tpch_line_items_order_item_key.c819d91e0a', 'fqn': ['tpch', 'staging', 'tpch', 'unique_stg_tpch_line_items_order_item_key'], 'alias': 'unique_stg_tpch_line_items_order_item_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.9434967, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'stg_tpch_line_items', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tpch.stg_tpch_line_items']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'order_item_key', 'file_key_name': 'models.stg_tpch_line_items', 'attached_node': 'model.tpch.stg_tpch_line_items'}, 'test.tpch.not_null_stg_tpch_line_items_order_item_key.cd47c7a679': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'order_item_key', 'model': "{{ get_where_subquery(ref('stg_tpch_line_items')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'not_null_stg_tpch_line_items_order_item_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'not_null_stg_tpch_line_items_order_item_key.sql', 'original_file_path': 'models/staging/tpch/stg_tpch.yml', 'unique_id': 'test.tpch.not_null_stg_tpch_line_items_order_item_key.cd47c7a679', 'fqn': ['tpch', 'staging', 'tpch', 'not_null_stg_tpch_line_items_order_item_key'], 'alias': 'not_null_stg_tpch_line_items_order_item_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.945525, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'stg_tpch_line_items', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tpch.stg_tpch_line_items']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'order_item_key', 'file_key_name': 'models.stg_tpch_line_items', 'attached_node': 'model.tpch.stg_tpch_line_items'}, 'test.tpch.accepted_values_stg_tpch_line_items_return_flag__returned__accepted.6c629298bf': {'test_metadata': {'name': 'accepted_values', 'kwargs': {'values': ['returned', 'accepted'], 'column_name': 'return_flag', 'model': "{{ get_where_subquery(ref('stg_tpch_line_items')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'accepted_values_stg_tpch_line_items_return_flag__returned__accepted', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'accepted_values_stg_tpch_line__cfbfb6deae68e4bc07fee591cdcffae7.sql', 'original_file_path': 'models/staging/tpch/stg_tpch.yml', 'unique_id': 'test.tpch.accepted_values_stg_tpch_line_items_return_flag__returned__accepted.6c629298bf', 'fqn': ['tpch', 'staging', 'tpch', 'accepted_values_stg_tpch_line_items_return_flag__returned__accepted'], 'alias': 'accepted_values_stg_tpch_line__cfbfb6deae68e4bc07fee591cdcffae7', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'accepted_values_stg_tpch_line__cfbfb6deae68e4bc07fee591cdcffae7', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'warn', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'severity': 'warn', 'alias': 'accepted_values_stg_tpch_line__cfbfb6deae68e4bc07fee591cdcffae7'}, 'created_at': 1706652805.947936, 'config_call_dict': {'severity': 'warn', 'alias': 'accepted_values_stg_tpch_line__cfbfb6deae68e4bc07fee591cdcffae7'}, 'relation_name': None, 'raw_code': '{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(severity="warn",alias="accepted_values_stg_tpch_line__cfbfb6deae68e4bc07fee591cdcffae7") }}', 'language': 'sql', 'refs': [{'name': 'stg_tpch_line_items', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_accepted_values', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tpch.stg_tpch_line_items']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'return_flag', 'file_key_name': 'models.stg_tpch_line_items', 'attached_node': 'model.tpch.stg_tpch_line_items'}, 'test.tpch.accepted_values_stg_tpch_line_items_status_code__returned__billed__shipped.8d665a6aa8': {'test_metadata': {'name': 'accepted_values', 'kwargs': {'values': ['returned', 'billed', 'shipped'], 'column_name': 'status_code', 'model': "{{ get_where_subquery(ref('stg_tpch_line_items')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'accepted_values_stg_tpch_line_items_status_code__returned__billed__shipped', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'accepted_values_stg_tpch_line__d21ca4e1c97d55e06785d87c2c43349f.sql', 'original_file_path': 'models/staging/tpch/stg_tpch.yml', 'unique_id': 'test.tpch.accepted_values_stg_tpch_line_items_status_code__returned__billed__shipped.8d665a6aa8', 'fqn': ['tpch', 'staging', 'tpch', 'accepted_values_stg_tpch_line_items_status_code__returned__billed__shipped'], 'alias': 'accepted_values_stg_tpch_line__d21ca4e1c97d55e06785d87c2c43349f', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'accepted_values_stg_tpch_line__d21ca4e1c97d55e06785d87c2c43349f', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'accepted_values_stg_tpch_line__d21ca4e1c97d55e06785d87c2c43349f'}, 'created_at': 1706652805.9614432, 'config_call_dict': {'alias': 'accepted_values_stg_tpch_line__d21ca4e1c97d55e06785d87c2c43349f'}, 'relation_name': None, 'raw_code': '{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias="accepted_values_stg_tpch_line__d21ca4e1c97d55e06785d87c2c43349f") }}', 'language': 'sql', 'refs': [{'name': 'stg_tpch_line_items', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_accepted_values', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tpch.stg_tpch_line_items']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'status_code', 'file_key_name': 'models.stg_tpch_line_items', 'attached_node': 'model.tpch.stg_tpch_line_items'}, 'test.tpch.unique_stg_tpch_nations_nation_key.9e3675553d': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'nation_key', 'model': "{{ get_where_subquery(ref('stg_tpch_nations')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'unique_stg_tpch_nations_nation_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'unique_stg_tpch_nations_nation_key.sql', 'original_file_path': 'models/staging/tpch/stg_tpch.yml', 'unique_id': 'test.tpch.unique_stg_tpch_nations_nation_key.9e3675553d', 'fqn': ['tpch', 'staging', 'tpch', 'unique_stg_tpch_nations_nation_key'], 'alias': 'unique_stg_tpch_nations_nation_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.9683654, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'stg_tpch_nations', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tpch.stg_tpch_nations']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'nation_key', 'file_key_name': 'models.stg_tpch_nations', 'attached_node': 'model.tpch.stg_tpch_nations'}, 'test.tpch.not_null_stg_tpch_nations_nation_key.d0c2fe32ed': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'nation_key', 'model': "{{ get_where_subquery(ref('stg_tpch_nations')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'not_null_stg_tpch_nations_nation_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'not_null_stg_tpch_nations_nation_key.sql', 'original_file_path': 'models/staging/tpch/stg_tpch.yml', 'unique_id': 'test.tpch.not_null_stg_tpch_nations_nation_key.d0c2fe32ed', 'fqn': ['tpch', 'staging', 'tpch', 'not_null_stg_tpch_nations_nation_key'], 'alias': 'not_null_stg_tpch_nations_nation_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.9704692, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'stg_tpch_nations', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tpch.stg_tpch_nations']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'nation_key', 'file_key_name': 'models.stg_tpch_nations', 'attached_node': 'model.tpch.stg_tpch_nations'}, 'test.tpch.unique_stg_tpch_orders_order_key.bd29f13cc9': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'order_key', 'model': "{{ get_where_subquery(ref('stg_tpch_orders')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'unique_stg_tpch_orders_order_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'unique_stg_tpch_orders_order_key.sql', 'original_file_path': 'models/staging/tpch/stg_tpch.yml', 'unique_id': 'test.tpch.unique_stg_tpch_orders_order_key.bd29f13cc9', 'fqn': ['tpch', 'staging', 'tpch', 'unique_stg_tpch_orders_order_key'], 'alias': 'unique_stg_tpch_orders_order_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.9723067, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'stg_tpch_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tpch.stg_tpch_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'order_key', 'file_key_name': 'models.stg_tpch_orders', 'attached_node': 'model.tpch.stg_tpch_orders'}, 'test.tpch.not_null_stg_tpch_orders_order_key.bb22e75ae8': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'order_key', 'model': "{{ get_where_subquery(ref('stg_tpch_orders')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'not_null_stg_tpch_orders_order_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'not_null_stg_tpch_orders_order_key.sql', 'original_file_path': 'models/staging/tpch/stg_tpch.yml', 'unique_id': 'test.tpch.not_null_stg_tpch_orders_order_key.bb22e75ae8', 'fqn': ['tpch', 'staging', 'tpch', 'not_null_stg_tpch_orders_order_key'], 'alias': 'not_null_stg_tpch_orders_order_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.974145, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'stg_tpch_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tpch.stg_tpch_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'order_key', 'file_key_name': 'models.stg_tpch_orders', 'attached_node': 'model.tpch.stg_tpch_orders'}, 'test.tpch.unique_stg_tpch_part_suppliers_part_supplier_key.96ab01c1ae': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'part_supplier_key', 'model': "{{ get_where_subquery(ref('stg_tpch_part_suppliers')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'unique_stg_tpch_part_suppliers_part_supplier_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'unique_stg_tpch_part_suppliers_part_supplier_key.sql', 'original_file_path': 'models/staging/tpch/stg_tpch.yml', 'unique_id': 'test.tpch.unique_stg_tpch_part_suppliers_part_supplier_key.96ab01c1ae', 'fqn': ['tpch', 'staging', 'tpch', 'unique_stg_tpch_part_suppliers_part_supplier_key'], 'alias': 'unique_stg_tpch_part_suppliers_part_supplier_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.9763553, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'stg_tpch_part_suppliers', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tpch.stg_tpch_part_suppliers']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'part_supplier_key', 'file_key_name': 'models.stg_tpch_part_suppliers', 'attached_node': 'model.tpch.stg_tpch_part_suppliers'}, 'test.tpch.not_null_stg_tpch_part_suppliers_part_supplier_key.3cc6ccee2e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'part_supplier_key', 'model': "{{ get_where_subquery(ref('stg_tpch_part_suppliers')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'not_null_stg_tpch_part_suppliers_part_supplier_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'not_null_stg_tpch_part_suppliers_part_supplier_key.sql', 'original_file_path': 'models/staging/tpch/stg_tpch.yml', 'unique_id': 'test.tpch.not_null_stg_tpch_part_suppliers_part_supplier_key.3cc6ccee2e', 'fqn': ['tpch', 'staging', 'tpch', 'not_null_stg_tpch_part_suppliers_part_supplier_key'], 'alias': 'not_null_stg_tpch_part_suppliers_part_supplier_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.9782884, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'stg_tpch_part_suppliers', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tpch.stg_tpch_part_suppliers']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'part_supplier_key', 'file_key_name': 'models.stg_tpch_part_suppliers', 'attached_node': 'model.tpch.stg_tpch_part_suppliers'}, 'test.tpch.unique_stg_tpch_parts_part_key.afbc7ad489': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'part_key', 'model': "{{ get_where_subquery(ref('stg_tpch_parts')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'unique_stg_tpch_parts_part_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'unique_stg_tpch_parts_part_key.sql', 'original_file_path': 'models/staging/tpch/stg_tpch.yml', 'unique_id': 'test.tpch.unique_stg_tpch_parts_part_key.afbc7ad489', 'fqn': ['tpch', 'staging', 'tpch', 'unique_stg_tpch_parts_part_key'], 'alias': 'unique_stg_tpch_parts_part_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.9800797, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'stg_tpch_parts', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tpch.stg_tpch_parts']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'part_key', 'file_key_name': 'models.stg_tpch_parts', 'attached_node': 'model.tpch.stg_tpch_parts'}, 'test.tpch.not_null_stg_tpch_parts_part_key.cc8e610420': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'part_key', 'model': "{{ get_where_subquery(ref('stg_tpch_parts')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'not_null_stg_tpch_parts_part_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'not_null_stg_tpch_parts_part_key.sql', 'original_file_path': 'models/staging/tpch/stg_tpch.yml', 'unique_id': 'test.tpch.not_null_stg_tpch_parts_part_key.cc8e610420', 'fqn': ['tpch', 'staging', 'tpch', 'not_null_stg_tpch_parts_part_key'], 'alias': 'not_null_stg_tpch_parts_part_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.981884, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'stg_tpch_parts', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tpch.stg_tpch_parts']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'part_key', 'file_key_name': 'models.stg_tpch_parts', 'attached_node': 'model.tpch.stg_tpch_parts'}, 'test.tpch.unique_stg_tpch_regions_region_key.b2bd891bb5': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'region_key', 'model': "{{ get_where_subquery(ref('stg_tpch_regions')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'unique_stg_tpch_regions_region_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'unique_stg_tpch_regions_region_key.sql', 'original_file_path': 'models/staging/tpch/stg_tpch.yml', 'unique_id': 'test.tpch.unique_stg_tpch_regions_region_key.b2bd891bb5', 'fqn': ['tpch', 'staging', 'tpch', 'unique_stg_tpch_regions_region_key'], 'alias': 'unique_stg_tpch_regions_region_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.9836836, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'stg_tpch_regions', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tpch.stg_tpch_regions']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'region_key', 'file_key_name': 'models.stg_tpch_regions', 'attached_node': 'model.tpch.stg_tpch_regions'}, 'test.tpch.not_null_stg_tpch_regions_region_key.869fa0b326': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'region_key', 'model': "{{ get_where_subquery(ref('stg_tpch_regions')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'not_null_stg_tpch_regions_region_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'not_null_stg_tpch_regions_region_key.sql', 'original_file_path': 'models/staging/tpch/stg_tpch.yml', 'unique_id': 'test.tpch.not_null_stg_tpch_regions_region_key.869fa0b326', 'fqn': ['tpch', 'staging', 'tpch', 'not_null_stg_tpch_regions_region_key'], 'alias': 'not_null_stg_tpch_regions_region_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.9862297, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'stg_tpch_regions', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tpch.stg_tpch_regions']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'region_key', 'file_key_name': 'models.stg_tpch_regions', 'attached_node': 'model.tpch.stg_tpch_regions'}, 'test.tpch.unique_stg_tpch_suppliers_supplier_key.6215308464': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'supplier_key', 'model': "{{ get_where_subquery(ref('stg_tpch_suppliers')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'unique_stg_tpch_suppliers_supplier_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'unique_stg_tpch_suppliers_supplier_key.sql', 'original_file_path': 'models/staging/tpch/stg_tpch.yml', 'unique_id': 'test.tpch.unique_stg_tpch_suppliers_supplier_key.6215308464', 'fqn': ['tpch', 'staging', 'tpch', 'unique_stg_tpch_suppliers_supplier_key'], 'alias': 'unique_stg_tpch_suppliers_supplier_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.9881477, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'stg_tpch_suppliers', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tpch.stg_tpch_suppliers']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'supplier_key', 'file_key_name': 'models.stg_tpch_suppliers', 'attached_node': 'model.tpch.stg_tpch_suppliers'}, 'test.tpch.not_null_stg_tpch_suppliers_supplier_key.97c31a786d': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'supplier_key', 'model': "{{ get_where_subquery(ref('stg_tpch_suppliers')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'not_null_stg_tpch_suppliers_supplier_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'not_null_stg_tpch_suppliers_supplier_key.sql', 'original_file_path': 'models/staging/tpch/stg_tpch.yml', 'unique_id': 'test.tpch.not_null_stg_tpch_suppliers_supplier_key.97c31a786d', 'fqn': ['tpch', 'staging', 'tpch', 'not_null_stg_tpch_suppliers_supplier_key'], 'alias': 'not_null_stg_tpch_suppliers_supplier_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652805.989988, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'stg_tpch_suppliers', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tpch.stg_tpch_suppliers']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'supplier_key', 'file_key_name': 'models.stg_tpch_suppliers', 'attached_node': 'model.tpch.stg_tpch_suppliers'}, 'test.tpch.unique_use_variables_order_item_key.fb5576fe0e': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'order_item_key', 'model': "{{ get_where_subquery(ref('use_variables')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'unique_use_variables_order_item_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'unique_use_variables_order_item_key.sql', 'original_file_path': 'models/demo_examples/demo_examples.yml', 'unique_id': 'test.tpch.unique_use_variables_order_item_key.fb5576fe0e', 'fqn': ['tpch', 'demo_examples', 'unique_use_variables_order_item_key'], 'alias': 'unique_use_variables_order_item_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.0615976, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'use_variables', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tpch.use_variables']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'order_item_key', 'file_key_name': 'models.use_variables', 'attached_node': 'model.tpch.use_variables'}, 'test.tpch.not_null_use_variables_order_item_key.c2bd602686': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'order_item_key', 'model': "{{ get_where_subquery(ref('use_variables')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'not_null_use_variables_order_item_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'not_null_use_variables_order_item_key.sql', 'original_file_path': 'models/demo_examples/demo_examples.yml', 'unique_id': 'test.tpch.not_null_use_variables_order_item_key.c2bd602686', 'fqn': ['tpch', 'demo_examples', 'not_null_use_variables_order_item_key'], 'alias': 'not_null_use_variables_order_item_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.063642, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'use_variables', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tpch.use_variables']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'order_item_key', 'file_key_name': 'models.use_variables', 'attached_node': 'model.tpch.use_variables'}, 'test.tpch.unique_monthly_gross_revenue_order_month.2b4d4215f7': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'order_month', 'model': "{{ get_where_subquery(ref('monthly_gross_revenue')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'unique_monthly_gross_revenue_order_month', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'unique_monthly_gross_revenue_order_month.sql', 'original_file_path': 'models/marts/aggregates/aggregates.yml', 'unique_id': 'test.tpch.unique_monthly_gross_revenue_order_month.2b4d4215f7', 'fqn': ['tpch', 'marts', 'aggregates', 'unique_monthly_gross_revenue_order_month'], 'alias': 'unique_monthly_gross_revenue_order_month', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.108284, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'monthly_gross_revenue', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tpch.monthly_gross_revenue']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'order_month', 'file_key_name': 'models.monthly_gross_revenue', 'attached_node': 'model.tpch.monthly_gross_revenue'}, 'test.tpch.unique_dim_customers_customer_key.ad8156656e': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'customer_key', 'model': "{{ get_where_subquery(ref('dim_customers')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'unique_dim_customers_customer_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'unique_dim_customers_customer_key.sql', 'original_file_path': 'models/marts/core/core.yml', 'unique_id': 'test.tpch.unique_dim_customers_customer_key.ad8156656e', 'fqn': ['tpch', 'marts', 'core', 'unique_dim_customers_customer_key'], 'alias': 'unique_dim_customers_customer_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.1454518, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'dim_customers', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tpch.dim_customers']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'customer_key', 'file_key_name': 'models.dim_customers', 'attached_node': 'model.tpch.dim_customers'}, 'test.tpch.not_null_dim_customers_customer_key.4bebfb3411': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'customer_key', 'model': "{{ get_where_subquery(ref('dim_customers')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'not_null_dim_customers_customer_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'not_null_dim_customers_customer_key.sql', 'original_file_path': 'models/marts/core/core.yml', 'unique_id': 'test.tpch.not_null_dim_customers_customer_key.4bebfb3411', 'fqn': ['tpch', 'marts', 'core', 'not_null_dim_customers_customer_key'], 'alias': 'not_null_dim_customers_customer_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.147746, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'dim_customers', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tpch.dim_customers']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'customer_key', 'file_key_name': 'models.dim_customers', 'attached_node': 'model.tpch.dim_customers'}, 'test.tpch.accepted_values_dim_customers_region__AFRICA__MIDDLE_EAST__ASIA__EUROPE__AMERICA.dad4601b69': {'test_metadata': {'name': 'accepted_values', 'kwargs': {'values': ['AFRICA', 'MIDDLE EAST', 'ASIA', 'EUROPE', 'AMERICA'], 'column_name': 'region', 'model': "{{ get_where_subquery(ref('dim_customers')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'accepted_values_dim_customers_region__AFRICA__MIDDLE_EAST__ASIA__EUROPE__AMERICA', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'accepted_values_dim_customers_19c499e4c12e802c2c2bd2047d4767fc.sql', 'original_file_path': 'models/marts/core/core.yml', 'unique_id': 'test.tpch.accepted_values_dim_customers_region__AFRICA__MIDDLE_EAST__ASIA__EUROPE__AMERICA.dad4601b69', 'fqn': ['tpch', 'marts', 'core', 'accepted_values_dim_customers_region__AFRICA__MIDDLE_EAST__ASIA__EUROPE__AMERICA'], 'alias': 'accepted_values_dim_customers_19c499e4c12e802c2c2bd2047d4767fc', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'accepted_values_dim_customers_19c499e4c12e802c2c2bd2047d4767fc', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'warn', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'severity': 'warn', 'alias': 'accepted_values_dim_customers_19c499e4c12e802c2c2bd2047d4767fc'}, 'created_at': 1706652806.1496637, 'config_call_dict': {'severity': 'warn', 'alias': 'accepted_values_dim_customers_19c499e4c12e802c2c2bd2047d4767fc'}, 'relation_name': None, 'raw_code': '{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(severity="warn",alias="accepted_values_dim_customers_19c499e4c12e802c2c2bd2047d4767fc") }}', 'language': 'sql', 'refs': [{'name': 'dim_customers', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_accepted_values', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tpch.dim_customers']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'region', 'file_key_name': 'models.dim_customers', 'attached_node': 'model.tpch.dim_customers'}, 'test.tpch.unique_dim_parts_part_key.712df18d58': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'part_key', 'model': "{{ get_where_subquery(ref('dim_parts')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'unique_dim_parts_part_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'unique_dim_parts_part_key.sql', 'original_file_path': 'models/marts/core/core.yml', 'unique_id': 'test.tpch.unique_dim_parts_part_key.712df18d58', 'fqn': ['tpch', 'marts', 'core', 'unique_dim_parts_part_key'], 'alias': 'unique_dim_parts_part_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.1573973, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'dim_parts', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tpch.dim_parts']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'part_key', 'file_key_name': 'models.dim_parts', 'attached_node': 'model.tpch.dim_parts'}, 'test.tpch.not_null_dim_parts_part_key.4358f880d9': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'part_key', 'model': "{{ get_where_subquery(ref('dim_parts')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'not_null_dim_parts_part_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'not_null_dim_parts_part_key.sql', 'original_file_path': 'models/marts/core/core.yml', 'unique_id': 'test.tpch.not_null_dim_parts_part_key.4358f880d9', 'fqn': ['tpch', 'marts', 'core', 'not_null_dim_parts_part_key'], 'alias': 'not_null_dim_parts_part_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.159598, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'dim_parts', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tpch.dim_parts']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'part_key', 'file_key_name': 'models.dim_parts', 'attached_node': 'model.tpch.dim_parts'}, 'test.tpch.unique_dim_suppliers_supplier_key.58fc3e4770': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'supplier_key', 'model': "{{ get_where_subquery(ref('dim_suppliers')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'unique_dim_suppliers_supplier_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'unique_dim_suppliers_supplier_key.sql', 'original_file_path': 'models/marts/core/core.yml', 'unique_id': 'test.tpch.unique_dim_suppliers_supplier_key.58fc3e4770', 'fqn': ['tpch', 'marts', 'core', 'unique_dim_suppliers_supplier_key'], 'alias': 'unique_dim_suppliers_supplier_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.1619766, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'dim_suppliers', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tpch.dim_suppliers']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'supplier_key', 'file_key_name': 'models.dim_suppliers', 'attached_node': 'model.tpch.dim_suppliers'}, 'test.tpch.not_null_dim_suppliers_supplier_key.4315350956': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'supplier_key', 'model': "{{ get_where_subquery(ref('dim_suppliers')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'not_null_dim_suppliers_supplier_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'not_null_dim_suppliers_supplier_key.sql', 'original_file_path': 'models/marts/core/core.yml', 'unique_id': 'test.tpch.not_null_dim_suppliers_supplier_key.4315350956', 'fqn': ['tpch', 'marts', 'core', 'not_null_dim_suppliers_supplier_key'], 'alias': 'not_null_dim_suppliers_supplier_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.1638608, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'dim_suppliers', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tpch.dim_suppliers']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'supplier_key', 'file_key_name': 'models.dim_suppliers', 'attached_node': 'model.tpch.dim_suppliers'}, 'test.tpch.unique_fct_order_items_order_item_key.4d6426a255': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'order_item_key', 'model': "{{ get_where_subquery(ref('fct_order_items')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'unique_fct_order_items_order_item_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'unique_fct_order_items_order_item_key.sql', 'original_file_path': 'models/marts/core/core.yml', 'unique_id': 'test.tpch.unique_fct_order_items_order_item_key.4d6426a255', 'fqn': ['tpch', 'marts', 'core', 'unique_fct_order_items_order_item_key'], 'alias': 'unique_fct_order_items_order_item_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.166195, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'fct_order_items', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tpch.fct_order_items']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'order_item_key', 'file_key_name': 'models.fct_order_items', 'attached_node': 'model.tpch.fct_order_items'}, 'test.tpch.not_null_fct_order_items_order_item_key.47516a6371': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'order_item_key', 'model': "{{ get_where_subquery(ref('fct_order_items')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'not_null_fct_order_items_order_item_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'not_null_fct_order_items_order_item_key.sql', 'original_file_path': 'models/marts/core/core.yml', 'unique_id': 'test.tpch.not_null_fct_order_items_order_item_key.47516a6371', 'fqn': ['tpch', 'marts', 'core', 'not_null_fct_order_items_order_item_key'], 'alias': 'not_null_fct_order_items_order_item_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.1681266, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'fct_order_items', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tpch.fct_order_items']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'order_item_key', 'file_key_name': 'models.fct_order_items', 'attached_node': 'model.tpch.fct_order_items'}, 'test.tpch.not_null_fct_order_items_nation_key.c3faf47d8e': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'nation_key', 'model': "{{ get_where_subquery(ref('fct_order_items')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'not_null_fct_order_items_nation_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'not_null_fct_order_items_nation_key.sql', 'original_file_path': 'models/marts/core/core.yml', 'unique_id': 'test.tpch.not_null_fct_order_items_nation_key.c3faf47d8e', 'fqn': ['tpch', 'marts', 'core', 'not_null_fct_order_items_nation_key'], 'alias': 'not_null_fct_order_items_nation_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.1701026, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'fct_order_items', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tpch.fct_order_items']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'nation_key', 'file_key_name': 'models.fct_order_items', 'attached_node': 'model.tpch.fct_order_items'}, 'test.tpch.unique_fct_orders_order_key.f5e7a90273': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'order_key', 'model': "{{ get_where_subquery(ref('fct_orders')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'unique_fct_orders_order_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'unique_fct_orders_order_key.sql', 'original_file_path': 'models/marts/core/core.yml', 'unique_id': 'test.tpch.unique_fct_orders_order_key.f5e7a90273', 'fqn': ['tpch', 'marts', 'core', 'unique_fct_orders_order_key'], 'alias': 'unique_fct_orders_order_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.1719637, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'fct_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tpch.fct_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'order_key', 'file_key_name': 'models.fct_orders', 'attached_node': 'model.tpch.fct_orders'}, 'test.tpch.not_null_fct_orders_order_key.6a6f83ab15': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'order_key', 'model': "{{ get_where_subquery(ref('fct_orders')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'not_null_fct_orders_order_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'not_null_fct_orders_order_key.sql', 'original_file_path': 'models/marts/core/core.yml', 'unique_id': 'test.tpch.not_null_fct_orders_order_key.6a6f83ab15', 'fqn': ['tpch', 'marts', 'core', 'not_null_fct_orders_order_key'], 'alias': 'not_null_fct_orders_order_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.1742136, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'fct_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tpch.fct_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'order_key', 'file_key_name': 'models.fct_orders', 'attached_node': 'model.tpch.fct_orders'}, 'test.tpch.relationships_fct_orders_customer_key__customer_key__ref_dim_customers_.018eb0a60b': {'test_metadata': {'name': 'relationships', 'kwargs': {'to': "ref('dim_customers')", 'field': 'customer_key', 'column_name': 'customer_key', 'model': "{{ get_where_subquery(ref('fct_orders')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'relationships_fct_orders_customer_key__customer_key__ref_dim_customers_', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'relationships_fct_orders_01863b95ad98bb6a66c90da6f065c2ae.sql', 'original_file_path': 'models/marts/core/core.yml', 'unique_id': 'test.tpch.relationships_fct_orders_customer_key__customer_key__ref_dim_customers_.018eb0a60b', 'fqn': ['tpch', 'marts', 'core', 'relationships_fct_orders_customer_key__customer_key__ref_dim_customers_'], 'alias': 'relationships_fct_orders_01863b95ad98bb6a66c90da6f065c2ae', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'relationships_fct_orders_01863b95ad98bb6a66c90da6f065c2ae', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'error', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'severity': 'error', 'alias': 'relationships_fct_orders_01863b95ad98bb6a66c90da6f065c2ae'}, 'created_at': 1706652806.17701, 'config_call_dict': {'severity': 'error', 'alias': 'relationships_fct_orders_01863b95ad98bb6a66c90da6f065c2ae'}, 'relation_name': None, 'raw_code': '{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(severity="error",alias="relationships_fct_orders_01863b95ad98bb6a66c90da6f065c2ae") }}', 'language': 'sql', 'refs': [{'name': 'dim_customers', 'package': None, 'version': None}, {'name': 'fct_orders', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_relationships', 'macro.dbt.get_where_subquery'], 'nodes': ['model.tpch.dim_customers', 'model.tpch.fct_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'customer_key', 'file_key_name': 'models.fct_orders', 'attached_node': 'model.tpch.fct_orders'}, 'test.tpch.unique_order_items_order_item_key.43a40b2837': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'order_item_key', 'model': "{{ get_where_subquery(ref('order_items')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'unique_order_items_order_item_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'unique_order_items_order_item_key.sql', 'original_file_path': 'models/marts/intermediate/intermediate.yml', 'unique_id': 'test.tpch.unique_order_items_order_item_key.43a40b2837', 'fqn': ['tpch', 'marts', 'intermediate', 'unique_order_items_order_item_key'], 'alias': 'unique_order_items_order_item_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.1921656, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'order_items', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tpch.order_items']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'order_item_key', 'file_key_name': 'models.order_items', 'attached_node': 'model.tpch.order_items'}, 'test.tpch.not_null_order_items_order_item_key.44b9fa7311': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'order_item_key', 'model': "{{ get_where_subquery(ref('order_items')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'not_null_order_items_order_item_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'not_null_order_items_order_item_key.sql', 'original_file_path': 'models/marts/intermediate/intermediate.yml', 'unique_id': 'test.tpch.not_null_order_items_order_item_key.44b9fa7311', 'fqn': ['tpch', 'marts', 'intermediate', 'not_null_order_items_order_item_key'], 'alias': 'not_null_order_items_order_item_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.1940951, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'order_items', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tpch.order_items']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'order_item_key', 'file_key_name': 'models.order_items', 'attached_node': 'model.tpch.order_items'}, 'test.tpch.unique_part_suppliers_part_supplier_key.909477afa8': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'part_supplier_key', 'model': "{{ get_where_subquery(ref('part_suppliers')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'unique_part_suppliers_part_supplier_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'unique_part_suppliers_part_supplier_key.sql', 'original_file_path': 'models/marts/intermediate/intermediate.yml', 'unique_id': 'test.tpch.unique_part_suppliers_part_supplier_key.909477afa8', 'fqn': ['tpch', 'marts', 'intermediate', 'unique_part_suppliers_part_supplier_key'], 'alias': 'unique_part_suppliers_part_supplier_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.195935, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'part_suppliers', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tpch.part_suppliers']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'part_supplier_key', 'file_key_name': 'models.part_suppliers', 'attached_node': 'model.tpch.part_suppliers'}, 'test.tpch.not_null_part_suppliers_part_supplier_key.b8b2022ed3': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'part_supplier_key', 'model': "{{ get_where_subquery(ref('part_suppliers')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'not_null_part_suppliers_part_supplier_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'not_null_part_suppliers_part_supplier_key.sql', 'original_file_path': 'models/marts/intermediate/intermediate.yml', 'unique_id': 'test.tpch.not_null_part_suppliers_part_supplier_key.b8b2022ed3', 'fqn': ['tpch', 'marts', 'intermediate', 'not_null_part_suppliers_part_supplier_key'], 'alias': 'not_null_part_suppliers_part_supplier_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.1977274, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'part_suppliers', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tpch.part_suppliers']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'part_supplier_key', 'file_key_name': 'models.part_suppliers', 'attached_node': 'model.tpch.part_suppliers'}, 'test.tpch.source_unique_formula1_circuits_circuitid.47620af452': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'circuitid', 'model': "{{ get_where_subquery(source('formula1', 'circuits')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_unique_formula1_circuits_circuitid', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_unique_formula1_circuits_circuitid.sql', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'test.tpch.source_unique_formula1_circuits_circuitid.47620af452', 'fqn': ['tpch', 'staging', 'formula1', 'source_unique_formula1_circuits_circuitid'], 'alias': 'source_unique_formula1_circuits_circuitid', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.2263682, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [], 'sources': [['formula1', 'circuits']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['source.tpch.formula1.circuits']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'circuitid', 'file_key_name': 'sources.formula1', 'attached_node': None}, 'test.tpch.source_not_null_formula1_circuits_circuitid.5653a349d0': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'circuitid', 'model': "{{ get_where_subquery(source('formula1', 'circuits')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_not_null_formula1_circuits_circuitid', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_not_null_formula1_circuits_circuitid.sql', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'test.tpch.source_not_null_formula1_circuits_circuitid.5653a349d0', 'fqn': ['tpch', 'staging', 'formula1', 'source_not_null_formula1_circuits_circuitid'], 'alias': 'source_not_null_formula1_circuits_circuitid', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.2282584, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [], 'sources': [['formula1', 'circuits']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['source.tpch.formula1.circuits']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'circuitid', 'file_key_name': 'sources.formula1', 'attached_node': None}, 'test.tpch.source_unique_formula1_constructors_constructorid.70149447da': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'constructorid', 'model': "{{ get_where_subquery(source('formula1', 'constructors')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_unique_formula1_constructors_constructorid', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_unique_formula1_constructors_constructorid.sql', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'test.tpch.source_unique_formula1_constructors_constructorid.70149447da', 'fqn': ['tpch', 'staging', 'formula1', 'source_unique_formula1_constructors_constructorid'], 'alias': 'source_unique_formula1_constructors_constructorid', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.2303271, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [], 'sources': [['formula1', 'constructors']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['source.tpch.formula1.constructors']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'constructorid', 'file_key_name': 'sources.formula1', 'attached_node': None}, 'test.tpch.source_not_null_formula1_constructors_constructorid.03a3d94a61': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'constructorid', 'model': "{{ get_where_subquery(source('formula1', 'constructors')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_not_null_formula1_constructors_constructorid', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_not_null_formula1_constructors_constructorid.sql', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'test.tpch.source_not_null_formula1_constructors_constructorid.03a3d94a61', 'fqn': ['tpch', 'staging', 'formula1', 'source_not_null_formula1_constructors_constructorid'], 'alias': 'source_not_null_formula1_constructors_constructorid', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.2321227, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [], 'sources': [['formula1', 'constructors']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['source.tpch.formula1.constructors']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'constructorid', 'file_key_name': 'sources.formula1', 'attached_node': None}, 'test.tpch.source_unique_formula1_drivers_driverid.002a681bb2': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'driverid', 'model': "{{ get_where_subquery(source('formula1', 'drivers')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_unique_formula1_drivers_driverid', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_unique_formula1_drivers_driverid.sql', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'test.tpch.source_unique_formula1_drivers_driverid.002a681bb2', 'fqn': ['tpch', 'staging', 'formula1', 'source_unique_formula1_drivers_driverid'], 'alias': 'source_unique_formula1_drivers_driverid', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.2344244, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [], 'sources': [['formula1', 'drivers']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['source.tpch.formula1.drivers']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'driverid', 'file_key_name': 'sources.formula1', 'attached_node': None}, 'test.tpch.source_not_null_formula1_drivers_driverid.584766a0ad': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'driverid', 'model': "{{ get_where_subquery(source('formula1', 'drivers')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_not_null_formula1_drivers_driverid', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_not_null_formula1_drivers_driverid.sql', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'test.tpch.source_not_null_formula1_drivers_driverid.584766a0ad', 'fqn': ['tpch', 'staging', 'formula1', 'source_not_null_formula1_drivers_driverid'], 'alias': 'source_not_null_formula1_drivers_driverid', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.2362068, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [], 'sources': [['formula1', 'drivers']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['source.tpch.formula1.drivers']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'driverid', 'file_key_name': 'sources.formula1', 'attached_node': None}, 'test.tpch.source_accepted_values_formula1_pit_stops_stop__False__1__2__3__4__5__6__7__8.e566ce68d8': {'test_metadata': {'name': 'accepted_values', 'kwargs': {'values': [1, 2, 3, 4, 5, 6, 7, 8], 'quote': False, 'column_name': 'stop', 'model': "{{ get_where_subquery(source('formula1', 'pit_stops')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_accepted_values_formula1_pit_stops_stop__False__1__2__3__4__5__6__7__8', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_accepted_values_formula_b66ed6cbd3592f90cbb3845579b4b018.sql', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'test.tpch.source_accepted_values_formula1_pit_stops_stop__False__1__2__3__4__5__6__7__8.e566ce68d8', 'fqn': ['tpch', 'staging', 'formula1', 'source_accepted_values_formula1_pit_stops_stop__False__1__2__3__4__5__6__7__8'], 'alias': 'source_accepted_values_formula_b66ed6cbd3592f90cbb3845579b4b018', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'source_accepted_values_formula_b66ed6cbd3592f90cbb3845579b4b018', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'source_accepted_values_formula_b66ed6cbd3592f90cbb3845579b4b018'}, 'created_at': 1706652806.2384028, 'config_call_dict': {'alias': 'source_accepted_values_formula_b66ed6cbd3592f90cbb3845579b4b018'}, 'relation_name': None, 'raw_code': '{{ test_accepted_values(**_dbt_generic_test_kwargs) }}{{ config(alias="source_accepted_values_formula_b66ed6cbd3592f90cbb3845579b4b018") }}', 'language': 'sql', 'refs': [], 'sources': [['formula1', 'pit_stops']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_accepted_values', 'macro.dbt.get_where_subquery'], 'nodes': ['source.tpch.formula1.pit_stops']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'stop', 'file_key_name': 'sources.formula1', 'attached_node': None}, 'test.tpch.source_unique_formula1_races_raceid.cfebaeb84f': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'raceid', 'model': "{{ get_where_subquery(source('formula1', 'races')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_unique_formula1_races_raceid', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_unique_formula1_races_raceid.sql', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'test.tpch.source_unique_formula1_races_raceid.cfebaeb84f', 'fqn': ['tpch', 'staging', 'formula1', 'source_unique_formula1_races_raceid'], 'alias': 'source_unique_formula1_races_raceid', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.2443538, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [], 'sources': [['formula1', 'races']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['source.tpch.formula1.races']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'raceid', 'file_key_name': 'sources.formula1', 'attached_node': None}, 'test.tpch.source_not_null_formula1_races_raceid.e0f881fff4': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'raceid', 'model': "{{ get_where_subquery(source('formula1', 'races')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_not_null_formula1_races_raceid', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_not_null_formula1_races_raceid.sql', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'test.tpch.source_not_null_formula1_races_raceid.e0f881fff4', 'fqn': ['tpch', 'staging', 'formula1', 'source_not_null_formula1_races_raceid'], 'alias': 'source_not_null_formula1_races_raceid', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.2461889, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [], 'sources': [['formula1', 'races']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['source.tpch.formula1.races']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'raceid', 'file_key_name': 'sources.formula1', 'attached_node': None}, 'test.tpch.source_unique_formula1_results_resultid.b1cab5e9fa': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'resultid', 'model': "{{ get_where_subquery(source('formula1', 'results')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_unique_formula1_results_resultid', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_unique_formula1_results_resultid.sql', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'test.tpch.source_unique_formula1_results_resultid.b1cab5e9fa', 'fqn': ['tpch', 'staging', 'formula1', 'source_unique_formula1_results_resultid'], 'alias': 'source_unique_formula1_results_resultid', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.2481728, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [], 'sources': [['formula1', 'results']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['source.tpch.formula1.results']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'resultid', 'file_key_name': 'sources.formula1', 'attached_node': None}, 'test.tpch.source_not_null_formula1_results_resultid.2236470791': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'resultid', 'model': "{{ get_where_subquery(source('formula1', 'results')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_not_null_formula1_results_resultid', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_not_null_formula1_results_resultid.sql', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'test.tpch.source_not_null_formula1_results_resultid.2236470791', 'fqn': ['tpch', 'staging', 'formula1', 'source_not_null_formula1_results_resultid'], 'alias': 'source_not_null_formula1_results_resultid', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.2502725, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [], 'sources': [['formula1', 'results']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['source.tpch.formula1.results']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'resultid', 'file_key_name': 'sources.formula1', 'attached_node': None}, 'test.tpch.source_unique_formula1_status_statusid.752ec18aac': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'statusid', 'model': "{{ get_where_subquery(source('formula1', 'status')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_unique_formula1_status_statusid', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_unique_formula1_status_statusid.sql', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'test.tpch.source_unique_formula1_status_statusid.752ec18aac', 'fqn': ['tpch', 'staging', 'formula1', 'source_unique_formula1_status_statusid'], 'alias': 'source_unique_formula1_status_statusid', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.2522585, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [], 'sources': [['formula1', 'status']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['source.tpch.formula1.status']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'statusid', 'file_key_name': 'sources.formula1', 'attached_node': None}, 'test.tpch.source_not_null_formula1_status_statusid.e4072570cf': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'statusid', 'model': "{{ get_where_subquery(source('formula1', 'status')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_not_null_formula1_status_statusid', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_not_null_formula1_status_statusid.sql', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'test.tpch.source_not_null_formula1_status_statusid.e4072570cf', 'fqn': ['tpch', 'staging', 'formula1', 'source_not_null_formula1_status_statusid'], 'alias': 'source_not_null_formula1_status_statusid', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.2540646, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [], 'sources': [['formula1', 'status']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['source.tpch.formula1.status']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'statusid', 'file_key_name': 'sources.formula1', 'attached_node': None}, 'test.tpch.source_unique_tpch_orders_o_orderkey.374f048af2': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'o_orderkey', 'model': "{{ get_where_subquery(source('tpch', 'orders')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_unique_tpch_orders_o_orderkey', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_unique_tpch_orders_o_orderkey.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_unique_tpch_orders_o_orderkey.374f048af2', 'fqn': ['tpch', 'staging', 'tpch', 'source_unique_tpch_orders_o_orderkey'], 'alias': 'source_unique_tpch_orders_o_orderkey', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.25606, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'orders']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['source.tpch.tpch.orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'o_orderkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_not_null_tpch_orders_o_orderkey.ebd571817b': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'o_orderkey', 'model': "{{ get_where_subquery(source('tpch', 'orders')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_not_null_tpch_orders_o_orderkey', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_not_null_tpch_orders_o_orderkey.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_not_null_tpch_orders_o_orderkey.ebd571817b', 'fqn': ['tpch', 'staging', 'tpch', 'source_not_null_tpch_orders_o_orderkey'], 'alias': 'source_not_null_tpch_orders_o_orderkey', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.2578974, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'orders']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['source.tpch.tpch.orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'o_orderkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_relationships_tpch_orders_o_custkey__c_custkey__source_tpch_customer_.024e40ec67': {'test_metadata': {'name': 'relationships', 'kwargs': {'to': "source('tpch', 'customer')", 'field': 'c_custkey', 'column_name': 'o_custkey', 'model': "{{ get_where_subquery(source('tpch', 'orders')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_relationships_tpch_orders_o_custkey__c_custkey__source_tpch_customer_', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_relationships_tpch_orde_aa2aa3d71f8f1d2febff342069b4fe2b.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_relationships_tpch_orders_o_custkey__c_custkey__source_tpch_customer_.024e40ec67', 'fqn': ['tpch', 'staging', 'tpch', 'source_relationships_tpch_orders_o_custkey__c_custkey__source_tpch_customer_'], 'alias': 'source_relationships_tpch_orde_aa2aa3d71f8f1d2febff342069b4fe2b', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'source_relationships_tpch_orde_aa2aa3d71f8f1d2febff342069b4fe2b', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'source_relationships_tpch_orde_aa2aa3d71f8f1d2febff342069b4fe2b'}, 'created_at': 1706652806.2599545, 'config_call_dict': {'alias': 'source_relationships_tpch_orde_aa2aa3d71f8f1d2febff342069b4fe2b'}, 'relation_name': None, 'raw_code': '{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias="source_relationships_tpch_orde_aa2aa3d71f8f1d2febff342069b4fe2b") }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'customer'], ['tpch', 'orders']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_relationships', 'macro.dbt.get_where_subquery'], 'nodes': ['source.tpch.tpch.customer', 'source.tpch.tpch.orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'o_custkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_unique_tpch_customer_c_custkey.048e97fc25': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'c_custkey', 'model': "{{ get_where_subquery(source('tpch', 'customer')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_unique_tpch_customer_c_custkey', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_unique_tpch_customer_c_custkey.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_unique_tpch_customer_c_custkey.048e97fc25', 'fqn': ['tpch', 'staging', 'tpch', 'source_unique_tpch_customer_c_custkey'], 'alias': 'source_unique_tpch_customer_c_custkey', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'WARN', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'severity': 'WARN'}, 'created_at': 1706652806.2659535, 'config_call_dict': {'severity': 'WARN'}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(severity="warn") }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'customer']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['source.tpch.tpch.customer']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'c_custkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_not_null_tpch_customer_c_custkey.a95b6298b5': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'c_custkey', 'model': "{{ get_where_subquery(source('tpch', 'customer')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_not_null_tpch_customer_c_custkey', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_not_null_tpch_customer_c_custkey.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_not_null_tpch_customer_c_custkey.a95b6298b5', 'fqn': ['tpch', 'staging', 'tpch', 'source_not_null_tpch_customer_c_custkey'], 'alias': 'source_not_null_tpch_customer_c_custkey', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'WARN', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'severity': 'WARN'}, 'created_at': 1706652806.2680168, 'config_call_dict': {'severity': 'WARN'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(severity="warn") }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'customer']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['source.tpch.tpch.customer']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'c_custkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_relationships_tpch_lineitem_l_orderkey__o_orderkey__source_tpch_orders_.f722cb898d': {'test_metadata': {'name': 'relationships', 'kwargs': {'to': "source('tpch', 'orders')", 'field': 'o_orderkey', 'column_name': 'l_orderkey', 'model': "{{ get_where_subquery(source('tpch', 'lineitem')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_relationships_tpch_lineitem_l_orderkey__o_orderkey__source_tpch_orders_', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_relationships_tpch_line_43b59984a4c7b172d1e95c13fec6bd9c.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_relationships_tpch_lineitem_l_orderkey__o_orderkey__source_tpch_orders_.f722cb898d', 'fqn': ['tpch', 'staging', 'tpch', 'source_relationships_tpch_lineitem_l_orderkey__o_orderkey__source_tpch_orders_'], 'alias': 'source_relationships_tpch_line_43b59984a4c7b172d1e95c13fec6bd9c', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'source_relationships_tpch_line_43b59984a4c7b172d1e95c13fec6bd9c', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'source_relationships_tpch_line_43b59984a4c7b172d1e95c13fec6bd9c'}, 'created_at': 1706652806.2700808, 'config_call_dict': {'alias': 'source_relationships_tpch_line_43b59984a4c7b172d1e95c13fec6bd9c'}, 'relation_name': None, 'raw_code': '{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias="source_relationships_tpch_line_43b59984a4c7b172d1e95c13fec6bd9c") }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'orders'], ['tpch', 'lineitem']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_relationships', 'macro.dbt.get_where_subquery'], 'nodes': ['source.tpch.tpch.orders', 'source.tpch.tpch.lineitem']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'l_orderkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_relationships_tpch_lineitem_l_partkey__p_partkey__source_tpch_part_.b761c77df8': {'test_metadata': {'name': 'relationships', 'kwargs': {'to': "source('tpch', 'part')", 'field': 'p_partkey', 'column_name': 'l_partkey', 'model': "{{ get_where_subquery(source('tpch', 'lineitem')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_relationships_tpch_lineitem_l_partkey__p_partkey__source_tpch_part_', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_relationships_tpch_line_0403124f3724b4d6984e362cbdf30740.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_relationships_tpch_lineitem_l_partkey__p_partkey__source_tpch_part_.b761c77df8', 'fqn': ['tpch', 'staging', 'tpch', 'source_relationships_tpch_lineitem_l_partkey__p_partkey__source_tpch_part_'], 'alias': 'source_relationships_tpch_line_0403124f3724b4d6984e362cbdf30740', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'source_relationships_tpch_line_0403124f3724b4d6984e362cbdf30740', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'source_relationships_tpch_line_0403124f3724b4d6984e362cbdf30740'}, 'created_at': 1706652806.2757993, 'config_call_dict': {'alias': 'source_relationships_tpch_line_0403124f3724b4d6984e362cbdf30740'}, 'relation_name': None, 'raw_code': '{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias="source_relationships_tpch_line_0403124f3724b4d6984e362cbdf30740") }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'part'], ['tpch', 'lineitem']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_relationships', 'macro.dbt.get_where_subquery'], 'nodes': ['source.tpch.tpch.part', 'source.tpch.tpch.lineitem']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'l_partkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_relationships_tpch_lineitem_l_suppkey__s_suppkey__source_tpch_supplier_.f872fb81a2': {'test_metadata': {'name': 'relationships', 'kwargs': {'to': "source('tpch', 'supplier')", 'field': 's_suppkey', 'column_name': 'l_suppkey', 'model': "{{ get_where_subquery(source('tpch', 'lineitem')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_relationships_tpch_lineitem_l_suppkey__s_suppkey__source_tpch_supplier_', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_relationships_tpch_line_56b786676a582f41b4502498079b8292.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_relationships_tpch_lineitem_l_suppkey__s_suppkey__source_tpch_supplier_.f872fb81a2', 'fqn': ['tpch', 'staging', 'tpch', 'source_relationships_tpch_lineitem_l_suppkey__s_suppkey__source_tpch_supplier_'], 'alias': 'source_relationships_tpch_line_56b786676a582f41b4502498079b8292', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'source_relationships_tpch_line_56b786676a582f41b4502498079b8292', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'source_relationships_tpch_line_56b786676a582f41b4502498079b8292'}, 'created_at': 1706652806.2810807, 'config_call_dict': {'alias': 'source_relationships_tpch_line_56b786676a582f41b4502498079b8292'}, 'relation_name': None, 'raw_code': '{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias="source_relationships_tpch_line_56b786676a582f41b4502498079b8292") }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'supplier'], ['tpch', 'lineitem']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_relationships', 'macro.dbt.get_where_subquery'], 'nodes': ['source.tpch.tpch.supplier', 'source.tpch.tpch.lineitem']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'l_suppkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_accepted_values_tpch_lineitem_l_linestatus__P__F__O.de04cde880': {'test_metadata': {'name': 'accepted_values', 'kwargs': {'values': ['P', 'F', 'O'], 'column_name': 'l_linestatus', 'model': "{{ get_where_subquery(source('tpch', 'lineitem')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_accepted_values_tpch_lineitem_l_linestatus__P__F__O', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_accepted_values_tpch_lineitem_l_linestatus__P__F__O.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_accepted_values_tpch_lineitem_l_linestatus__P__F__O.de04cde880', 'fqn': ['tpch', 'staging', 'tpch', 'source_accepted_values_tpch_lineitem_l_linestatus__P__F__O'], 'alias': 'source_accepted_values_tpch_lineitem_l_linestatus__P__F__O', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706652806.2869108, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_accepted_values(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'lineitem']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_accepted_values', 'macro.dbt.get_where_subquery'], 'nodes': ['source.tpch.tpch.lineitem']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'l_linestatus', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_unique_tpch_nation_n_nationkey.3bd4153064': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'n_nationkey', 'model': "{{ get_where_subquery(source('tpch', 'nation')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_unique_tpch_nation_n_nationkey', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_unique_tpch_nation_n_nationkey.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_unique_tpch_nation_n_nationkey.3bd4153064', 'fqn': ['tpch', 'staging', 'tpch', 'source_unique_tpch_nation_n_nationkey'], 'alias': 'source_unique_tpch_nation_n_nationkey', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'WARN', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'severity': 'WARN'}, 'created_at': 1706652806.2931645, 'config_call_dict': {'severity': 'WARN'}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(severity="warn") }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'nation']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['source.tpch.tpch.nation']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'n_nationkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_not_null_tpch_nation_n_nationkey.5ac5d27298': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'n_nationkey', 'model': "{{ get_where_subquery(source('tpch', 'nation')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_not_null_tpch_nation_n_nationkey', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_not_null_tpch_nation_n_nationkey.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_not_null_tpch_nation_n_nationkey.5ac5d27298', 'fqn': ['tpch', 'staging', 'tpch', 'source_not_null_tpch_nation_n_nationkey'], 'alias': 'source_not_null_tpch_nation_n_nationkey', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'WARN', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'severity': 'WARN'}, 'created_at': 1706652806.2951055, 'config_call_dict': {'severity': 'WARN'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(severity="warn") }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'nation']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['source.tpch.tpch.nation']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'n_nationkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_relationships_tpch_nation_n_regionkey__r_regionkey__source_tpch_region_.116e1ee3da': {'test_metadata': {'name': 'relationships', 'kwargs': {'to': "source('tpch', 'region')", 'field': 'r_regionkey', 'column_name': 'n_regionkey', 'model': "{{ get_where_subquery(source('tpch', 'nation')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_relationships_tpch_nation_n_regionkey__r_regionkey__source_tpch_region_', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_relationships_tpch_nati_863138f31f617783ad556b879ab65039.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_relationships_tpch_nation_n_regionkey__r_regionkey__source_tpch_region_.116e1ee3da', 'fqn': ['tpch', 'staging', 'tpch', 'source_relationships_tpch_nation_n_regionkey__r_regionkey__source_tpch_region_'], 'alias': 'source_relationships_tpch_nati_863138f31f617783ad556b879ab65039', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'source_relationships_tpch_nati_863138f31f617783ad556b879ab65039', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'source_relationships_tpch_nati_863138f31f617783ad556b879ab65039'}, 'created_at': 1706652806.2969172, 'config_call_dict': {'alias': 'source_relationships_tpch_nati_863138f31f617783ad556b879ab65039'}, 'relation_name': None, 'raw_code': '{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias="source_relationships_tpch_nati_863138f31f617783ad556b879ab65039") }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'region'], ['tpch', 'nation']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_relationships', 'macro.dbt.get_where_subquery'], 'nodes': ['source.tpch.tpch.region', 'source.tpch.tpch.nation']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'n_regionkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_unique_tpch_part_p_partkey.30b171988e': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'p_partkey', 'model': "{{ get_where_subquery(source('tpch', 'part')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_unique_tpch_part_p_partkey', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_unique_tpch_part_p_partkey.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_unique_tpch_part_p_partkey.30b171988e', 'fqn': ['tpch', 'staging', 'tpch', 'source_unique_tpch_part_p_partkey'], 'alias': 'source_unique_tpch_part_p_partkey', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'WARN', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'severity': 'WARN'}, 'created_at': 1706652806.30354, 'config_call_dict': {'severity': 'WARN'}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(severity="warn") }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'part']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['source.tpch.tpch.part']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'p_partkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_not_null_tpch_part_p_partkey.9543847190': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'p_partkey', 'model': "{{ get_where_subquery(source('tpch', 'part')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_not_null_tpch_part_p_partkey', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_not_null_tpch_part_p_partkey.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_not_null_tpch_part_p_partkey.9543847190', 'fqn': ['tpch', 'staging', 'tpch', 'source_not_null_tpch_part_p_partkey'], 'alias': 'source_not_null_tpch_part_p_partkey', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'WARN', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'severity': 'WARN'}, 'created_at': 1706652806.3056207, 'config_call_dict': {'severity': 'WARN'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(severity="warn") }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'part']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['source.tpch.tpch.part']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'p_partkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_relationships_tpch_partsupp_ps_partkey__p_partkey__source_tpch_part_.511196222f': {'test_metadata': {'name': 'relationships', 'kwargs': {'to': "source('tpch', 'part')", 'field': 'p_partkey', 'column_name': 'ps_partkey', 'model': "{{ get_where_subquery(source('tpch', 'partsupp')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_relationships_tpch_partsupp_ps_partkey__p_partkey__source_tpch_part_', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_relationships_tpch_part_a4c1d3c0d0f0db1ff9c10bf48b8c8fe8.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_relationships_tpch_partsupp_ps_partkey__p_partkey__source_tpch_part_.511196222f', 'fqn': ['tpch', 'staging', 'tpch', 'source_relationships_tpch_partsupp_ps_partkey__p_partkey__source_tpch_part_'], 'alias': 'source_relationships_tpch_part_a4c1d3c0d0f0db1ff9c10bf48b8c8fe8', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'source_relationships_tpch_part_a4c1d3c0d0f0db1ff9c10bf48b8c8fe8', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'source_relationships_tpch_part_a4c1d3c0d0f0db1ff9c10bf48b8c8fe8'}, 'created_at': 1706652806.3077664, 'config_call_dict': {'alias': 'source_relationships_tpch_part_a4c1d3c0d0f0db1ff9c10bf48b8c8fe8'}, 'relation_name': None, 'raw_code': '{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias="source_relationships_tpch_part_a4c1d3c0d0f0db1ff9c10bf48b8c8fe8") }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'part'], ['tpch', 'partsupp']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_relationships', 'macro.dbt.get_where_subquery'], 'nodes': ['source.tpch.tpch.part', 'source.tpch.tpch.partsupp']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'ps_partkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_relationships_tpch_partsupp_ps_suppkey__s_suppkey__source_tpch_supplier_.1c7ef0743e': {'test_metadata': {'name': 'relationships', 'kwargs': {'to': "source('tpch', 'supplier')", 'field': 's_suppkey', 'column_name': 'ps_suppkey', 'model': "{{ get_where_subquery(source('tpch', 'partsupp')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_relationships_tpch_partsupp_ps_suppkey__s_suppkey__source_tpch_supplier_', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_relationships_tpch_part_c5396ae9effd9c1528d06af4f91b3817.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_relationships_tpch_partsupp_ps_suppkey__s_suppkey__source_tpch_supplier_.1c7ef0743e', 'fqn': ['tpch', 'staging', 'tpch', 'source_relationships_tpch_partsupp_ps_suppkey__s_suppkey__source_tpch_supplier_'], 'alias': 'source_relationships_tpch_part_c5396ae9effd9c1528d06af4f91b3817', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'source_relationships_tpch_part_c5396ae9effd9c1528d06af4f91b3817', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'source_relationships_tpch_part_c5396ae9effd9c1528d06af4f91b3817'}, 'created_at': 1706652806.3136191, 'config_call_dict': {'alias': 'source_relationships_tpch_part_c5396ae9effd9c1528d06af4f91b3817'}, 'relation_name': None, 'raw_code': '{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias="source_relationships_tpch_part_c5396ae9effd9c1528d06af4f91b3817") }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'supplier'], ['tpch', 'partsupp']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_relationships', 'macro.dbt.get_where_subquery'], 'nodes': ['source.tpch.tpch.supplier', 'source.tpch.tpch.partsupp']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'ps_suppkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_unique_tpch_region_r_regionkey.d8eeced103': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'r_regionkey', 'model': "{{ get_where_subquery(source('tpch', 'region')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_unique_tpch_region_r_regionkey', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_unique_tpch_region_r_regionkey.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_unique_tpch_region_r_regionkey.d8eeced103', 'fqn': ['tpch', 'staging', 'tpch', 'source_unique_tpch_region_r_regionkey'], 'alias': 'source_unique_tpch_region_r_regionkey', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'WARN', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'severity': 'WARN'}, 'created_at': 1706652806.319521, 'config_call_dict': {'severity': 'WARN'}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(severity="warn") }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'region']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['source.tpch.tpch.region']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'r_regionkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_not_null_tpch_region_r_regionkey.8f6ee68076': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'r_regionkey', 'model': "{{ get_where_subquery(source('tpch', 'region')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_not_null_tpch_region_r_regionkey', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_not_null_tpch_region_r_regionkey.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_not_null_tpch_region_r_regionkey.8f6ee68076', 'fqn': ['tpch', 'staging', 'tpch', 'source_not_null_tpch_region_r_regionkey'], 'alias': 'source_not_null_tpch_region_r_regionkey', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'WARN', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'severity': 'WARN'}, 'created_at': 1706652806.3213687, 'config_call_dict': {'severity': 'WARN'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(severity="warn") }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'region']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['source.tpch.tpch.region']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'r_regionkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_unique_tpch_supplier_s_suppkey.1a36cf4370': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 's_suppkey', 'model': "{{ get_where_subquery(source('tpch', 'supplier')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_unique_tpch_supplier_s_suppkey', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_unique_tpch_supplier_s_suppkey.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_unique_tpch_supplier_s_suppkey.1a36cf4370', 'fqn': ['tpch', 'staging', 'tpch', 'source_unique_tpch_supplier_s_suppkey'], 'alias': 'source_unique_tpch_supplier_s_suppkey', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'WARN', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'severity': 'WARN'}, 'created_at': 1706652806.3234215, 'config_call_dict': {'severity': 'WARN'}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}{{ config(severity="warn") }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'supplier']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['source.tpch.tpch.supplier']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 's_suppkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_not_null_tpch_supplier_s_suppkey.94660e6dab': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 's_suppkey', 'model': "{{ get_where_subquery(source('tpch', 'supplier')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_not_null_tpch_supplier_s_suppkey', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_not_null_tpch_supplier_s_suppkey.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_not_null_tpch_supplier_s_suppkey.94660e6dab', 'fqn': ['tpch', 'staging', 'tpch', 'source_not_null_tpch_supplier_s_suppkey'], 'alias': 'source_not_null_tpch_supplier_s_suppkey', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'WARN', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'severity': 'WARN'}, 'created_at': 1706652806.3255363, 'config_call_dict': {'severity': 'WARN'}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}{{ config(severity="warn") }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'supplier']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['source.tpch.tpch.supplier']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 's_suppkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'test.tpch.source_relationships_tpch_supplier_s_nationkey__n_nationkey__source_tpch_nation_.2a47ee53da': {'test_metadata': {'name': 'relationships', 'kwargs': {'to': "source('tpch', 'nation')", 'field': 'n_nationkey', 'column_name': 's_nationkey', 'model': "{{ get_where_subquery(source('tpch', 'supplier')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'source_relationships_tpch_supplier_s_nationkey__n_nationkey__source_tpch_nation_', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'source_relationships_tpch_supp_1c9d96c407a8f937b03dcfc97848e71b.sql', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'test.tpch.source_relationships_tpch_supplier_s_nationkey__n_nationkey__source_tpch_nation_.2a47ee53da', 'fqn': ['tpch', 'staging', 'tpch', 'source_relationships_tpch_supplier_s_nationkey__n_nationkey__source_tpch_nation_'], 'alias': 'source_relationships_tpch_supp_1c9d96c407a8f937b03dcfc97848e71b', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': 'source_relationships_tpch_supp_1c9d96c407a8f937b03dcfc97848e71b', 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'source_relationships_tpch_supp_1c9d96c407a8f937b03dcfc97848e71b'}, 'created_at': 1706652806.327381, 'config_call_dict': {'alias': 'source_relationships_tpch_supp_1c9d96c407a8f937b03dcfc97848e71b'}, 'relation_name': None, 'raw_code': '{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias="source_relationships_tpch_supp_1c9d96c407a8f937b03dcfc97848e71b") }}', 'language': 'sql', 'refs': [], 'sources': [['tpch', 'nation'], ['tpch', 'supplier']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_relationships', 'macro.dbt.get_where_subquery'], 'nodes': ['source.tpch.tpch.nation', 'source.tpch.tpch.supplier']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 's_nationkey', 'file_key_name': 'sources.tpch', 'attached_node': None}, 'model.tpch.raw_inventory': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'raw_inventory', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'dv_demo/raw_stage/raw_inventory.sql', 'original_file_path': 'models/dv_demo/raw_stage/raw_inventory.sql', 'unique_id': 'model.tpch.raw_inventory', 'fqn': ['tpch', 'dv_demo', 'raw_stage', 'raw_inventory'], 'alias': 'raw_inventory', 'checksum': {'name': 'sha256', 'checksum': '872b7270e85494572e230fb64e994e2610054d84d1a35049fd212ab21014aaae'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1706718562.8522046, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.raw_inventory', 'raw_code': "SELECT\n    a.PS_PARTKEY AS PARTKEY,\n    a.PS_SUPPKEY AS SUPPLIERKEY,\n    a.PS_AVAILQTY AS AVAILQTY,\n    a.PS_SUPPLYCOST AS SUPPLYCOST,\n    a.PS_COMMENT AS PART_SUPPLY_COMMENT,\n    b.S_NAME AS SUPPLIER_NAME,\n    b.S_ADDRESS AS SUPPLIER_ADDRESS,\n    b.S_NATIONKEY AS SUPPLIER_NATION_KEY,\n    b.S_PHONE AS SUPPLIER_PHONE,\n    b.S_ACCTBAL AS SUPPLIER_ACCTBAL,\n    b.S_COMMENT AS SUPPLIER_COMMENT,\n    c.P_NAME AS PART_NAME,\n    c.P_MFGR AS PART_MFGR,\n    c.P_BRAND AS PART_BRAND,\n    c.P_TYPE AS PART_TYPE,\n    c.P_SIZE AS PART_SIZE,\n    c.P_CONTAINER AS PART_CONTAINER,\n    c.P_RETAILPRICE AS PART_RETAILPRICE,\n    c.P_COMMENT AS PART_COMMENT,\n    d.N_NAME AS SUPPLIER_NATION_NAME,\n    d.N_COMMENT AS SUPPLIER_NATION_COMMENT,\n    d.N_REGIONKEY AS SUPPLIER_REGION_KEY,\n    e.R_NAME AS SUPPLIER_REGION_NAME,\n    e.R_COMMENT AS SUPPLIER_REGION_COMMENT\nFROM {{ source('tpch', 'partsupp') }} AS a\nLEFT JOIN {{ source('tpch', 'supplier') }} AS b\n    ON a.PS_SUPPKEY = b.S_SUPPKEY\nLEFT JOIN {{ source('tpch', 'part') }} AS c\n    ON a.PS_PARTKEY = c.P_PARTKEY\nLEFT JOIN {{ source('tpch', 'nation') }} AS d\n    ON b.S_NATIONKEY = d.N_NATIONKEY\nLEFT JOIN {{ source('tpch', 'region') }} AS e\n    ON d.N_REGIONKEY = e.R_REGIONKEY\nJOIN {{ ref('raw_orders') }} AS f\n    ON a.PS_PARTKEY = f.PARTKEY AND a.PS_SUPPKEY=f.SUPPLIERKEY\nORDER BY a.PS_PARTKEY, a.PS_SUPPKEY", 'language': 'sql', 'refs': [{'name': 'raw_orders', 'package': None, 'version': None}], 'sources': [['tpch', 'partsupp'], ['tpch', 'part'], ['tpch', 'supplier'], ['tpch', 'nation'], ['tpch', 'region']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.tpch.partsupp', 'source.tpch.tpch.part', 'source.tpch.tpch.supplier', 'source.tpch.tpch.nation', 'source.tpch.tpch.region', 'model.tpch.raw_orders']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.agg_returned_orders_by_month': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'agg_returned_orders_by_month', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/aggregates/agg_returned_orders_by_month.sql', 'original_file_path': 'models/marts/aggregates/agg_returned_orders_by_month.sql', 'unique_id': 'model.tpch.agg_returned_orders_by_month', 'fqn': ['tpch', 'marts', 'aggregates', 'agg_returned_orders_by_month'], 'alias': 'agg_returned_orders_by_month', 'checksum': {'name': 'sha256', 'checksum': 'a3446c2c17ef2cfe73733b2408bf8b497dbf19ca45e1630563c58e6a2057aae2'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'the aggregate number of orders returned broken out by calendar month', 'columns': {'order_month': {'name': 'order_month', 'description': 'calendar month the order was placed', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'returned_orders': {'name': 'returned_orders', 'description': 'number of orders returned', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'return_rate': {'name': 'return_rate', 'description': 'rate of orders returned (calc is returned orders / total orders)', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'row_count': {'name': 'row_count', 'description': 'total rows', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/marts/aggregates/aggregates.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1707326358.2911363, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.agg_returned_orders_by_month', 'raw_code': "with fct_order_items as (\n    select * from {{ ref('fct_order_items') }}\n),\n\nfinal as (\n    select\n        date_trunc(MONTH, fct_order_items.order_date) as order_month\n        , count(case when is_return then order_item_key else null end) as returned_orders\n        , 1.0* returned_orders / nullif (\n            count(order_item_key)\n            , 0\n        ) as return_rate\n        , count(*) as row_count\n    from fct_order_items\n    where fct_order_items.order_date < '1995-03-31'\n    group by 1\n    order by 1 desc\n)\n\nselect * from final", 'language': 'sql', 'refs': [{'name': 'fct_order_items', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.fct_order_items']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.stg_worker': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'stg_worker', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'staging/human_capital/stg_worker.sql', 'original_file_path': 'models/staging/human_capital/stg_worker.sql', 'unique_id': 'model.tpch.stg_worker', 'fqn': ['tpch', 'staging', 'human_capital', 'stg_worker'], 'alias': 'stg_worker', 'checksum': {'name': 'sha256', 'checksum': '903ef9e6eabb8ae48d9cdc6c494844dcafbc680f37d2fcbfcae5ebbf365d3f6f'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'worker information from the human capital system', 'columns': {'employee_id': {'name': 'employee_id', 'description': '(primary key) id for the employee, contractor ids are not populated in this field', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'hire_dt': {'name': 'hire_dt', 'description': 'date employee was hired, contractor hire dates are blank', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'worker_country': {'name': 'worker_country', 'description': 'country of residence for worker', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'worker_name': {'name': 'worker_name', 'description': 'worker full name', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'worker_docs': {'name': 'worker_docs', 'description': 'list of documents we have on file', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'date_of_birth': {'name': 'date_of_birth', 'description': 'worker birthday', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'worker_id': {'name': 'worker_id', 'description': 'worker id (includes contractors)', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'delete_flg': {'name': 'delete_flg', 'description': 'soft delete flag', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'update_dt': {'name': 'update_dt', 'description': 'date the record was updated', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'worker_licenses': {'name': 'worker_licenses', 'description': 'licenses on file for the worker', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'worker_passports': {'name': 'worker_passports', 'description': 'passport on file for the worker', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/staging/human_capital/stg_worker.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'view'}, 'created_at': 1707331871.6481974, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.stg_worker', 'raw_code': "--change\n\nwith source as (\n\n    select * from {{ source('human_capital', 'worker') }}\n\n),\n\nrenamed as (\n\n    select\n        employee_id as employee_id,\n        hire_date as hire_dt,\n        work_address_country as worker_country,\n        worker as worker_name,\n        worker_documents as worker_docs,\n        date_of_birth as date_of_birth,\n        is_deleted as delete_flg,\n        updated_at as update_dt,\n        licenses as worker_licenses,\n        passports as worker_passports\n\n    from source\n\n)\n\nselect * from renamed", 'language': 'sql', 'refs': [], 'sources': [['human_capital', 'worker']], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['source.tpch.human_capital.worker']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.dim_worker': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'dim_worker', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'marts/core/dim_worker.sql', 'original_file_path': 'models/marts/core/dim_worker.sql', 'unique_id': 'model.tpch.dim_worker', 'fqn': ['tpch', 'marts', 'core', 'dim_worker'], 'alias': 'dim_worker', 'checksum': {'name': 'sha256', 'checksum': 'd009a4491be63e3a898d1bbaf9ea1a0a01d8216eba6896265b2b5be270c08bbc'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'table', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'worker dimension sourced from human capital system', 'columns': {'employee_id': {'name': 'employee_id', 'description': '(primary key) id for the employee, contractor ids are not populated in this field', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'hire_dt': {'name': 'hire_dt', 'description': 'date employee was hired, contractor hire dates are blank', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'hire_year': {'name': 'hire_year', 'description': 'year employee was hired', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'hire_quarter': {'name': 'hire_quarter', 'description': 'quarter the employee was hired', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'hire_month': {'name': 'hire_month', 'description': 'month the employee was hired', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'worker_country': {'name': 'worker_country', 'description': 'country of residence for worker', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'worker_name': {'name': 'worker_name', 'description': 'worker full name', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'worker_first_name': {'name': 'worker_first_name', 'description': 'worker first name', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'worker_last_name': {'name': 'worker_last_name', 'description': 'worker last name', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'worker_docs': {'name': 'worker_docs', 'description': 'list of documents we have on file', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'date_of_birth': {'name': 'date_of_birth', 'description': 'worker birthday', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'worker_age': {'name': 'worker_age', 'description': 'worker age, derived from birthday', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'worker_id': {'name': 'worker_id', 'description': 'worker id (includes contractors)', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'delete_flg': {'name': 'delete_flg', 'description': 'soft delete flag', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'update_dt': {'name': 'update_dt', 'description': 'date the record was updated', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'worker_licenses': {'name': 'worker_licenses', 'description': 'licenses on file for the worker', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'worker_passports': {'name': 'worker_passports', 'description': 'passport on file for the worker', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/marts/core/core.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'table'}, 'created_at': 1707331871.6534476, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.dim_worker', 'raw_code': "--change\n\nwith worker as (\n\n    select * from {{ ref('stg_worker') }}\n\n),\nfinal as (\n    select \n        employee_id,\n        hire_dt,\n        year(hire_dt) as hire_year,\n        quarter(hire_dt) as hire_quarter,\n        month(hire_dt) as hire_month,\n        worker_country,\n        worker_name,\n        split_part(worker_name,' ', 1) as worker_first_name,\n        split_part(worker_name,' ', 2) as worker_last_name,\n        worker_docs,\n        date_of_birth,\n        datediff(year, date_of_birth, current_date) as worker_age,\n        delete_flg,\n        update_dt,\n        worker_licenses,\n        worker_passports\n    from\n        worker\n)\nselect \n    *\nfrom\n    final\norder by\n    employee_id", 'language': 'sql', 'refs': [{'name': 'stg_worker', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': ['model.tpch.stg_worker']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'model.tpch.materialization_incremental': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer', 'name': 'materialization_incremental', 'resource_type': 'model', 'package_name': 'tpch', 'path': 'demo_examples/materialization_incremental.sql', 'original_file_path': 'models/demo_examples/materialization_incremental.sql', 'unique_id': 'model.tpch.materialization_incremental', 'fqn': ['tpch', 'demo_examples', 'materialization_incremental'], 'alias': 'materialization_incremental', 'checksum': {'name': 'sha256', 'checksum': '2921d9e7dcbf49d7fb31b020db2b9e3ce1fa88b418c833f40738c937d4f92cae'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'incremental', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': 'demo to show incremental model', 'columns': {'customer_key': {'name': 'customer_key', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': 'tpch://models/demo_examples/demo_examples.yml', 'build_path': None, 'deferred': False, 'unrendered_config': {'materialized': 'incremental'}, 'created_at': 1707331871.6538417, 'config_call_dict': {'materialized': 'incremental'}, 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.materialization_incremental', 'raw_code': "{{ config(materialized='incremental') }}\n\nwith source as (\n\n    select * from {{ source('tpch', 'customer') }}\n\n),\n\n\nrenamed as (\n\n    select\n        c_custkey as customer_key,\n        c_name as name,\n        c_address as address, \n        c_nationkey as nation_key,\n        c_phone as phone_number,\n        c_acctbal as account_balance,\n        c_mktsegment as market_segment,\n        c_comment as comment\n\n    from source\n\n)\n\nselect * from renamed\n\n{% if is_incremental() %}\n  -- this filter will only be applied on an incremental run\n  where customer_key not in (select customer_key from {{this}} )\n\n{% endif %}", 'language': 'sql', 'refs': [], 'sources': [['tpch', 'customer']], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.is_incremental'], 'nodes': ['source.tpch.tpch.customer']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'protected', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}, 'test.tpch.unique_stg_worker_employee_id.c9c1f4be14': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'employee_id', 'model': "{{ get_where_subquery(ref('stg_worker')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'unique_stg_worker_employee_id', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'unique_stg_worker_employee_id.sql', 'original_file_path': 'models/staging/human_capital/stg_worker.yml', 'unique_id': 'test.tpch.unique_stg_worker_employee_id.c9c1f4be14', 'fqn': ['tpch', 'staging', 'human_capital', 'unique_stg_worker_employee_id'], 'alias': 'unique_stg_worker_employee_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1707331871.6493716, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'stg_worker', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tpch.stg_worker']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'employee_id', 'file_key_name': 'models.stg_worker', 'attached_node': 'model.tpch.stg_worker'}, 'test.tpch.not_null_stg_worker_employee_id.b5c39e4604': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'employee_id', 'model': "{{ get_where_subquery(ref('stg_worker')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'not_null_stg_worker_employee_id', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'not_null_stg_worker_employee_id.sql', 'original_file_path': 'models/staging/human_capital/stg_worker.yml', 'unique_id': 'test.tpch.not_null_stg_worker_employee_id.b5c39e4604', 'fqn': ['tpch', 'staging', 'human_capital', 'not_null_stg_worker_employee_id'], 'alias': 'not_null_stg_worker_employee_id', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1707331871.6513646, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'stg_worker', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tpch.stg_worker']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'employee_id', 'file_key_name': 'models.stg_worker', 'attached_node': 'model.tpch.stg_worker'}, 'test.tpch.unique_materialization_incremental_customer_key.325783f327': {'test_metadata': {'name': 'unique', 'kwargs': {'column_name': 'customer_key', 'model': "{{ get_where_subquery(ref('materialization_incremental')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'unique_materialization_incremental_customer_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'unique_materialization_incremental_customer_key.sql', 'original_file_path': 'models/demo_examples/demo_examples.yml', 'unique_id': 'test.tpch.unique_materialization_incremental_customer_key.325783f327', 'fqn': ['tpch', 'demo_examples', 'unique_materialization_incremental_customer_key'], 'alias': 'unique_materialization_incremental_customer_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1707331871.6548114, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_unique(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'materialization_incremental', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_unique'], 'nodes': ['model.tpch.materialization_incremental']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'customer_key', 'file_key_name': 'models.materialization_incremental', 'attached_node': 'model.tpch.materialization_incremental'}, 'test.tpch.not_null_materialization_incremental_customer_key.e2b95d8009': {'test_metadata': {'name': 'not_null', 'kwargs': {'column_name': 'customer_key', 'model': "{{ get_where_subquery(ref('materialization_incremental')) }}"}, 'namespace': None}, 'database': 'MIKE_FULLER_SANDBOX', 'schema': 'dbt_mfuller_sa_demo_test_defer_dbt_test__audit', 'name': 'not_null_materialization_incremental_customer_key', 'resource_type': 'test', 'package_name': 'tpch', 'path': 'not_null_materialization_incremental_customer_key.sql', 'original_file_path': 'models/demo_examples/demo_examples.yml', 'unique_id': 'test.tpch.not_null_materialization_incremental_customer_key.e2b95d8009', 'fqn': ['tpch', 'demo_examples', 'not_null_materialization_incremental_customer_key'], 'alias': 'not_null_materialization_incremental_customer_key', 'checksum': {'name': 'none', 'checksum': ''}, 'config': {'enabled': True, 'alias': None, 'schema': 'dbt_test__audit', 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'test', 'severity': 'ERROR', 'store_failures': None, 'where': None, 'limit': None, 'fail_calc': 'count(*)', 'warn_if': '!= 0', 'error_if': '!= 0'}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {}, 'created_at': 1707331871.6567812, 'config_call_dict': {}, 'relation_name': None, 'raw_code': '{{ test_not_null(**_dbt_generic_test_kwargs) }}', 'language': 'sql', 'refs': [{'name': 'materialization_incremental', 'package': None, 'version': None}], 'sources': [], 'metrics': [], 'depends_on': {'macros': ['macro.dbt.test_not_null'], 'nodes': ['model.tpch.materialization_incremental']}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'column_name': 'customer_key', 'file_key_name': 'models.materialization_incremental', 'attached_node': 'model.tpch.materialization_incremental'}, 'model.pizza_hq.lkp_pizza_sizes': {'database': 'MIKE_FULLER_SANDBOX', 'schema': 'prod_pizza_hq', 'name': 'lkp_pizza_sizes', 'resource_type': 'model', 'package_name': 'pizza_hq', 'path': '', 'original_file_path': '', 'unique_id': 'model.pizza_hq.lkp_pizza_sizes', 'fqn': ['pizza_hq', 'lkp_pizza_sizes'], 'alias': 'lkp_pizza_sizes', 'checksum': {'name': 'sha256', 'checksum': 'e4ce0818a5b5e81472713fb00ff661c7d31f4288620ee45c193079e733110177'}, 'config': {'enabled': True, 'alias': None, 'schema': None, 'database': None, 'tags': [], 'meta': {}, 'group': None, 'materialized': 'view', 'incremental_strategy': None, 'persist_docs': {}, 'quoting': {}, 'column_types': {}, 'full_refresh': None, 'unique_key': None, 'on_schema_change': 'ignore', 'on_configuration_change': 'apply', 'grants': {}, 'packages': [], 'docs': {'show': True, 'node_color': None}, 'contract': {'enforced': False}, 'post-hook': [], 'pre-hook': []}, 'tags': [], 'description': '', 'columns': {}, 'meta': {}, 'group': None, 'docs': {'show': True, 'node_color': None}, 'patch_path': None, 'build_path': None, 'deferred': False, 'unrendered_config': {'alias': 'lkp_pizza_sizes', 'schema': 'prod_pizza_hq', 'database': 'MIKE_FULLER_SANDBOX'}, 'created_at': 1707339652.3025153, 'config_call_dict': {}, 'relation_name': 'MIKE_FULLER_SANDBOX.prod_pizza_hq.lkp_pizza_sizes', 'raw_code': '', 'language': 'sql', 'refs': [], 'sources': [], 'metrics': [], 'depends_on': {'macros': [], 'nodes': []}, 'compiled_path': None, 'contract': {'enforced': False, 'checksum': None}, 'access': 'public', 'constraints': [], 'version': None, 'latest_version': None, 'deprecation_date': None, 'defer_relation': None}}, 'sources': {'source.tpch.human_capital.worker': {'database': 'mike_fuller_demo', 'schema': 'human_capital', 'name': 'worker', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/staging/human_capital/human_capital_sources.yml', 'original_file_path': 'models/staging/human_capital/human_capital_sources.yml', 'unique_id': 'source.tpch.human_capital.worker', 'fqn': ['tpch', 'staging', 'human_capital', 'human_capital', 'worker'], 'source_name': 'human_capital', 'source_description': 'human capital data', 'loader': '', 'identifier': 'worker', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': None, 'freshness': {'warn_after': {'count': None, 'period': None}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': None, 'description': '', 'columns': {}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'mike_fuller_demo.human_capital.worker', 'created_at': 1706652806.2159305}, 'source.tpch.pizza_shop.pizza_sales': {'database': 'mike_fuller_sandbox', 'schema': 'pizza', 'name': 'pizza_sales', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/staging/pizza/pizza_src.yml', 'original_file_path': 'models/staging/pizza/pizza_src.yml', 'unique_id': 'source.tpch.pizza_shop.pizza_sales', 'fqn': ['tpch', 'staging', 'pizza', 'pizza_shop', 'pizza_sales'], 'source_name': 'pizza_shop', 'source_description': '', 'loader': '', 'identifier': 'pizza_sales', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': None, 'freshness': {'warn_after': {'count': None, 'period': None}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': None, 'description': '', 'columns': {}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'mike_fuller_sandbox.pizza.pizza_sales', 'created_at': 1706652806.2161484}, 'source.tpch.scd_demo.bookings': {'database': 'mike_fuller_sandbox', 'schema': 'scd_demo_source', 'name': 'bookings', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/staging/bookings_scd/bookings.yml', 'original_file_path': 'models/staging/bookings_scd/bookings.yml', 'unique_id': 'source.tpch.scd_demo.bookings', 'fqn': ['tpch', 'staging', 'bookings_scd', 'scd_demo', 'bookings'], 'source_name': 'scd_demo', 'source_description': '', 'loader': '', 'identifier': 'bookings', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': None, 'freshness': {'warn_after': {'count': None, 'period': None}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': None, 'description': '', 'columns': {}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'mike_fuller_sandbox.scd_demo_source.bookings', 'created_at': 1706652806.2163022}, 'source.tpch.formula1.circuits': {'database': 'mike_fuller_sandbox', 'schema': 'formula1_raw', 'name': 'circuits', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/staging/formula1/f1_sources.yml', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'source.tpch.formula1.circuits', 'fqn': ['tpch', 'staging', 'formula1', 'formula1', 'circuits'], 'source_name': 'formula1', 'source_description': 'formula 1 datasets with normalized tables', 'loader': '', 'identifier': 'circuits', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': None, 'freshness': {'warn_after': {'count': None, 'period': None}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': None, 'description': 'One record per circuit, which is the specific race course.', 'columns': {'circuitid': {'name': 'circuitid', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'mike_fuller_sandbox.formula1_raw.circuits', 'created_at': 1706652806.2292092}, 'source.tpch.formula1.constructors': {'database': 'mike_fuller_sandbox', 'schema': 'formula1_raw', 'name': 'constructors', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/staging/formula1/f1_sources.yml', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'source.tpch.formula1.constructors', 'fqn': ['tpch', 'staging', 'formula1', 'formula1', 'constructors'], 'source_name': 'formula1', 'source_description': 'formula 1 datasets with normalized tables', 'loader': '', 'identifier': 'constructors', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': None, 'freshness': {'warn_after': {'count': None, 'period': None}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': None, 'description': 'One record per constructor. Constructors are the teams that build their formula 1 cars.', 'columns': {'constructorid': {'name': 'constructorid', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'mike_fuller_sandbox.formula1_raw.constructors', 'created_at': 1706652806.2332964}, 'source.tpch.formula1.drivers': {'database': 'mike_fuller_sandbox', 'schema': 'formula1_raw', 'name': 'drivers', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/staging/formula1/f1_sources.yml', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'source.tpch.formula1.drivers', 'fqn': ['tpch', 'staging', 'formula1', 'formula1', 'drivers'], 'source_name': 'formula1', 'source_description': 'formula 1 datasets with normalized tables', 'loader': '', 'identifier': 'drivers', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': None, 'freshness': {'warn_after': {'count': None, 'period': None}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': None, 'description': 'One record per driver. This table gives details about the driver.', 'columns': {'driverid': {'name': 'driverid', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'mike_fuller_sandbox.formula1_raw.drivers', 'created_at': 1706652806.237134}, 'source.tpch.formula1.lap_times': {'database': 'mike_fuller_sandbox', 'schema': 'formula1_raw', 'name': 'lap_times', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/staging/formula1/f1_sources.yml', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'source.tpch.formula1.lap_times', 'fqn': ['tpch', 'staging', 'formula1', 'formula1', 'lap_times'], 'source_name': 'formula1', 'source_description': 'formula 1 datasets with normalized tables', 'loader': '', 'identifier': 'lap_times', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': None, 'freshness': {'warn_after': {'count': None, 'period': None}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': None, 'description': 'One row per lap in each race. Lap times started being recorded in this dataset in 1984 and joined through driver_id.', 'columns': {}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'mike_fuller_sandbox.formula1_raw.lap_times', 'created_at': 1706652806.237309}, 'source.tpch.formula1.pit_stops': {'database': 'mike_fuller_sandbox', 'schema': 'formula1_raw', 'name': 'pit_stops', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/staging/formula1/f1_sources.yml', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'source.tpch.formula1.pit_stops', 'fqn': ['tpch', 'staging', 'formula1', 'formula1', 'pit_stops'], 'source_name': 'formula1', 'source_description': 'formula 1 datasets with normalized tables', 'loader': '', 'identifier': 'pit_stops', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': None, 'freshness': {'warn_after': {'count': None, 'period': None}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': None, 'description': 'One row per pit stop. Pit stops do not have their own id column, the combination of the race_id and driver_id identify the pit stop.', 'columns': {'stop': {'name': 'stop', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'mike_fuller_sandbox.formula1_raw.pit_stops', 'created_at': 1706652806.2432806}, 'source.tpch.formula1.races': {'database': 'mike_fuller_sandbox', 'schema': 'formula1_raw', 'name': 'races', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/staging/formula1/f1_sources.yml', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'source.tpch.formula1.races', 'fqn': ['tpch', 'staging', 'formula1', 'formula1', 'races'], 'source_name': 'formula1', 'source_description': 'formula 1 datasets with normalized tables', 'loader': '', 'identifier': 'races', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': None, 'freshness': {'warn_after': {'count': None, 'period': None}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': None, 'description': 'One race per row. Importantly this table contains the race year to understand trends.', 'columns': {'raceid': {'name': 'raceid', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'mike_fuller_sandbox.formula1_raw.races', 'created_at': 1706652806.2471347}, 'source.tpch.formula1.results': {'database': 'mike_fuller_sandbox', 'schema': 'formula1_raw', 'name': 'results', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/staging/formula1/f1_sources.yml', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'source.tpch.formula1.results', 'fqn': ['tpch', 'staging', 'formula1', 'formula1', 'results'], 'source_name': 'formula1', 'source_description': 'formula 1 datasets with normalized tables', 'loader': '', 'identifier': 'results', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': None, 'freshness': {'warn_after': {'count': None, 'period': None}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': None, 'description': 'One row per result. The main table that we join out for grid and position variables.', 'columns': {'resultid': {'name': 'resultid', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'mike_fuller_sandbox.formula1_raw.results', 'created_at': 1706652806.2512033}, 'source.tpch.formula1.status': {'database': 'mike_fuller_sandbox', 'schema': 'formula1_raw', 'name': 'status', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/staging/formula1/f1_sources.yml', 'original_file_path': 'models/staging/formula1/f1_sources.yml', 'unique_id': 'source.tpch.formula1.status', 'fqn': ['tpch', 'staging', 'formula1', 'formula1', 'status'], 'source_name': 'formula1', 'source_description': 'formula 1 datasets with normalized tables', 'loader': '', 'identifier': 'status', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': None, 'freshness': {'warn_after': {'count': None, 'period': None}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': None, 'description': 'One status per row. The status contextualizes whether the race was finished or what issues arose e.g. collisions, engine, etc.', 'columns': {'statusid': {'name': 'statusid', 'description': '', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'mike_fuller_sandbox.formula1_raw.status', 'created_at': 1706652806.255011}, 'source.tpch.tpch.orders': {'database': 'raw', 'schema': 'tpch_sf001', 'name': 'orders', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/staging/tpch/tpch_sources.yml', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'source.tpch.tpch.orders', 'fqn': ['tpch', 'staging', 'tpch', 'tpch', 'orders'], 'source_name': 'tpch', 'source_description': 'Welcome to the dbt Labs demo dbt project! We use the [TPCH dataset](https://docs.snowflake.com/en/user-guide/sample-data-tpch.html) to create a sample project to emulate what a production project might look like!', 'loader': '', 'identifier': 'orders', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': "current_timestamp() - interval '6.3 hours'", 'freshness': {'warn_after': {'count': 12, 'period': 'hour'}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': None, 'description': 'main order tracking table', 'columns': {'o_orderkey': {'name': 'o_orderkey', 'description': 'SF*1,500,000 are sparsely populated', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'o_custkey': {'name': 'o_custkey', 'description': 'Foreign Key to C_CUSTKEY', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'o_orderstatus': {'name': 'o_orderstatus', 'description': 'status code of the order', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'o_totalprice': {'name': 'o_totalprice', 'description': 'raw price', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'o_orderdate': {'name': 'o_orderdate', 'description': 'date the order was made', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'o_orderpriority': {'name': 'o_orderpriority', 'description': 'code associated with the order', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'o_clerk': {'name': 'o_clerk', 'description': 'id of the clerk', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'o_shippriority': {'name': 'o_shippriority', 'description': 'numeric representation of the shipping priority, zero being the default', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'o_comment': {'name': 'o_comment', 'description': 'additional commentary', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'raw.tpch_sf001.orders', 'created_at': 1706652806.2648253}, 'source.tpch.tpch.customer': {'database': 'raw', 'schema': 'tpch_sf001', 'name': 'customer', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/staging/tpch/tpch_sources.yml', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'source.tpch.tpch.customer', 'fqn': ['tpch', 'staging', 'tpch', 'tpch', 'customer'], 'source_name': 'tpch', 'source_description': 'Welcome to the dbt Labs demo dbt project! We use the [TPCH dataset](https://docs.snowflake.com/en/user-guide/sample-data-tpch.html) to create a sample project to emulate what a production project might look like!', 'loader': '', 'identifier': 'customer', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': "current_timestamp() - interval '6.3 hours'", 'freshness': {'warn_after': {'count': 12, 'period': 'hour'}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': None, 'description': 'main customer table', 'columns': {'c_custkey': {'name': 'c_custkey', 'description': 'unique customer key', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'c_name': {'name': 'c_name', 'description': 'customer id', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'c_address': {'name': 'c_address', 'description': 'address of the customer', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'c_nationkey': {'name': 'c_nationkey', 'description': 'foreign key to stg_tpch_nations', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'c_phone': {'name': 'c_phone', 'description': 'phone number of the customer', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'c_acctbal': {'name': 'c_acctbal', 'description': 'raw account balance', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'c_mktsegment': {'name': 'c_mktsegment', 'description': 'market segment of the customer', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'c_comment': {'name': 'c_comment', 'description': 'additional commentary', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'raw.tpch_sf001.customer', 'created_at': 1706652806.268982}, 'source.tpch.tpch.lineitem': {'database': 'raw', 'schema': 'tpch_sf001', 'name': 'lineitem', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/staging/tpch/tpch_sources.yml', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'source.tpch.tpch.lineitem', 'fqn': ['tpch', 'staging', 'tpch', 'tpch', 'lineitem'], 'source_name': 'tpch', 'source_description': 'Welcome to the dbt Labs demo dbt project! We use the [TPCH dataset](https://docs.snowflake.com/en/user-guide/sample-data-tpch.html) to create a sample project to emulate what a production project might look like!', 'loader': '', 'identifier': 'lineitem', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': "current_timestamp() - interval '6.3 hours'", 'freshness': {'warn_after': {'count': 12, 'period': 'hour'}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': None, 'description': 'main lineitem table', 'columns': {'l_orderkey': {'name': 'l_orderkey', 'description': 'Foreign Key to O_ORDERKEY', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'l_partkey': {'name': 'l_partkey', 'description': 'Foreign key to P_PARTKEY, first part of the compound Foreign Key to (PS_PARTKEY,PS_SUPPKEY) with L_SUPPKEY', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'l_suppkey': {'name': 'l_suppkey', 'description': 'Foreign key to S_SUPPKEY, second part of the compound Foreign Key to (PS_PARTKEY, PS_SUPPKEY) with L_PARTKEY', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'l_linenumber': {'name': 'l_linenumber', 'description': 'sequence of the order items within the order', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'l_quantity': {'name': 'l_quantity', 'description': 'total units', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'l_extendedprice': {'name': 'l_extendedprice', 'description': 'line item price', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'l_discount': {'name': 'l_discount', 'description': 'percentage of the discount', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'l_tax': {'name': 'l_tax', 'description': 'tax rate of the order item', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'l_returnflag': {'name': 'l_returnflag', 'description': 'letter determining the status of the return (R=returned, A=accepted)', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'l_linestatus': {'name': 'l_linestatus', 'description': 'status code of the order item (P=returned, F=billed, O=shipped)', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'l_shipdate': {'name': 'l_shipdate', 'description': 'the date the order item is being shipped', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'l_commitdate': {'name': 'l_commitdate', 'description': 'the date the order item is being commited', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'l_receiptdate': {'name': 'l_receiptdate', 'description': 'the receipt date of the order item', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'l_shipinstruct': {'name': 'l_shipinstruct', 'description': 'additional instructions on the shipment', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'l_shipmode': {'name': 'l_shipmode', 'description': 'method of shipping', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'l_comment': {'name': 'l_comment', 'description': 'additional commentary', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'raw.tpch_sf001.lineitem', 'created_at': 1706652806.292044}, 'source.tpch.tpch.nation': {'database': 'raw', 'schema': 'tpch_sf001', 'name': 'nation', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/staging/tpch/tpch_sources.yml', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'source.tpch.tpch.nation', 'fqn': ['tpch', 'staging', 'tpch', 'tpch', 'nation'], 'source_name': 'tpch', 'source_description': 'Welcome to the dbt Labs demo dbt project! We use the [TPCH dataset](https://docs.snowflake.com/en/user-guide/sample-data-tpch.html) to create a sample project to emulate what a production project might look like!', 'loader': '', 'identifier': 'nation', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': "current_timestamp() - interval '6.3 hours'", 'freshness': {'warn_after': {'count': 12, 'period': 'hour'}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': None, 'description': 'nation mapping', 'columns': {'n_nationkey': {'name': 'n_nationkey', 'description': '25 nations are populated', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'n_name': {'name': 'n_name', 'description': 'nation name', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'n_regionkey': {'name': 'n_regionkey', 'description': 'Foreign Key to R_REGIONKEY', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'n_comment': {'name': 'n_comment', 'description': 'additional commentary', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'raw.tpch_sf001.nation', 'created_at': 1706652806.302436}, 'source.tpch.tpch.part': {'database': 'raw', 'schema': 'tpch_sf001', 'name': 'part', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/staging/tpch/tpch_sources.yml', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'source.tpch.tpch.part', 'fqn': ['tpch', 'staging', 'tpch', 'tpch', 'part'], 'source_name': 'tpch', 'source_description': 'Welcome to the dbt Labs demo dbt project! We use the [TPCH dataset](https://docs.snowflake.com/en/user-guide/sample-data-tpch.html) to create a sample project to emulate what a production project might look like!', 'loader': '', 'identifier': 'part', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': "current_timestamp() - interval '6.3 hours'", 'freshness': {'warn_after': {'count': 12, 'period': 'hour'}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': None, 'description': 'main part table', 'columns': {'p_partkey': {'name': 'p_partkey', 'description': 'SF*200,000 are populated', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'p_name': {'name': 'p_name', 'description': 'name of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'p_mfgr': {'name': 'p_mfgr', 'description': 'manufacturer of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'p_brand': {'name': 'p_brand', 'description': 'brand of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'p_type': {'name': 'p_type', 'description': 'type of part including material', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'p_size': {'name': 'p_size', 'description': 'size of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'p_container': {'name': 'p_container', 'description': 'container of the part', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'p_retailprice': {'name': 'p_retailprice', 'description': 'raw retail price', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'p_comment': {'name': 'p_comment', 'description': 'additional commentary', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'raw.tpch_sf001.part', 'created_at': 1706652806.3066757}, 'source.tpch.tpch.partsupp': {'database': 'raw', 'schema': 'tpch_sf001', 'name': 'partsupp', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/staging/tpch/tpch_sources.yml', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'source.tpch.tpch.partsupp', 'fqn': ['tpch', 'staging', 'tpch', 'tpch', 'partsupp'], 'source_name': 'tpch', 'source_description': 'Welcome to the dbt Labs demo dbt project! We use the [TPCH dataset](https://docs.snowflake.com/en/user-guide/sample-data-tpch.html) to create a sample project to emulate what a production project might look like!', 'loader': '', 'identifier': 'partsupp', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': "current_timestamp() - interval '6.3 hours'", 'freshness': {'warn_after': {'count': 12, 'period': 'hour'}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': None, 'description': 'main part supplier table', 'columns': {'ps_partkey': {'name': 'ps_partkey', 'description': 'Foreign Key to P_PARTKEY', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'ps_suppkey': {'name': 'ps_suppkey', 'description': 'Foreign Key to S_SUPPKEY', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'ps_availqty': {'name': 'ps_availqty', 'description': 'raw available quantity', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'ps_supplycost': {'name': 'ps_supplycost', 'description': 'raw cost', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'ps_comment': {'name': 'ps_comment', 'description': 'additional commentary', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'raw.tpch_sf001.partsupp', 'created_at': 1706652806.31842}, 'source.tpch.tpch.region': {'database': 'raw', 'schema': 'tpch_sf001', 'name': 'region', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/staging/tpch/tpch_sources.yml', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'source.tpch.tpch.region', 'fqn': ['tpch', 'staging', 'tpch', 'tpch', 'region'], 'source_name': 'tpch', 'source_description': 'Welcome to the dbt Labs demo dbt project! We use the [TPCH dataset](https://docs.snowflake.com/en/user-guide/sample-data-tpch.html) to create a sample project to emulate what a production project might look like!', 'loader': '', 'identifier': 'region', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': "current_timestamp() - interval '6.3 hours'", 'freshness': {'warn_after': {'count': 12, 'period': 'hour'}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': None, 'description': 'region mapping', 'columns': {'r_regionkey': {'name': 'r_regionkey', 'description': '5 regions are populated', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'r_name': {'name': 'r_name', 'description': 'region name', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 'r_comment': {'name': 'r_comment', 'description': 'additional commentary', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'raw.tpch_sf001.region', 'created_at': 1706652806.322364}, 'source.tpch.tpch.supplier': {'database': 'raw', 'schema': 'tpch_sf001', 'name': 'supplier', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/staging/tpch/tpch_sources.yml', 'original_file_path': 'models/staging/tpch/tpch_sources.yml', 'unique_id': 'source.tpch.tpch.supplier', 'fqn': ['tpch', 'staging', 'tpch', 'tpch', 'supplier'], 'source_name': 'tpch', 'source_description': 'Welcome to the dbt Labs demo dbt project! We use the [TPCH dataset](https://docs.snowflake.com/en/user-guide/sample-data-tpch.html) to create a sample project to emulate what a production project might look like!', 'loader': '', 'identifier': 'supplier', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': "current_timestamp() - interval '6.3 hours'", 'freshness': {'warn_after': {'count': 12, 'period': 'hour'}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': None, 'description': 'main supplier table', 'columns': {'s_suppkey': {'name': 's_suppkey', 'description': 'SF*10,000 are populated', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 's_name': {'name': 's_name', 'description': 'id of the supplier', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 's_address': {'name': 's_address', 'description': 'address of the supplier', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 's_nationkey': {'name': 's_nationkey', 'description': 'Foreign Key to N_NATIONKEY', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 's_phone': {'name': 's_phone', 'description': 'phone number of the supplier', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 's_acctbal': {'name': 's_acctbal', 'description': 'raw account balance', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}, 's_comment': {'name': 's_comment', 'description': 'additional commentary', 'meta': {}, 'data_type': None, 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'raw.tpch_sf001.supplier', 'created_at': 1706652806.3322837}, 'source.tpch.deutsche_boerse.trading_data': {'database': 'analytics', 'schema': 'boerse', 'name': 'trading_data', 'resource_type': 'source', 'package_name': 'tpch', 'path': 'models/demo_examples/external_sources.yml', 'original_file_path': 'models/demo_examples/external_sources.yml', 'unique_id': 'source.tpch.deutsche_boerse.trading_data', 'fqn': ['tpch', 'demo_examples', 'deutsche_boerse', 'trading_data'], 'source_name': 'deutsche_boerse', 'source_description': 'This is an example of using external sources', 'loader': '', 'identifier': 'trading_data', 'quoting': {'database': None, 'schema': None, 'identifier': None, 'column': None}, 'loaded_at_field': None, 'freshness': {'warn_after': {'count': None, 'period': None}, 'error_after': {'count': None, 'period': None}, 'filter': None}, 'external': {'location': '@boerse', 'file_format': "(type=csv field_delimiter=',' skip_header=1)", 'row_format': None, 'tbl_properties': None, 'partitions': [{'name': 'source_file_name', 'data_type': 'varchar', 'expression': 'metadata$filename'}], 'auto_refresh': False}, 'description': 'The Deutsche Börse Public Data Set consists of trade data aggregated to one minute intervals from the Eurex and Xetra trading systems. It provides the initial price, lowest price, highest price, final price and volume for every minute of the trading day, and for every tradeable security.\n', 'columns': {'ISIN': {'name': 'ISIN', 'description': 'ISIN of the security', 'meta': {}, 'data_type': 'TEXT', 'constraints': [], 'quote': None, 'tags': []}, 'MarketSegment': {'name': 'MarketSegment', 'description': 'The product market segment, following the convention on http://www.eurexchange.com', 'meta': {}, 'data_type': 'TEXT', 'constraints': [], 'quote': None, 'tags': []}, 'UnderlyingSymbol': {'name': 'UnderlyingSymbol', 'description': 'The underlying security', 'meta': {}, 'data_type': 'TEXT', 'constraints': [], 'quote': None, 'tags': []}, 'UnderlyingISIN': {'name': 'UnderlyingISIN', 'description': 'ISIN of any underlying security\t', 'meta': {}, 'data_type': 'TEXT', 'constraints': [], 'quote': None, 'tags': []}, 'Currency': {'name': 'Currency', 'description': 'Currency in which the product is traded\t(ISO 4127)', 'meta': {}, 'data_type': 'TEXT', 'constraints': [], 'quote': None, 'tags': []}, 'SecurityType': {'name': 'SecurityType', 'description': 'Type of instrument', 'meta': {}, 'data_type': 'TEXT', 'constraints': [], 'quote': None, 'tags': []}, 'MaturityDate': {'name': 'MaturityDate', 'description': 'Maturity date of the security', 'meta': {}, 'data_type': 'TEXT', 'constraints': [], 'quote': None, 'tags': []}, 'StrikePrice': {'name': 'StrikePrice', 'description': 'Strike price', 'meta': {}, 'data_type': 'NUMBER', 'constraints': [], 'quote': None, 'tags': []}, 'PutOrCall': {'name': 'PutOrCall', 'description': 'Type of option (string: PUT or CALL)', 'meta': {}, 'data_type': 'TEXT', 'constraints': [], 'quote': None, 'tags': []}, 'MLEG': {'name': 'MLEG', 'description': 'Identifies multi-leg options', 'meta': {}, 'data_type': 'TEXT', 'constraints': [], 'quote': None, 'tags': []}, 'ContractGenerationNumber': {'name': 'ContractGenerationNumber', 'description': 'The generation number for options contracts', 'meta': {}, 'data_type': 'TEXT', 'constraints': [], 'quote': None, 'tags': []}, 'SecurityID': {'name': 'SecurityID', 'description': 'Unique identifier for each contract', 'meta': {}, 'data_type': 'TEXT', 'constraints': [], 'quote': None, 'tags': []}, 'Date': {'name': 'Date', 'description': 'Date of trading period', 'meta': {}, 'data_type': 'DATE', 'constraints': [], 'quote': None, 'tags': []}, 'Time': {'name': 'Time', 'description': 'Minute of trading to which this entry relates', 'meta': {}, 'data_type': 'TEXT', 'constraints': [], 'quote': None, 'tags': []}, 'StartPrice': {'name': 'StartPrice', 'description': 'Trading price at the start of period', 'meta': {}, 'data_type': 'NUMBER', 'constraints': [], 'quote': None, 'tags': []}, 'MaxPrice': {'name': 'MaxPrice', 'description': 'Maximum price over the period', 'meta': {}, 'data_type': 'NUMBER', 'constraints': [], 'quote': None, 'tags': []}, 'MinPrice': {'name': 'MinPrice', 'description': 'Minimum price over the period', 'meta': {}, 'data_type': 'NUMBER', 'constraints': [], 'quote': None, 'tags': []}, 'EndPrice': {'name': 'EndPrice', 'description': 'Trading price at the end of the period', 'meta': {}, 'data_type': 'NUMBER', 'constraints': [], 'quote': None, 'tags': []}, 'NumberOfContracts': {'name': 'NumberOfContracts', 'description': 'Number of contracts traded during the period', 'meta': {}, 'data_type': 'INT', 'constraints': [], 'quote': None, 'tags': []}, 'NumberOfTrades': {'name': 'NumberOfTrades', 'description': 'Number of distinct trades during the period', 'meta': {}, 'data_type': 'INT', 'constraints': [], 'quote': None, 'tags': []}}, 'meta': {}, 'source_meta': {}, 'tags': [], 'config': {'enabled': True}, 'patch_path': None, 'unrendered_config': {}, 'relation_name': 'analytics.boerse.trading_data', 'created_at': 1706652806.3325408}}, 'semantic_models': {'semantic_model.tpch.pizza_orders': {'name': 'pizza_orders', 'resource_type': 'semantic_model', 'package_name': 'tpch', 'path': 'metrics_demo/metrics.yml', 'original_file_path': 'models/metrics_demo/metrics.yml', 'unique_id': 'semantic_model.tpch.pizza_orders', 'fqn': ['tpch', 'metrics_demo', 'pizza_orders'], 'model': "ref('fct_pizza_sales')", 'node_relation': {'alias': 'fct_pizza_sales', 'schema_name': 'dbt_mfuller_sa_demo_test_defer_pizza', 'database': 'mike_fuller_sandbox', 'relation_name': 'mike_fuller_sandbox.dbt_mfuller_sa_demo_test_defer_pizza.fct_pizza_sales'}, 'description': 'Order fact table. This table is at the order grain with one row per order.\n', 'label': None, 'defaults': {'agg_time_dimension': 'order_date'}, 'entities': [{'name': 'order_id', 'type': 'primary', 'description': None, 'label': None, 'role': None, 'expr': None}, {'name': 'dim_pizza', 'type': 'foreign', 'description': None, 'label': None, 'role': None, 'expr': 'pizza_id'}], 'measures': [{'name': 'total_price', 'agg': 'sum', 'description': 'The total price for each order.', 'label': None, 'create_metric': False, 'expr': None, 'agg_params': None, 'non_additive_dimension': None, 'agg_time_dimension': None}], 'dimensions': [{'name': 'order_date', 'type': 'time', 'description': None, 'label': None, 'is_partition': False, 'type_params': {'time_granularity': 'day', 'validity_params': None}, 'expr': None, 'metadata': None}], 'metadata': None, 'depends_on': {'macros': [], 'nodes': ['model.tpch.fct_pizza_sales']}, 'refs': [{'name': 'fct_pizza_sales', 'package': None, 'version': None}], 'created_at': 1706652806.098129, 'config': {'enabled': True}, 'primary_entity': None}, 'semantic_model.tpch.dim_pizza': {'name': 'dim_pizza', 'resource_type': 'semantic_model', 'package_name': 'tpch', 'path': 'metrics_demo/metrics.yml', 'original_file_path': 'models/metrics_demo/metrics.yml', 'unique_id': 'semantic_model.tpch.dim_pizza', 'fqn': ['tpch', 'metrics_demo', 'dim_pizza'], 'model': "ref('dim_pizza')", 'node_relation': {'alias': 'dim_pizza', 'schema_name': 'dbt_mfuller_sa_demo_test_defer', 'database': 'MIKE_FULLER_SANDBOX', 'relation_name': 'MIKE_FULLER_SANDBOX.dbt_mfuller_sa_demo_test_defer.dim_pizza'}, 'description': None, 'label': None, 'defaults': None, 'entities': [{'name': 'dim_pizza', 'type': 'primary', 'description': None, 'label': None, 'role': None, 'expr': 'pizza_id'}], 'measures': [], 'dimensions': [{'name': 'pizza_category', 'type': 'categorical', 'description': None, 'label': None, 'is_partition': False, 'type_params': None, 'expr': None, 'metadata': None}], 'metadata': None, 'depends_on': {'macros': [], 'nodes': ['model.tpch.dim_pizza']}, 'refs': [{'name': 'dim_pizza', 'package': None, 'version': None}], 'created_at': 1706652806.10076, 'config': {'enabled': True}, 'primary_entity': None}}}